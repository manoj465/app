{"version":3,"sources":["src/@universals/globals/timer/types.ts","src/@universals/globals/timer/helper.ts","src/@universals/globals/device/gql.ts","src/@universals/helper/color.ts","src/@universals/globals/user/userGqlFieldsWithNoDevices.ts","src/@universals/globals/globalTypes.ts","src/@universals/globals/user/index.ts","src/@universals/globals/user/helper.ts","src/@universals/globals/user/gql.ts","src/@universals/globals/device/index.ts","src/@universals/globals/device/helper.ts","src/@universals/globals/device/api/index.ts","src/redux/ReduxConstant.ts","src/redux/sagas/sagaBaseWorkers.ts","src/util/logger/index.ts","src/services/db/storage.tsx","src/redux/deviceListReducer/reducer/index.ts","src/redux/sagas/helper.ts","src/redux/deviceListReducer/saga/deviceList.ts","src/util/Color.tsx","src/redux/deviceListReducer/saga/color.saga.ts","src/redux/deviceListReducer/saga/index.ts","src/redux/deviceListReducer/index.ts","src/@universals/universals/venderConf.ts","src/@universals/index.ts","src/services/api/baseErrors.ts","src/services/api/v1/device/auth.api.ts","src/services/api/baseRequest.ts","src/services/api/v1/device/scan.api.ts","src/services/api/v1/device/pair.api.ts","src/services/api/v1/device/saveWiFiConfig.api.ts","src/services/api/v1/cloud/httpApolloQuery.ts","src/services/api/v1/cloud/device/deviceTimersQuery.ts","src/services/api/baseAxios.ts","src/services/api/v1/cloud/device/deviceQueryWithMac.ts","src/services/api/v1/cloud/device/deviceAddMutation.ts","src/services/api/v1/cloud/device/deviceUpdateMutation.ts","src/services/api/v1/cloud/user/userQuery.ts","src/services/api/v1/cloud/user/login.api.ts","src/services/api/v1/cloud/user/signup.api.ts","src/services/api/v1/cloud/user/userUpdate.api.ts","src/services/api/index.ts","src/services/backGroundServices/webSocket.tsx","src/util/DateTimeUtil.tsx","src/util/app.operator/device.operator.ts","src/util/app.operator/user.operator.ts","src/util/app.operator/index.ts","src/redux/helperSideEffect/reducers/HBReducer.ts","src/redux/helperSideEffect/saga/bgServiceSaga.ts","src/redux/helperSideEffect/reducers/AppCTXReducer.ts","src/redux/helperSideEffect/saga/appCTXSagas.ts","src/redux/helperSideEffect/saga/index.ts","src/redux/helperSideEffect/index.ts","src/redux/sagas/index.ts","src/redux/rootReducer.ts","src/redux/index.ts","src/redux/ReduxStore.ts","src/components/common/containers/SafeAreaWithAnimatedVerticalScrollView.tsx","src/components/common/styles/colors.ts","src/components/common/styles/Text.ts","src/components/common/styles/commonStyles.ts","src/components/common/styles/spacing.ts","src/components/common/styles/index.ts","src/components/common/buttons/RectButtonCustom.tsx","src/components/screens/appConfig/index.tsx","src/components/common/BrightnessSlider_optmizedForWeb.tsx","src/components/screens/devicePage/devicePageNavigator/colorPickerScreen/index.tsx","src/components/screens/dashboard/deviceCard/index.tsx","src/components/screens/dashboard/Header.tsx","src/components/screens/dashboard/index.tsx","src/components/common/BrightnessSlider.tsx","src/components/screens/devicePage/DevicePageHeader.tsx","src/components/common/ColorPickerPin.tsx","src/components/common/ColorPicker.tsx","src/components/screens/devicePage/devicePageNavigator/colorPickerScreen/colorPickerSection.tsx","src/components/common/Modes/index.tsx","src/components/common/NewSelector.tsx","src/components/common/Timer/NewTimerDialog.tsx","src/util/UUID_utils.tsx","src/components/common/Timer/index.tsx","src/theme/colors/highlightColors.tsx","src/components/screens/devicePage/devicePageNavigator/modesScreen/index.tsx","src/components/common/text/textField.tsx","src/components/screens/devicePage/devicePageNavigator/settingScreen/index.tsx","src/components/screens/devicePage/index.tsx","src/components/screens/onboarding/WelcomeFooterSlide.tsx","src/components/screens/onboarding/WelcomeSlide.tsx","src/components/screens/onboarding/WelcomeScreen.tsx","src/components/screens/pairing/PairingConnectorScreen1/index.tsx","src/services/webApi/webHooks.ts","src/components/screens/pairing/PairingConnectorScreen2/index.tsx","src/services/webApi/pairAPI_Hook.ts","src/components/screens/pairing/PairingConnectorScreen3/index.tsx","src/components/screens/pairing/index.tsx","src/components/screens/userProfile/userForms/loginForm.tsx","src/components/screens/userProfile/userForms/signupForm.tsx","src/components/screens/userProfile/userForms/userUpdateForm.tsx","src/components/screens/userProfile/userForms/index.tsx","src/components/screens/userProfile/index.tsx","src/routers/MainRouter.tsx","src/Application.tsx","src/services/backGroundServices/index.ts","App.tsx","web-build/register-service-worker.js","assets/icons/splash-icon.png","assets/images/background.jpg","assets/images/1.png","assets/images/colorPicker.png","assets/icons/preset.png","assets/icons/setting.png","assets/images/presetImages/scenes/aurora.png","assets/images/presetImages/scenes/autumn.png","assets/images/presetImages/scenes/deepocean.png","assets/images/presetImages/scenes/spring1.png","assets/images/presetImages/scenes/sunrise.png","assets/images/presetImages/scenes/sunset.png","assets/images/presetImages/scenes/winter.png","assets/images/testIMG.jpg","assets/images/usageMeter.png"],"names":["TIMER_EVENT_TYPE_e","TIMER_DAYTIME_e","TIMER_STATUS_e","getBit","bitIndex","bitHolderNumber","b","t","setBit","convertTimersStringToObj","timersString","log","print","timersObject","JSON","parse","length","stringify","newTimersObject","map","timer","index","H","tempDAYS","daysIndex","DAYS","error","converLocalTimerObjectToBackendString","timers","newTimers","daysInt","forEach","day","Device_fields_compactUserWithNoDevices","HUE_User_fields_no_devices","Device_fields_noUser","getDeviceTimer_query","getDeviceWithMac_query","createNewDevice_mutation","updateDevice_mutation","getHsvFromString","hsvString","hsvStringSplitArray","split","hsv","h","s","v","element","parseInt","console","convert_user_backendToLocal","user","localTimeStamp","ts","convert_user_localToBackend","id","HUE_User_fields","HUE_User_queryWithEmail_","User_queryWithId","HUE_User_createMutation_","HUE_User_authenticateMutation_","HUE_User_updateMutation_","convert_Devices_backendToLocal","devices","socket","device","d_index","convert_Device_backendToLocal","temp_hsv","temp_timers","convert_Device_LocalToBackend","newDevice","IP","Hostname","deviceName","Mac","convert_Device_LocalToBackend_forUpdateMutation","_DEVICE_WIFI_STATE_e","_DEVICE_WIFI_API_ERRORS_e","_reduxConstant","printType","_getBaseAction","type","props","_getWorker","_props","baseAction","worker","_baseWorker","call","callable","shouldTakeLatest","_baseWatcher","takeLatest","takeEvery","storeData","key","value","a","async","AsyncStorage","setItem","warn","getData","getItem","jsonValue","saveAppCTX","Promise","initialState","deviceList","deletedDevices","_reducer","state","action","DEVICELIST_REDUX","DELETED_DEVICELIST_REDUX","deletedDeviceList","isDbState","_actions","deviceListRedux","deletedDeviceListRedux","_delay","ms","res","setTimeout","logger","prefix","_log","printAll","printable","addStack","removeStack","substring","lastIndexOf","getPrefix","_print","canPrint","printPretty","_printPretty","printDeviceList","cprint","item","includes","toUpperCase","temp","this","DEVICELIST_SAGA","containersWorker","saveToDB","put","_deviceListReduxAction","undefined","_________deviceListDB_action","_deviceListSaga_watcher","_deviceListSaga_action","DEVICE_SAGA","select","deviceReducer","devicelist","find","_device","push","_deviceSaga_watcher","_deviceSaga_action","DEVICELIST_DB_SAGA","containersDBWorker","_deviceListDB_watcher","convertHSVToRgb","r","g","i","f","p","q","Math","max","min","round","floor","convertHSVToRgbShortRange","_convertRGBToHex","_r","toString","_g","_b","convertRGBToHex","COLOR_UPDATE_SAGA","deviceMac","gestureState","beforeUpdate","newDeviceState","onActionComplete","HBReducer","HBSocketList","_deviceList","all","tempdevice","tempCol","send","State","END","preDeviceState","Date","now","newDeviceList","_colorSaga_watcher","_colorSaga_action","_saga","deviceListSaga","deviceSaga","colorSaga","_reducerActions","venderConf","venderPrefix","UNIVERSALS","axiosBaseErrors_e","authApiErrors_e","timeoutError","errCode","TIMEOUT","networkError","NETWORK_ERR","unknownRouteError","UNKNOWN_ROUTE","checkForHttpErrors","err","message","indexOf","errMsg","response","status","REQUEST_FAILED","data","defaultRequest","resolveData","resolve","reject","Axios","request","method","url","address","path","body","headers","params","timeout","config","then","RES","ERR","NO_DATA","catch","tempError","ScanApiErrors_e","v1","AUTH_API_UNHANDLED","queryResponse","pairApiErrors_e","_params","URLSearchParams","append","SCAN_API_UNHANDLED","saveWifiConfigApiErrors_e","ssid","pass","PAIR_API_UNHANDLED","apolloErrors_e","SAVE_WIFI_CONFIG_API_UNHANDLED","deviceQueryApiErrors_e","fun","query","variables","processErrors","errors","extensions","code","APOLLO_BAD_QUERY","Array","tempErr","QUERY_FAILED","APOLLO_UNHANDLED","deviceQueryWithMacApiErrors_e","makeHttpQuery","GLOBALS","HueDevice","DEVICE_QUERY_API_UNHANDLED","createdeviceMutationApiErrors_e","allHueDevices","DEVICE_QUERY_NO_DEVICES_FOUND","updateDeviceMutationApiErrors_e","userID","CREATE_DEVICE_MUTATION_API_DUPLICATE_MAC_ERROR","createHueDevice","CREATE_DEVICE_MUTATION_API__UNHANDLED","userQueryApiErrors_e","updateHueDevice","UPDATE_DEVICE_MUTATION_API__UNHANDLED","loginApiErrors_e","User","USER_FETCH_API_UNHANDLED","signupApiErrors_e","email","password","LOGIN_API_INCORRECT_PASSWORD","LOGIN_API_UNKNOWN_EMAIL","authenticateUserWithPassword","LOGIN_API_UNHANDLED","userUpdateApiErrors_e","userName","SIGNUP_API_PASSWORD_TOO_SHORT","SIGNUP_API_PASSWORD_NOT_STRONG","SIGNUP_API_EMAIL_ALREADY_REGISTERED","createUser","SIGNUP_API_UNHANDLED","_var","USER_UPDATE_API_PASSWORD_EASY","USER_UPDATE_API_PASSWORD_TOO_SHORT","USER_UPDATE_API_ID_INCORRECT_OR_NOT_PROVIDED","updateUser","USER_UPDATE_API_UNHANDLED","API","ID","random","getWebSocket","ipAddr","onOpen","onMsg","onErr","onClose","wsUrl","WebSocket","ws","onopen","e","onerror","onmessage","m","onclose","getCurrentTimeStampInSeconds","getTimeDiffNowInMs","timeStamp","loginValidationError_e","beforeUpdateDeviceSideEffect","add_updateDevices","newDevices","cloudState","requireReduxUpdate","reduxStore","store","getState","newDevice_index","localStateDevice","localStateDeviceIndex","findIndex","preState","filter","splice","deviceMatchFromDeletedDeviceList","dispatch","actions","devicesFoundInCloudState","removeDevice","__foo","colorUpdate","deviceOperation","cmd","logoutFunction","onLogout","appCTX","userSagaAction","HBSocketClear","signupValidationError_e","loginFunction","onLoginFailed","onValidateDataFailed","onLoginSuccess","LOGIN_VALIDATION_EMAIL_REQUIRED","cloudAPI","loginAPI","userStoreUpdateFunction","deviceOperator","FBLoginValidationError_e","signupFunction","re_password","onSignupFailed","onSignupSuccess","SIGNUP_VALIDATION_EMAIL_INVALID","SIGNUP_VALIDATION_USERNAME_REQUIRED","SIGNUP_VALIDATION_USERNAME_TOO_SHORT","SIGNUP_VALIDATION_PASSWORD_INVALID","SIGNUP_VALIDATION_PASSWORD_MISMATCH","signupAPI","updateValidationError_e","fbLoginFunction","Facebook","appId","permissions","fbProps","fetch","token","json","fbRes","fbEmail","fbName","name","Error","onFbLoginSuccess","Alert","alert","localUserState","appCTXReducer","latestUserState","updateFunction","onUpdateFailed","onUpdateSuccess","UPDATE_VALIDATION_ID_REQUIRED","UPDATE_VALIDATION_USERNAME_INVALID","UPDATE_VALIDATION_NEW_PASSWORD_TOO_SHORT","UPDATE_VALIDATION_PASSWORD_MISMATCH","UPDATE_VALIDATION_NOTHING_TO_UPDATE","userUpdateAPI","appOperator","logoutRes","loginRes","signupRes","updateRes","fbLoginRes","HBDevieclist_msgSent","HBDevieclist_msgRec","HB_DEVICELIST_REDUX","HBDeviceList","HB_DEVICELIST_MSG_SENT","deviceFound","newList","lastMsgSentTs","HB_DEVICELIST_MSG_REC","_deviceFound","_newList","lastMsgRecTs","HBDeviceList_msgRecType","HB_SOCKET_LIST","newItem","__newList","reduxConstant","HB_SOCKET_LIST_CLEAR","HBList","HBMsgSent","HBMsgRec","HBSocket","BG_SERVICE_SAGA","iteration","performSideEffects","socketContainer","handleDeviceInMapLoop","localSocketContainer","api","deviceAPI","authAPI","msg","bgServiceWatcher","bgServiceSagaAction","userQuery","userRes","updateDeviceMutation","updateApiRes","deviceQueryWithMac","createDeviceMutation","createDeviceApiRes","welcomeScreenStatus","USER_REDUX","__state","APPCTX_REDUX","userRedux","appCTXRedux","APPCTX_DB_SAGA","appCtxDbWorker","appCtxDBWatcher","appCtxDBAction","APPCTX_SAGA","appCtxSagaWorker","appCtxSagaWatcher","appCtxSagaAction","USER_SAGA","appCtx","newappCtx","userSagaWatcher","appCTX_actions","HBReducer_actions","rootSaga","deviceReducerSaga","bgServiceSaga","require","combineReducers","deviceListInitailState","appCtxInitailState","HBInitailState","rootReducer","deviceListAction","helperSideEffectActions","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","_configureReduxStore","style","children","SafeAreaView","width","Animated","ScrollView","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","colors","primary","secondary","tertiary","warning","feather","StyleSheet","create","primaryTextColors","color","secondaryTextColor","tertiaryTextColor","warningText","textFeather","common","_headingCommonStyles","marginHorizontal","fontWeight","H1","fontSize","H2","H3","H4","H5","H6","H7","round50","height","borderRadius","shadow","backgroundColor","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","absoluteFill","position","top","left","Text","commonStyles","spacing","NewRectButton","buttonStyle","textStyle","text","onPress","useReanimated","View","STYLES","_styles","buttonContainer","innerbutton","textAlign","TouchableOpacity","NewRectButtonWithChildren","innerCompStyle","overflow","marginVertical","display","justifyContent","AppConfigScreen","navigation","paddingHorizontal","canGoBack","pop","Ionicons","paddingRight","paddingBottom","paddingTop","marginTop","size","heading","Icon","FontAwesome","replace","MaterialIcons","paddingVertical","Image","opacity","source","MenuHeading","flexDirection","borderBottomColor","borderBottomWidth","MenuItem","viewTypeEnum","Dimensions","get","initBrValue","bgColor","pinState","useValue","UNDETERMINED","useState","sliderWidth","setSliderWidth","offset","offsetX","clamp","BR","multiply","divide","useCode","ACTIVE","updateColor","alignSelf","marginBottom","ReText","concat","LinearGradient","onLayout","event","nativeEvent","layout","start","x","y","end","BrightnessSlider","gestureHandler","translationX","temp1state","block","set","cond","eq","add","useNativeDriver","onGestureEvent","onHandlerStateChange","sliderHeight","transform","translateX","borderWidth","borderColor","Component","DeviceCard","setToBeDeletedDevice","rgb2","rgb1","hex1","hex2","showActionSheetWithOptions","useActionSheet","styles","container","activeOpacity","navigate","flex","zIndex","right","paddingLeft","options","cancelButtonIndex","destructiveButtonIndex","showSeparators","Entypo","margin","brightnessSliderContainer","marginLeft","AntDesign","horizontal","marginRight","Heading","subHeading","primaryColor","Child","SimpleLineIcons","MaterialCommunityIcons","activateKeepAwake","QuickActionBlock","padding","Dashboard","route","useSelector","scrollViewRef","useRef","set_state_deleteDeviceModal","Header","ref","deviceListContainer","ScreenName","navigatorMenu","bottom","DevicePageHeader","nameContainer","brightnessNumber","backButton","ColorPickerPin","canvasWidth","CENTER","polar2Canvas","theta","PI","radius","sqrt","v2","vec","canvas2Polar","l","hue","modulo","saturation","transX","transY","_state","pow","translate","surface","ColorPicker","ColorPickerSection","DeviceColorPickerScreen","DEVICE_COLOR_PICKER_SCREEN","view","hsv2color","headBackgroundColor","section2","header_container","header_AnimatedView","minHeight","flexWrap","hex","borderTopLeftRadius","borderTopRightRadius","modes","img","Modes","useDispatch","FlatList","keyExtractor","_","renderItem","NewSelector","initValue","_rowHeight","_width","maxVal","setIndex","headingText","scrollContainer","button","numberContainer","rotate","daysSelectorArray","hrs","_data","val","mins","daytimeSelectorData","NewTimerDialog","timerInEditor","setTimerInEditor","hrIndex","setHrIndex","minIndex","setMinIndex","dtIndex","setDtIndex","setTimers","ON","etIndex","setEtIndex","days","setDays","useEffect","ET","DT","Modal","animationType","transparent","visible","onShow","deviceTimersQuery","timersObj","Feather","middleContainerCommonView","OFF","once","daily","newDaysArray","_item","_index","newTimer","UNI","c","M","STATUS","ONCE","REPEAT","timerFound","newTimersObj","Timer","deviceFromStore","timerFromProp","timerBlockConatiner","borderLeftColor","borderLeftWidth","AM","weekDaysConatiner","weekDayBlock","borderTopColor","borderTopWidth","borderRightColor","borderRightWidth","deleteTimerObj","deleteTimerObjIndex","DeviceModesScreen","placeholder","highlightColor","setValue","TextInput","onChangeText","DeviceSettingScreen","setName","tempDevice","Stack","createStackNavigator","Navigator","initialRouteName","screenOptions","headerShown","cardStyleInterpolator","CardStyleInterpolators","forHorizontalIOS","cardStyle","Screen","component","initialParams","title","description","lineHeight","nextButton","WelcomeFooterSlide","footerContent","last","SLIDE_HEIGHT","label","labelContainer","WelcomeSlide","translateY","slideContainer","borderBottomRightRadius","footer","slides","WelcomeScreen","scroll","onScroll","onScrollEvent","interpolateColor","inputRange","outputRange","slide","snapToInterval","decelerationRate","bounces","scrollEventThrottle","absoluteFillObject","Platform","OS","current","getNode","scrollTo","animated","PairingConnectorScreen1","interval","setInterval","clearInterval","getCurrentTimeInSeconds","minWidth","Linking","canOpenURL","openURL","animation","autoPlay","loop","useScanApiHook","autoStart","setData","loading","load","scanAPI","pairing_state_e","deviceNames","PairingConnectorScreen2","Wifi","setWifi","setDeviceName","selected","networks","Vibration","vibrate","validateNewDeviceData","opID","validateDeviceName","cancelable","sameDeviceNameFound","__device","onInteraction","newContainerList","reset","routes","conatiner","headerContainer","headerContainerText","placeholderTextColor","numColumns","ssidSelectorContainer","refreshButton","refreshButton_textCon","selectorList","positionY","interpolate","scale","scaleX","scaleY","pairButton","skipButton","usePairApiHook","IP_ADD","_onMsg","IDLE","pairStatus","setPairStatus","setSocket","getSocket","result","PAIR_READY","_socket","WIFI_STATE","deviceApi","DEVICE_WL_CONNECT_FAILED","PAIR_WRONG_PASSWORD","DEVICE_WL_NO_SSID_AVAIL","PAIR_NO_SSID","DEVICE_WL_CONNECTED","PAIR_SUCCESS","PAIR_UNKNOWN_ERROR","pairAPI","PAIR_REQUEST_SUCCESS_N_CONNECTING","saveWiFiConfigAPI","SAVE_CONFIG_SUCCESS","SAVE_CONFIG_ERROR","groupNames","PairingConnectorScreen3","setPass","groupName","setGroupName","pair","hitSaveAPI","card","secureTextEntry","Button1_Container","Button1","Button1_Text","goBackButton","BGLayer_layout1","BGLayer_layout1_TextInput","BGLayer_layout2","Button2_Container","Button2","Button2_Text","pairingRouter","LoginHeader","setHeaderView","setPassword","setEmail","maxWidth","autoCompleteType","SignUpHeader","setRePassword","setUserName","UserUpdateForm","oldPassword","setOldPassword","userPageView","setUserPageView","contentView","borderBottomLeftRadius","UserScreen","CustomTextField","MainRouter","initialScreen","UserProfileScreen","DevicePage","Application","runner","_dispatchBgSagaAction","timerFun","startInterval","client","ApolloClient","uri","cache","InMemoryCache","App","appLoading","setAppLoading","setappCTX","bgService","useMemo","BGService","SplashScreen","_appCTX","loadAppData","NavigationContainer","fallback","StatusBar","navigator","window","addEventListener","serviceWorker","register","scope","info","module","exports"],"mappings":"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","file":"static/js/app.af55ad95.chunk.js","sourcesContent":["export enum TIMER_EVENT_TYPE_e {\r\n    ON,\r\n    OFF\r\n}\r\n\r\nexport enum TIMER_DAYTIME_e {\r\n    AM,\r\n    PM\r\n}\r\n\r\nexport enum TIMER_STATUS_e {\r\n    INACTIVE,\r\n    ONCE,\r\n    REPEAT\r\n}\r\n\r\nexport type TIMER_DAYS_t = [boolean, boolean, boolean, boolean, boolean, boolean, boolean]\r\n\r\n/** @description >- Client side Local representation of timer Object */\r\nexport interface TIMER_t {\r\n    id: string,\r\n    H: number,\r\n    M: number,\r\n    DT: TIMER_DAYTIME_e,\r\n    ET: TIMER_EVENT_TYPE_e,\r\n    STATUS: TIMER_STATUS_e,\r\n    DAYS: TIMER_DAYS_t,\r\n}\r\n\r\n\r\nexport const getBit = (bitIndex: number, bitHolderNumber: number) => {\r\n    let b = false;\r\n    if (bitIndex >= 0) {\r\n        let t = 1;\r\n        let nt = bitHolderNumber >> (bitIndex);\r\n        t = nt & t;\r\n        if (t > 0)\r\n            b = true;\r\n    }\r\n    return b;\r\n}\r\n\r\nexport const setBit = (bitIndex: number, bitHolderNumber: number, b: boolean) => {\r\n    if (b) {\r\n        let t = 1;\r\n        t = t << bitIndex;\r\n        bitHolderNumber = bitHolderNumber | t;\r\n    }\r\n    return bitHolderNumber\r\n};","import { logger } from \"../../../util/logger\"\r\nimport { TIMER_t } from \"./types\"\r\n\r\n\r\n\r\n\r\n/*\r\n'########:'##::::'##:'########::::::'######::'########:'########:::::::::'##:::::'#######::'########::::::::'##:\r\n... ##..:: ###::'###: ##.... ##::::'##... ##:... ##..:: ##.... ##::::::::. ##:::'##.... ##: ##.... ##::::::: ##:\r\n::: ##:::: ####'####: ##:::: ##:::: ##:::..::::: ##:::: ##:::: ##:'#####::. ##:: ##:::: ##: ##:::: ##::::::: ##:\r\n::: ##:::: ## ### ##: ########:::::. ######::::: ##:::: ########::.....::::. ##: ##:::: ##: ########:::::::: ##:\r\n::: ##:::: ##. #: ##: ##.. ##:::::::..... ##:::: ##:::: ##.. ##:::'#####::: ##:: ##:::: ##: ##.... ##:'##::: ##:\r\n::: ##:::: ##:.:: ##: ##::. ##:::::'##::: ##:::: ##:::: ##::. ##::.....::: ##::: ##:::: ##: ##:::: ##: ##::: ##:\r\n::: ##:::: ##:::: ##: ##:::. ##::::. ######::::: ##:::: ##:::. ##:::::::: ##::::. #######:: ########::. ######::\r\n:::..:::::..:::::..::..:::::..::::::......::::::..:::::..:::::..:::::::::..::::::.......:::........::::......:::\r\n*/\r\n\r\n\r\ninterface convertTimersStringToObj_props {\r\n    timersString?: string\r\n    log?: logger\r\n}\r\ntype convertTimersStringToObj_t = (props: convertTimersStringToObj_props) => TIMER_t[] | undefined\r\nexport const convertTimersStringToObj: convertTimersStringToObj_t = ({ timersString, log }) => {\r\n    log?.print(\"timersString to convert = \" + timersString)\r\n    if (timersString) {\r\n        try {\r\n            let timersObject: (Omit<TIMER_t, \"DAYS\"> & { DAYS: number })[] = JSON.parse(timersString)\r\n            if (timersObject && timersObject.length) {\r\n                log?.print(\"timer array size is \" + timersObject.length)\r\n                log?.print(JSON.stringify(timersObject, null, 2))\r\n                const newTimersObject = timersObject.map((timer, index) => {\r\n                    log?.print(\"timer \" + index + \" HR is \" + timer.H)\r\n                    let tempDAYS: [boolean, boolean, boolean, boolean, boolean, boolean, boolean,] = [false, false, false, false, false, false, false]\r\n                    for (let daysIndex = 0; daysIndex < 7; daysIndex++) {\r\n                        tempDAYS[daysIndex] = getBit(daysIndex, timer.DAYS)\r\n                    }\r\n                    let tempTimer: TIMER_t = { ...timer, DAYS: tempDAYS }\r\n                    return tempTimer\r\n                });\r\n                log?.print(JSON.stringify(newTimersObject, null, 2))\r\n                return newTimersObject\r\n            } else {\r\n                log?.print(\"timers array parsing failed\")\r\n            }\r\n        } catch (error) {\r\n            log?.print(\"error >> \" + error)\r\n            //console.log(error)\r\n        }\r\n    }\r\n    return undefined\r\n}\r\n\r\n\r\n/*\r\n'########:'##::::'##:'########::::::'#######::'########::::::::'##::::::::'##:::::'######::'########:'########::\r\n... ##..:: ###::'###: ##.... ##::::'##.... ##: ##.... ##::::::: ##::::::::. ##:::'##... ##:... ##..:: ##.... ##:\r\n::: ##:::: ####'####: ##:::: ##:::: ##:::: ##: ##:::: ##::::::: ##:'#####::. ##:: ##:::..::::: ##:::: ##:::: ##:\r\n::: ##:::: ## ### ##: ########::::: ##:::: ##: ########:::::::: ##:.....::::. ##:. ######::::: ##:::: ########::\r\n::: ##:::: ##. #: ##: ##.. ##:::::: ##:::: ##: ##.... ##:'##::: ##:'#####::: ##:::..... ##:::: ##:::: ##.. ##:::\r\n::: ##:::: ##:.:: ##: ##::. ##::::: ##:::: ##: ##:::: ##: ##::: ##:.....::: ##:::'##::: ##:::: ##:::: ##::. ##::\r\n::: ##:::: ##:::: ##: ##:::. ##::::. #######:: ########::. ######::::::::: ##::::. ######::::: ##:::: ##:::. ##:\r\n:::..:::::..:::::..::..:::::..::::::.......:::........::::......::::::::::..::::::......::::::..:::::..:::::..::\r\n*/\r\n\r\n\r\n\r\ninterface converLocalTimerObjectToBackendString_props {\r\n    timers: TIMER_t[]\r\n    log?: logger\r\n}\r\ntype converLocalTimerObjectToBackendString_t = (props: converLocalTimerObjectToBackendString_props) => string | undefined\r\nexport const converLocalTimerObjectToBackendString: converLocalTimerObjectToBackendString_t = ({ timers, log }) => {\r\n    let newTimers = timers.map((timer) => {\r\n        return {\r\n            ...timer, DAYS: (() => {\r\n                let daysInt = 0\r\n                timer.DAYS.forEach((day, index) => {\r\n                    log?.print(\"before - index is \" + index + \" number is \" + daysInt)\r\n                    daysInt = setBit(index, daysInt, day)\r\n                    log?.print(\"after - index is \" + index + \" number is \" + daysInt)\r\n                });\r\n                return daysInt\r\n            })()\r\n        }\r\n    })\r\n    return JSON.stringify(newTimers)\r\n}\r\n\r\n\r\nconst getBit = (bitIndex: number, bitHolderNumber: number) => {\r\n    let b = false;\r\n    if (bitIndex >= 0) {\r\n        let t = 1;\r\n        let nt = bitHolderNumber >> (bitIndex);\r\n        t = nt & t;\r\n        if (t > 0)\r\n            b = true;\r\n    }\r\n    return b;\r\n}\r\n\r\nconst setBit = (bitIndex: number, bitHolderNumber: number, b: boolean) => {\r\n    if (b) {\r\n        let t = 1;\r\n        t = t << bitIndex;\r\n        bitHolderNumber = bitHolderNumber | t;\r\n    }\r\n    return bitHolderNumber\r\n};","import { HUE_User_fields_no_devices } from \"../user/userGqlFieldsWithNoDevices\"\r\n\r\n\r\n\r\nexport const Device_fields_compactUserWithNoDevices = `id\r\nHostname\r\ndeviceName\r\nMac\r\nIP\r\nssid\r\nhsv\r\ngroupName\r\nlastState\r\ntimers\r\nts\r\nuser{\r\n    ${HUE_User_fields_no_devices}\r\n}`\r\n\r\n\r\n\r\nexport const Device_fields_noUser = `id\r\nHostname\r\ndeviceName\r\nMac\r\nIP\r\nssid\r\nhsv\r\ngroupName\r\nlastState\r\ntimers\r\nts`\r\n\r\n\r\nexport const getDeviceTimer_query = `query($id:ID!){\r\n    HueDevice(where:{id:$id}){\r\n      id\r\n      timers\r\n      ts\r\n    }\r\n  }`\r\n\r\nexport const getDeviceWithMac_query = `query($Mac: String!) {\r\n    allHueDevices(where: { Mac: $Mac }, first: 1) {\r\n    ${Device_fields_noUser}\r\n    }\r\n  }`\r\n\r\nexport const createNewDevice_mutation = `mutation(\r\n    $userID:ID!\r\n    $Mac:String!,\r\n    $deviceName:String,\r\n    $Hostname:String,\r\n    $IP:String\r\n    $ssid:String\r\n    $hsv:String\r\n    $groupName:String\r\n    $lastState:String\r\n    $timers:String\r\n  ){\r\n    createHueDevice(data:{\r\n      Mac:$Mac,\r\n      deviceName:$deviceName,\r\n      Hostname:$Hostname,\r\n      IP:$IP\r\n      ssid:$ssid\r\n      hsv:$hsv\r\n      groupName:$groupName\r\n      lastState:$lastState\r\n      timers:$timers\r\n      user:{connect:{id:$userID}}\r\n    }){\r\n    ${Device_fields_noUser}\r\n    }\r\n  }`\r\n\r\n\r\nexport const updateDevice_mutation = `mutation(\r\n  $id:ID!,\r\n  $deviceName:String,\r\n\t$IP:String\r\n\t$ssid:String\r\n\t$hsv:String\r\n\t$groupName:String\r\n\t$lastState:String\r\n\t$timers:String\r\n  $ts:Int\r\n){\r\n  updateHueDevice(\r\n    id:$id,\r\n    data:{\r\n    deviceName:$deviceName,\r\n\t\tIP:$IP\r\n\t\tssid:$ssid\r\n\t\thsv:$hsv\r\n\t\tgroupName:$groupName\r\n\t\tlastState:$lastState\r\n\t\ttimers:$timers\r\n    ts:$ts\r\n  }){\r\n   ${Device_fields_noUser}\r\n  }\r\n}`","\r\n\r\n\r\n\r\n/*\r\n:'######::'########:'########::'####:'##::: ##::'######::::::::::'##::::'##::::'##::'######::'##::::'##:::::'#######::'########::::::::'##:'########::'######::'########:\r\n'##... ##:... ##..:: ##.... ##:. ##:: ###:: ##:'##... ##:::::::::. ##::: ##:::: ##:'##... ##: ##:::: ##::::'##.... ##: ##.... ##::::::: ##: ##.....::'##... ##:... ##..::\r\n ##:::..::::: ##:::: ##:::: ##:: ##:: ####: ##: ##:::..:::'#####::. ##:: ##:::: ##: ##:::..:: ##:::: ##:::: ##:::: ##: ##:::: ##::::::: ##: ##::::::: ##:::..::::: ##::::\r\n. ######::::: ##:::: ########::: ##:: ## ## ##: ##::'####:.....::::. ##: #########:. ######:: ##:::: ##:::: ##:::: ##: ########:::::::: ##: ######::: ##:::::::::: ##::::\r\n:..... ##:::: ##:::: ##.. ##:::: ##:: ##. ####: ##::: ##::'#####::: ##:: ##.... ##::..... ##:. ##:: ##::::: ##:::: ##: ##.... ##:'##::: ##: ##...:::: ##:::::::::: ##::::\r\n'##::: ##:::: ##:::: ##::. ##::: ##:: ##:. ###: ##::: ##::.....::: ##::: ##:::: ##:'##::: ##::. ## ##:::::: ##:::: ##: ##:::: ##: ##::: ##: ##::::::: ##::: ##:::: ##::::\r\n. ######::::: ##:::: ##:::. ##:'####: ##::. ##:. ######:::::::::: ##:::: ##:::: ##:. ######::::. ###:::::::. #######:: ########::. ######:: ########:. ######::::: ##::::\r\n:......::::::..:::::..:::::..::....::..::::..:::......:::::::::::..:::::..:::::..:::......::::::...:::::::::.......:::........::::......:::........:::......::::::..:::::\r\n*/\r\n\r\nimport { logger } from \"../../util/logger\";\r\n\r\n\r\ninterface getHsvFromString_props {\r\n    hsvString: string\r\n    log?: logger\r\n}\r\ntype getHsvFromString_t = (props: getHsvFromString_props) => { h: number, s: number, v: number } | undefined\r\nexport const getHsvFromString: getHsvFromString_t = ({ hsvString, log }) => {\r\n    const hsvStringSplitArray = hsvString.split(\"-\")\r\n    const hsv = { h: 0, s: 0, v: 0 }\r\n    if (hsvStringSplitArray.length == 3) {\r\n        hsvStringSplitArray.forEach((element, index) => {\r\n            log?.print(\"int at index \" + index + \" is \" + parseInt(element))\r\n        });\r\n        hsv.h = parseInt(hsvStringSplitArray[0])\r\n        hsv.s = parseInt(hsvStringSplitArray[1])\r\n        hsv.v = parseInt(hsvStringSplitArray[2])\r\n        return hsv\r\n    } else {\r\n        console.log(\"invalid hsv string\")\r\n    }\r\n    return undefined\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n'########:'########::'######::'########:::::'######:::'#######::'########::'########:\r\n... ##..:: ##.....::'##... ##:... ##..:::::'##... ##:'##.... ##: ##.... ##: ##.....::\r\n::: ##:::: ##::::::: ##:::..::::: ##::::::: ##:::..:: ##:::: ##: ##:::: ##: ##:::::::\r\n::: ##:::: ######:::. ######::::: ##::::::: ##::::::: ##:::: ##: ##:::: ##: ######:::\r\n::: ##:::: ##...:::::..... ##:::: ##::::::: ##::::::: ##:::: ##: ##:::: ##: ##...::::\r\n::: ##:::: ##:::::::'##::: ##:::: ##::::::: ##::: ##: ##:::: ##: ##:::: ##: ##:::::::\r\n::: ##:::: ########:. ######::::: ##:::::::. ######::. #######:: ########:: ########:\r\n:::..:::::........:::......::::::..:::::::::......::::.......:::........:::........::\r\n*/\r\n\r\n/* {\r\n    (() => {\r\n        console.log(\"test code begin\")\r\n        let hsv = getHsvFromString({ hsvString: \"0-100-110\" })\r\n        if (hsv) {\r\n            console.log(\"h is \" + hsv?.h + \", s is \" + hsv?.s + \", v is \" + hsv?.v)\r\n        } else {\r\n            console.log(\"could not convert string to hsv\")\r\n        }\r\n    })()\r\n} */\r\n\r\n/* {\r\n    (() => {\r\n        //const timersString = \"[{\\\"H\\\":\\\"11\\\",\\\"M\\\":\\\"30\\\",\\\"DT\\\":0,\\\"DAYS\\\":1234,\\\"ET\\\":0,\\\"STATUS\\\":1234}, {\\\"H\\\":\\\"12\\\",\\\"M\\\":\\\"30\\\",\\\"DT\\\":0,\\\"DAYS\\\":1234,\\\"ET\\\":0,\\\"STATUS\\\":1234}]\"\r\n        //let timers = convertTimersStringToObj({ timersString })\r\n        let daysNumber = 0\r\n        for (let index = 0; index < 7; index++) {\r\n            daysNumber = setBit(index, daysNumber, true)\r\n            console.log(\"number now is \" + daysNumber)\r\n        }\r\n    })()\r\n} */","/**\r\n * @description gql `userFields` wit no devices children\r\n * \r\n * @imp this module is exported from here to break the import cycle between `../user/gql.ts` and `../device/gql.ts` \r\n */\r\nexport const HUE_User_fields_no_devices = `id\r\nuserName\r\nemail\r\nts`","export * from \"./user\"\r\nexport * from \"./device\"\r\nexport * from \"./timer\"\r\n\r\n\r\n\r\nexport interface err_i { errCode: \"UNKNOWN_ERR\" | \"NO_USER\" | \"USER_CREATION_FAILED\" | \"DUPLICATE_EMAIL\" | \"PASSWORD_MIN_LENGTH\", errMsg: string, error: any }","export * from \"./types\"\r\nexport * from \"./helper\"\r\nexport * from \"./gql\"\r\n","import UNIVERSALS from \"../..\";\r\n\r\ntype convert_user_backendToLocal_t = (props: { user: UNIVERSALS.GLOBALS.User_t }) => UNIVERSALS.GLOBALS.USER_t\r\nexport const convert_user_backendToLocal: convert_user_backendToLocal_t = ({ user }) => {\r\n    return {\r\n        ...user,\r\n        localTimeStamp: user.ts\r\n    }\r\n}\r\n\r\n\r\n\r\ntype convert_user_localToBackend_t = (props: { user: UNIVERSALS.GLOBALS.USER_t }) => UNIVERSALS.GLOBALS.User_t\r\nexport const convert_user_localToBackend: convert_user_localToBackend_t = ({ user }) => {\r\n    return {\r\n        ...user,\r\n        id: user.id ? user.id : \"\",\r\n        ts: user.localTimeStamp\r\n    }\r\n}","import { Device_fields_noUser } from \"../device/gql\"\r\nimport { HUE_User_fields_no_devices } from \"./userGqlFieldsWithNoDevices\"\r\n\r\nexport const HUE_User_fields = `id\r\nuserName\r\nemail\r\nts\r\ndevices{\r\n  ${Device_fields_noUser}\r\n}`\r\n\r\n/** \r\n * @param email email id to filter user\r\n * \r\n * @description find first user matching email\r\n * \r\n * @returns USER` object WithDeviceList if found else empty array\r\n */\r\nexport const HUE_User_queryWithEmail_ = (`query(\r\n$email:String!\r\n){\r\nallUsers(where:{email:$email}, first:1){\r\n  ${HUE_User_fields}\r\n}\r\n}`)\r\n\r\n\r\nexport const User_queryWithId = `query(\r\n  $id:ID!\r\n){\r\n  User(where:{id:$id}){\r\n    ${HUE_User_fields}\r\n\t}\r\n}`\r\n\r\n/**\r\n * @param userName \r\n * @param email `isUnique` `isRequired`\r\n * @param password `min length 8` `isRequired` for user providing email. not available for temp User\r\n * \r\n * @description mutation query for adding new user\r\n * \r\n * @returns USER` object WithDeviceList if found else empty array\r\n */\r\nexport const HUE_User_createMutation_ = (`mutation(\r\n  $userName:String,\r\n  $email:String!,\r\n  $password:String\r\n){\r\n  createUser(data:{\r\n    userName:$userName,\r\n    email:$email,\r\n    password:$password\r\n  }){\r\n    ${HUE_User_fields_no_devices}\r\n  }\r\n}`)\r\n\r\n\r\n/**\r\n * @param email\r\n * @param password\r\n * \r\n * @returns `HUE_User_t` with devices\r\n */\r\nexport const HUE_User_authenticateMutation_ = (`mutation(\r\n  $email:String!,\r\n  $password:String!\r\n){\r\n  authenticateUserWithPassword(email:$email, password:$password){\r\n    item{\r\n      ${HUE_User_fields}\r\n    }\r\n  }\r\n}`)\r\n\r\nexport const HUE_User_updateMutation_ = (`mutation($id:ID!, $password:String, $userName:String){\r\n  updateUser(id:$id, data:{\r\n    password:$password,\r\n    userName:$userName\r\n  }){\r\n    ${HUE_User_fields}\r\n  }\r\n}`)","export * from \"./types\"\r\nexport * from \"./gql\"\r\nexport * from \"./helper\"\r\nimport * as deviceApi from \"./api\"\r\n\r\nexport { deviceApi }","import { DEVICE_t, Device_t } from \"../globalTypes\"\r\nimport { logger } from \"../../../util/logger\"\r\nimport { convertTimersStringToObj, converLocalTimerObjectToBackendString } from \"../timer\"\r\nimport { getHsvFromString } from \"../../helper/color\"\r\n\r\ntype convert_Devices_backendToLocal_t = (props: { devices: Device_t[], socket?: any, log?: logger }) => DEVICE_t[]\r\n//@ts-ignore\r\nexport const convert_Devices_backendToLocal: convert_Devices_backendToLocal_t = ({ devices, socket = undefined, log }) => {\r\n    return devices.map((device, d_index) => {\r\n        return convert_Device_backendToLocal({ device })\r\n    })\r\n}\r\n\r\ntype convert_Device_backendToLocal_t = (props: { device: Device_t, log?: logger }) => DEVICE_t\r\nexport const convert_Device_backendToLocal: convert_Device_backendToLocal_t = ({ device, log }) => {\r\n    let temp_hsv = getHsvFromString({ hsvString: device.hsv })\r\n    let temp_timers = convertTimersStringToObj({ timersString: device.timers })\r\n    return {\r\n        ...device,\r\n        hsv: temp_hsv ? temp_hsv : { h: 0, s: 100, v: 100 },\r\n        timers: temp_timers ? temp_timers : [],\r\n        localTimeStamp: device.ts\r\n    }\r\n}\r\n\r\ntype convert_Device_LocalToBackend_t = (props: { device: DEVICE_t, log?: logger }) => Device_t\r\nexport const convert_Device_LocalToBackend: convert_Device_LocalToBackend_t = ({ device, log }) => {\r\n    const newDevice: Device_t = {\r\n        id: device.id ? device.id : \"\",\r\n        hsv: device.hsv.h + \"-\" + device.hsv.s + \"-\" + device.hsv.v,\r\n        IP: device.IP,\r\n        Hostname: device.Hostname,\r\n        deviceName: device.deviceName,\r\n        Mac: device.Mac,\r\n        ts: device.localTimeStamp\r\n    }\r\n    if (device.timers)\r\n        newDevice.timers = converLocalTimerObjectToBackendString({ timers: device.timers })\r\n    return newDevice\r\n}\r\n\r\ntype convert_Device_LocalToBackend_returnNoId_t = (props: { device: DEVICE_t, log?: logger }) => Omit<Device_t, \"id\">\r\nexport const convert_Device_LocalToBackend_forUpdateMutation: convert_Device_LocalToBackend_returnNoId_t = ({ device, log }) => {\r\n    //@ts-ignore\r\n    const newDevice: Omit<Device_t, \"id\"> = {\r\n        hsv: device.hsv.h + \"-\" + device.hsv.s + \"-\" + device.hsv.v,\r\n        IP: device.IP,\r\n        deviceName: device.deviceName,\r\n        ts: device.localTimeStamp\r\n    }\r\n    if (device.timers)\r\n        newDevice.timers = converLocalTimerObjectToBackendString({ timers: device.timers })\r\n    return newDevice\r\n}","export enum _DEVICE_WIFI_STATE_e {\r\n    DEVICE_WL_NO_SHIELD = 255,   // for compatibility with WiFi Shield library\r\n    DEVICE_WL_IDLE_STATUS = 0,\r\n    DEVICE_WL_NO_SSID_AVAIL = 1,\r\n    DEVICE_WL_SCAN_COMPLETED = 2,\r\n    DEVICE_WL_CONNECTED = 3,\r\n    DEVICE_WL_CONNECT_FAILED = 4,\r\n    DEVICE_WL_CONNECTION_LOST = 5,\r\n    DEVICE_WL_DISCONNECTED = 6\r\n}\r\n\r\n\r\n\r\nexport enum _DEVICE_WIFI_API_ERRORS_e {\r\n    ERR_WIFI_UNABLE_CONNECT_TO_SSID = \"ERR-041\", //wifi unable to connect to SSID\r\n    ERR_WIFI_ALREADY_PAIRED_STATE = \"ERR-042\",   //wifi cannot connect to another wifi, as already paired\r\n    ERR_WIFI_BUSY_IN_PAIRING = \"ERR-043\",        //wifi cannot connect to another wifi, busy pairing\r\n    ERR_WIFI_PAIRING_UNEXPECTED = \"ERR-044\",     //wifi cannot connect to another wifi, unexpected error\r\n    ERR_WIFI_PAIRING_TIMEOUT = \"ERR-045\",     //wifi connection timeout\r\n    ERR_WIFI_PAIRING_PASS_INCORRECT = \"ERR-046\", //wifi password incorrect\r\n    ERR_WIFI_SSID_INVALID = \"ERR-047\",    //wifi SSID not found\r\n    ERR_WIFI_CNF_NOT_SAVED = \"ERR-048\"          //wifi SSID not found\r\n}","export enum _reduxConstant {\r\n  DEVICELIST_REDUX = \"ACT_00\",\r\n  DELETED_DEVICELIST_REDUX = \"ACT_00_1\",\r\n  DEVICELIST_SAGA = \"ACT_01\",\r\n  DEVICE_SAGA = \"ACT_02\",\r\n  DEVICELIST_DB_SAGA = \"ACT_03\",\r\n  APPCTX_REDUX = \"ACT_04\",\r\n  APPCTX_SAGA = \"ACT_050-\",\r\n  APPCTX_DB_SAGA = \"ACT_055\",\r\n  USER_REDUX = \"ACT_06-0\",\r\n  USER_SAGA = \"ACT_6-1\",\r\n  BG_SERVICE_SAGA = \"ACT_07\",\r\n  HB_DEVICELIST_REDUX = \"ACT_08\",\r\n  HB_DEVICELIST_MSG_SENT = \"ACT_09\",\r\n  HB_DEVICELIST_MSG_REC = \"ACT_10\",\r\n  HB_SOCKET_LIST = \"ACT_11\",\r\n  HB_SOCKET_LIST_CLEAR = \"ACT_12\",\r\n  COLOR_UPDATE_SAGA = \"ACT_13\",\r\n}","import { call, CallEffect, PutEffect, takeEvery, takeLatest } from \"redux-saga/effects\";\r\nimport { _reduxConstant } from \"../ReduxConstant\";\r\n\r\n\r\nexport interface __baseAction_Props<R> {\r\n    props: R\r\n}\r\ntype _getBaseAction_t<R> = (props: R) => __baseAction_Props<R> & { type: _reduxConstant }\r\nexport const _getBaseAction: <R>(type: _reduxConstant) => _getBaseAction_t<R> = (type) => {\r\n    //console.log(\"[get base action]\")\r\n    return (props) => {\r\n        //console.log(\"[base action called]\" + JSON.stringify(props))\r\n        return {\r\n            type,\r\n            props,\r\n        } as const;\r\n    }\r\n\r\n}\r\n\r\ninterface _getWorker_t<T> {\r\n    type: _reduxConstant\r\n    callable: (props: T) => any\r\n    shouldTakeLatest?: boolean\r\n}\r\n/**\r\n * @param type redux action type \r\n * @param callable generator function to be called upon action is dispatched\r\n * @optional `shouldTakeLatest` tale latest if true, `defaut false`, take Every in default case\r\n * \r\n * @returns \r\n *  - `watcher` yet to be registered saga watcher\r\n *  - `actionCaller` action caller for perticular watcher\r\n */\r\nexport const _getWorker: <R>(_props: _getWorker_t<R>) => [any, _getBaseAction_t<R>] = <R>(_props: _getWorker_t<R>) => {\r\n    //console.log(\"[GET WORKER]\")\r\n\r\n    const baseAction = _getBaseAction<R>(_props.type)\r\n\r\n    const worker = function* _baseWorker(props: __baseAction_Props<R>) {\r\n        //console.log(\"[BASE WORKER] >> \" + JSON.stringify(props))\r\n        if (props?.props)\r\n            yield call(_props.callable, props.props)\r\n    }\r\n\r\n    let watcher\r\n    if (_props.shouldTakeLatest)\r\n        watcher = function* _baseWatcher() {\r\n            //console.log(\"[BASE WATCHER] takeLatest\")\r\n            //@ts-ignore\r\n            yield takeLatest(_props.type, worker);\r\n        }\r\n    else\r\n        watcher = function* _baseWatcher() {\r\n            //console.log(\"[BASE WORKER] takeEvery\")\r\n            //@ts-ignore\r\n            yield takeEvery(_props.type, worker);\r\n        }\r\n\r\n\r\n    return [\r\n        watcher,\r\n        baseAction\r\n    ]\r\n}","import UNIVERSALS from \"../../@universals\";\r\nimport { getSafeDeviceList } from \"../deviceListUtil\";\r\n\r\n/** @deprecated */\r\nexport type logFun_t = (s: string) => void;\r\n\r\nexport enum printType {\r\n    CONTEXT,\r\n    IMPMSG,\r\n    MSG,\r\n    ERR,\r\n}\r\n\r\n\r\nexport class logger {\r\n    prefix: string\r\n    printAll = false\r\n    printable = [\r\n        \"MAIN ACTIVITY\", /* App.ts */\r\n        \"BG SERVICE\",\r\n        //\"DEVICE MODES SCREEN\", /* device modes screen in device page */\r\n        //\"DEVICE COLOR PICKER\",/* DEVICE COLOR PICKER PAGE */\r\n        //\"DASHBOARD\",/* DAHSBOARD SCREEN */\r\n        //\"LOGIN/SIGNUP\", /* LOGIN/SIGNUP screen */\r\n        //\"TEST FUNCTION\", /* testfunction prints */\r\n        \"USER PROFILE\",\r\n        //\"APP SETTING\",\r\n        //\"PAIRING_SCREEN\",\r\n    ]\r\n    /**\r\n     * \r\n     * @param prefix Class Prefix\r\n     */\r\n    constructor(prefix?: string, _log?: logger) {\r\n        let temp = (_log ? _log?.getPrefix() : \"\")\r\n        this.prefix = temp + \" [[ \" + prefix?.toUpperCase() + \" ]]\"\r\n    }\r\n\r\n    /** @deprecated */\r\n    addStack = (s: string) => {\r\n        this.prefix += \" | [\" + s + \"]\"\r\n    }\r\n    /** @deprecated */\r\n    removeStack = () => {\r\n        this.prefix = this.prefix.substring(0, this.prefix.lastIndexOf('|') - 1)\r\n    }\r\n\r\n    /** return class prefix --without bracket */\r\n    getPrefix = () => {\r\n        return this.prefix ? this.prefix : \"\"\r\n    }\r\n\r\n    /**\r\n     * @description print without prefix\r\n     */\r\n    _print = (s: string, type?: printType) => {\r\n        if (this.canPrint())\r\n            console.log(\" \" + s + \" \")\r\n        return this\r\n    }\r\n\r\n    print = (s: string, type?: printType) => {\r\n        if (this.canPrint())\r\n            console.log(\" \" + this.prefix + \" >> \" + s + \" \")\r\n        return this\r\n    }\r\n\r\n    printPretty = (s: string) => {\r\n        if (this.canPrint())\r\n            this.print(JSON.stringify(s, null, 2))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * @description print without prefix\r\n     */\r\n    _printPretty = (s: object | undefined) => {\r\n        if (this.canPrint() && s)\r\n            console.log(\" \" + JSON.stringify(s, null, 2) + \" \")\r\n        return this\r\n    }\r\n\r\n    /** @deprecated */\r\n    printDeviceList = (deviceList?: UNIVERSALS.GLOBALS.DEVICE_t[],) => {\r\n        /*   if (!deviceList)\r\n              deviceList = reduxStore.store.getState().deviceReducer.deviceList\r\n          console.log(this.owner + \" >> \" + JSON.stringify(getSafeDeviceList(deviceList), null, 2)) */\r\n    }\r\n\r\n    canPrint = () => {\r\n        if (this.printAll)\r\n            return true\r\n        let cprint = false\r\n        this.printable.forEach(item => {\r\n            if (this.prefix.includes(item.toUpperCase()))\r\n                cprint = true\r\n        });\r\n        return cprint\r\n    }\r\n}\r\n\r\n\r\nexport const logFun: (S: string, _log?: logFun_t, initial?: boolean) => logFun_t = (S, _log, initial) => {\r\n    let log: logFun_t\r\n    if (initial)\r\n        log = (s) => { console.log(\"[\" + S.toUpperCase() + \"] \" + s) }\r\n    else\r\n        log = (s) => { _log && _log(\"|\" + S.toUpperCase() + \"| \" + s) }\r\n    return log\r\n}","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\n/**\r\n *\r\n * @param {* key_<String> >> dataKey} key\r\n * @param {* value_<Object> >> dataSet} value\r\n */\r\nexport const storeData = async (key: \"appCTX\" | \"deviceList\" | \"deletedDeviceList\", value: Object) => {\r\n  //console.log(\"SAVING DATA >> \" + JSON.stringify(value))\r\n  try {\r\n    await AsyncStorage.setItem(key, JSON.stringify(value));\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param {* key_<String> >> dataKey for the dataSet to be resolved} key\r\n *\r\n * @returns {* null:: in case dataSet doesn't exists}\r\n * @returns {* Object: if data exists}\r\n */\r\nexport const getData = async (key: \"appCTX\" | \"deviceList\" | \"deletedDeviceList\") => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(key);\r\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveAppCTX = (props: any) => {\r\n  console.log(\"appCTX data to save => \" + JSON.stringify(props));\r\n  new Promise(() => {\r\n    storeData(\"appCTX\", props);\r\n  });\r\n};\r\n","import { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _getBaseAction, __baseAction_Props } from \"../../sagas/sagaBaseWorkers\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport { getData, storeData } from \"../../../services/db/storage\";\r\n\r\n\r\nexport interface _reducer_i {\r\n  deviceList: UNIVERSALS.GLOBALS.DEVICE_t[]\r\n  deletedDevices: UNIVERSALS.GLOBALS.DEVICE_t[]\r\n}\r\n\r\nexport const initialState: _reducer_i = {\r\n  deviceList: [],\r\n  deletedDevices: []\r\n};\r\n\r\nexport const _reducer = (\r\n  state: _reducer_i = initialState,\r\n  action: _actionReturnTypes\r\n) => {\r\n  switch (action.type) {\r\n\r\n    case _reduxConstant.DEVICELIST_REDUX:\r\n      action.props.log?.print(\"updating new newDeviceList to store >> \" + JSON.stringify(action.props.deviceList))\r\n      return Object.assign({}, state, { deviceList: action.props.deviceList.length ? [...action.props.deviceList] : [] })\r\n      break;\r\n\r\n    case _reduxConstant.DELETED_DEVICELIST_REDUX:\r\n      action.props.log?.print(\"updating DELETED DeviceList to store >> \" + JSON.stringify(action.props.deletedDeviceList))\r\n      if (!action.props.isDbState)\r\n        storeData(\"deletedDeviceList\", action.props.deletedDeviceList)\r\n      return Object.assign({}, state, { deletedDevices: action.props.deletedDeviceList.length ? [...action.props.deletedDeviceList] : [] })\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n/************************************************************************************************************************* \r\n * /// container Redux Actions\r\n *************************************************************************************************************************/\r\ninterface _deviceListReduxAction_Props {\r\n  deviceList: UNIVERSALS.GLOBALS.DEVICE_t[];\r\n  log?: logger\r\n}\r\ninterface _deletedDeviceListReduxAction_Props {\r\n  deletedDeviceList: UNIVERSALS.GLOBALS.DEVICE_t[];\r\n  isDbState?: boolean\r\n  log?: logger\r\n}\r\nexport const _actions = {\r\n  deviceListRedux: _getBaseAction<_deviceListReduxAction_Props>(_reduxConstant.DEVICELIST_REDUX),\r\n  deletedDeviceListRedux: _getBaseAction<_deletedDeviceListReduxAction_Props>(_reduxConstant.DELETED_DEVICELIST_REDUX)\r\n}\r\n\r\nexport type _actionReturnTypes =\r\n  | __baseAction_Props<_deviceListReduxAction_Props> & {\r\n    type: _reduxConstant.DEVICELIST_REDUX\r\n  }\r\n  | __baseAction_Props<_deletedDeviceListReduxAction_Props> & {\r\n    type: _reduxConstant.DELETED_DEVICELIST_REDUX\r\n  }\r\n","export const _delay = (ms: number) => new Promise((res) => setTimeout(res, ms));\r\n","import { put, call, select } from \"redux-saga/effects\";\r\nimport { _delay } from \"../../sagas/helper\";\r\nimport { storeData } from \"../../../services/db/storage\";\r\nimport { _getWorker } from '../../sagas/sagaBaseWorkers'\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _actions as _deviceListReduxAction } from \"../reducer\"\r\nimport { _appState } from \"../../rootReducer\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\n\r\n\r\n/*\r\n'########::'########:'##::::'##:'####::'######::'########:'##:::::::'####::'######::'########::::'##::::'##:'########::'########:::::'###::::'########:'########:::::'######:::::'###:::::'######::::::'###::::\r\n ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....:: ##:::::::. ##::'##... ##:... ##..::::: ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....:::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##::::::: ##:::::::: ##:: ##:::..::::: ##::::::: ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######::: ##:::::::: ##::. ######::::: ##::::::: ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######::::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...:::: ##:::::::: ##:::..... ##:::: ##::::::: ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::::::..... ##: #########: ##::: ##:: #########:\r\n ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##::::::: ##:::::::: ##::'##::: ##:::: ##::::::: ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##::::::::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n ########:: ########:::. ###::::'####:. ######:: ########: ########:'####:. ######::::: ##:::::::. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n........:::........:::::...:::::....:::......:::........::........::....:::......::::::..:::::::::.......:::..:::::::::........:::..:::::..:::::..:::::........::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\n\r\ninterface _deviceListSagaAction_Props {\r\n    deviceList: UNIVERSALS.GLOBALS.DEVICE_t[]\r\n    saveToDB?: boolean\r\n    log?: logger\r\n}\r\n/** \r\n * `_deviceListSaga_watcher`\r\n *              - @param saveToDB?: `default - true` wetaher to save to local database or not\r\n *              - @param log?: logger\r\n * `_deviceListSaga_action`\r\n */\r\nconst [_deviceListSaga_watcher, _deviceListSaga_action] = _getWorker<_deviceListSagaAction_Props>({\r\n    type: _reduxConstant.DEVICELIST_SAGA,\r\n    callable: function* containersWorker({ deviceList, saveToDB = true, log }) {\r\n        log?.print(\"newDeviceList >> \" + JSON.stringify(deviceList))\r\n        yield put(_deviceListReduxAction.deviceListRedux({ deviceList, log: log ? new logger(\"DEVICELIST-REDUX-REDUCER\", log) : undefined }));\r\n        if (saveToDB)\r\n            yield put(_________deviceListDB_action({ deviceList, log }));\r\n    }\r\n})\r\n\r\n/*\r\n:'######::'####:'##::: ##::'######:::'##:::::::'########::::'########::'########:'##::::'##:'####::'######::'########::::'##::::'##:'########::'########:::::'###::::'########:'########:::::'######:::::'###:::::'######::::::'###::::\r\n'##... ##:. ##:: ###:: ##:'##... ##:: ##::::::: ##.....::::: ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....::::: ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....:::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n ##:::..::: ##:: ####: ##: ##:::..::: ##::::::: ##:::::::::: ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##:::::::::: ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n. ######::: ##:: ## ## ##: ##::'####: ##::::::: ######:::::: ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######:::::: ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######::::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n:..... ##:: ##:: ##. ####: ##::: ##:: ##::::::: ##...::::::: ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...::::::: ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::::::..... ##: #########: ##::: ##:: #########:\r\n'##::: ##:: ##:: ##:. ###: ##::: ##:: ##::::::: ##:::::::::: ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##:::::::::: ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##::::::::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n. ######::'####: ##::. ##:. ######::: ########: ########:::: ########:: ########:::. ###::::'####:. ######:: ########::::. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n:......:::....::..::::..:::......::::........::........:::::........:::........:::::...:::::....:::......:::........::::::.......:::..:::::::::........:::..:::::..:::::..:::::........::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\n\r\n/** \r\n * @param device\r\n * @param saveToDB `default true` wetaher to save to local database or not\r\n * @param log?: logger\r\n */\r\ninterface _deviceSagaAction_props {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t\r\n    saveToDB?: boolean // `boolean` default `true` if needs to be saved to DB \r\n    log?: logger\r\n}\r\nconst [_deviceSaga_watcher, _deviceSaga_action] = _getWorker<_deviceSagaAction_props>({\r\n    type: _reduxConstant.DEVICE_SAGA,\r\n    callable: function* containersWorker({ device, saveToDB = true, log }) {\r\n        log?.print(\"updaing list > \" + JSON.stringify(device))\r\n        let devicelist: UNIVERSALS.GLOBALS.DEVICE_t[] = yield select((state: _appState) => state.deviceReducer.deviceList)\r\n        let preDevice = devicelist.find(item => item.Mac == device.Mac)\r\n        if (preDevice) {\r\n            log?.print(\"updating device\")\r\n            devicelist = devicelist.map(_device => {\r\n                if (_device.Mac == device.Mac) {\r\n                    return device\r\n                }\r\n                return _device\r\n            })\r\n        }\r\n        else {\r\n            log?.print(\"adding device as new\")\r\n            devicelist.push(device)\r\n        }\r\n        yield put(_deviceListReduxAction.deviceListRedux({ deviceList: devicelist, log }));\r\n        if (saveToDB)\r\n            yield put(_________deviceListDB_action({ deviceList: devicelist, log }));\r\n    }\r\n})\r\n\r\n\r\n/*\r\n'########::'########:'##::::'##:'####::'######::'########:'##:::::::'####::'######::'########::::'########::'########::::::'######:::::'###:::::'######::::::'###::::\r\n ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....:: ##:::::::. ##::'##... ##:... ##..::::: ##.... ##: ##.... ##::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##::::::: ##:::::::: ##:: ##:::..::::: ##::::::: ##:::: ##: ##:::: ##:::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######::: ##:::::::: ##::. ######::::: ##::::::: ##:::: ##: ########:::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...:::: ##:::::::: ##:::..... ##:::: ##::::::: ##:::: ##: ##.... ##:::::..... ##: #########: ##::: ##:: #########:\r\n ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##::::::: ##:::::::: ##::'##::: ##:::: ##::::::: ##:::: ##: ##:::: ##::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n ########:: ########:::. ###::::'####:. ######:: ########: ########:'####:. ######::::: ##::::::: ########:: ########:::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n........:::........:::::...:::::....:::......:::........::........::....:::......::::::..::::::::........:::........:::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\n\r\n\r\nconst [_deviceListDB_watcher, _________deviceListDB_action] = _getWorker<_deviceListSagaAction_Props>({\r\n    type: _reduxConstant.DEVICELIST_DB_SAGA,\r\n    callable: function* containersDBWorker({ deviceList, log }) {\r\n        log?.print(\"DEVICE DB SAGA WORKER\")\r\n        yield call(_delay, 1000);\r\n        log?.print(\"now storing containers to DB >> \" + JSON.stringify(deviceList))\r\n        yield storeData(\"deviceList\", deviceList);\r\n    }\r\n})\r\n\r\n\r\n\r\nexport { _deviceListSaga_watcher, _deviceListSaga_action, _deviceSaga_watcher, _deviceSaga_action, _deviceListDB_watcher }","/**\r\n * @deprecated\r\n * @param h \r\n * @param s \r\n * @param v \r\n * \r\n * @returns [R, G, B] ranging 1-255\r\n */\r\nconst convertHSVToRgb: (h: number, s: number, v: number) => [number, number, number] = (\r\n  h,\r\n  s,\r\n  v\r\n) => {\r\n  var r, g, b;\r\n  var i;\r\n  var f, p, q, t;\r\n\r\n  // Make sure our arguments stay in-range\r\n  h = Math.max(0, Math.min(360, h));\r\n  s = Math.max(0, Math.min(100, s));\r\n  v = Math.max(0, Math.min(100, v));\r\n\r\n  // We accept saturation and value arguments from 0 to 100 because that's\r\n  // how Photoshop represents those values. Internally, however, the\r\n  // saturation and value are calculated from a range of 0 to 1. We make\r\n  // That conversion here.\r\n  s /= 100;\r\n  v /= 100;\r\n\r\n  if (s == 0) {\r\n    // Achromatic (grey)\r\n    r = g = b = v;\r\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n  }\r\n\r\n  h /= 60; // sector 0 to 5\r\n  i = Math.floor(h);\r\n  f = h - i; // factorial part of h\r\n  p = v * (1 - s);\r\n  q = v * (1 - s * f);\r\n  t = v * (1 - s * (1 - f));\r\n\r\n  switch (i) {\r\n    case 0:\r\n      r = v;\r\n      g = t;\r\n      b = p;\r\n      break;\r\n\r\n    case 1:\r\n      r = q;\r\n      g = v;\r\n      b = p;\r\n      break;\r\n\r\n    case 2:\r\n      r = p;\r\n      g = v;\r\n      b = t;\r\n      break;\r\n\r\n    case 3:\r\n      r = p;\r\n      g = q;\r\n      b = v;\r\n      break;\r\n\r\n    case 4:\r\n      r = t;\r\n      g = p;\r\n      b = v;\r\n      break;\r\n\r\n    default:\r\n      // case 5:\r\n      r = v;\r\n      g = p;\r\n      b = q;\r\n  }\r\n\r\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n};\r\n\r\n/**\r\n * \r\n * @param h \r\n * @param s \r\n * @param v \r\n * \r\n * @returns [R, G, B] ranging 1-100\r\n */\r\nconst convertHSVToRgbShortRange: (h: number, s: number, v: number) => [number, number, number] = (\r\n  h,\r\n  s,\r\n  v\r\n) => {\r\n  var r, g, b;\r\n  var i;\r\n  var f, p, q, t;\r\n\r\n  // Make sure our arguments stay in-range\r\n  h = Math.max(0, Math.min(360, h));\r\n  s = Math.max(0, Math.min(100, s));\r\n  v = Math.max(0, Math.min(100, v));\r\n\r\n  // We accept saturation and value arguments from 0 to 100 because that's\r\n  // how Photoshop represents those values. Internally, however, the\r\n  // saturation and value are calculated from a range of 0 to 1. We make\r\n  // That conversion here.\r\n  s /= 100;\r\n  v /= 100;\r\n\r\n  if (s == 0) {\r\n    // Achromatic (grey)\r\n    r = g = b = v;\r\n    return [Math.round(r * 100), Math.round(g * 100), Math.round(b * 100)];\r\n  }\r\n\r\n  h /= 60; // sector 0 to 5\r\n  i = Math.floor(h);\r\n  f = h - i; // factorial part of h\r\n  p = v * (1 - s);\r\n  q = v * (1 - s * f);\r\n  t = v * (1 - s * (1 - f));\r\n\r\n  switch (i) {\r\n    case 0:\r\n      r = v;\r\n      g = t;\r\n      b = p;\r\n      break;\r\n\r\n    case 1:\r\n      r = q;\r\n      g = v;\r\n      b = p;\r\n      break;\r\n\r\n    case 2:\r\n      r = p;\r\n      g = v;\r\n      b = t;\r\n      break;\r\n\r\n    case 3:\r\n      r = p;\r\n      g = q;\r\n      b = v;\r\n      break;\r\n\r\n    case 4:\r\n      r = t;\r\n      g = p;\r\n      b = v;\r\n      break;\r\n\r\n    default:\r\n      // case 5:\r\n      r = v;\r\n      g = p;\r\n      b = q;\r\n  }\r\n\r\n  return [Math.round(r * 100), Math.round(g * 100), Math.round(b * 100)];\r\n};\r\n\r\n/** \r\n * @deprecated\r\n */\r\nconst _convertRGBToHex: (r: number, g: number, b: number) => string = (\r\n  r,\r\n  g,\r\n  b\r\n) => {\r\n  var _r = r.toString(16);\r\n  var _g = g.toString(16);\r\n  var _b = b.toString(16);\r\n\r\n  if (_r.length == 1) _r = \"0\" + r;\r\n  if (_g.length == 1) _g = \"0\" + g;\r\n  if (_b.length == 1) _b = \"0\" + b;\r\n\r\n  return \"#\" + _r + _g + _b;\r\n};\r\n\r\nconst convertRGBToHex: (hsv: [number, number, number]) => string = (hsv) => {\r\n  var _r = hsv[0].toString(16);\r\n  var _g = hsv[1].toString(16);\r\n  var _b = hsv[2].toString(16);\r\n\r\n  if (_r.length == 1) _r = \"0\" + _r;\r\n  if (_g.length == 1) _g = \"0\" + _g;\r\n  if (_b.length == 1) _b = \"0\" + _b;\r\n\r\n  return \"#\" + _r + _g + _b;\r\n};\r\n\r\nexport { convertHSVToRgb, _convertRGBToHex, convertHSVToRgbShortRange, convertRGBToHex };\r\n","import { State } from \"react-native-gesture-handler\";\r\nimport { put, select } from \"redux-saga/effects\";\r\nimport { convertHSVToRgbShortRange, convertRGBToHex } from \"../../../util/Color\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { _appState } from \"../../rootReducer\";\r\nimport { HBSocketList_t } from \"../../helperSideEffect/reducers/HBReducer\";\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _delay } from \"../../sagas/helper\";\r\nimport { _getWorker } from '../../sagas/sagaBaseWorkers';\r\nimport { _deviceListSaga_action } from \"./deviceList\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\n\r\ninterface beforeUpdateProps {\r\n    /** previous state of the device */\r\n    preDeviceState: UNIVERSALS.GLOBALS.DEVICE_t,\r\n    /** update state of the device, in this case with updated color/hsv code */\r\n    newDeviceState: UNIVERSALS.GLOBALS.DEVICE_t\r\n}\r\ninterface onActionCompleted_props {\r\n    newDeviceList: UNIVERSALS.GLOBALS.DEVICE_t[]\r\n}\r\nexport interface _colorAction_Props {\r\n    deviceMac: string[]\r\n    hsv: { h?: number, s?: number, v?: number }\r\n    gestureState: number\r\n    beforeUpdate?: ({ preDeviceState, newDeviceState }: beforeUpdateProps) => UNIVERSALS.GLOBALS.DEVICE_t\r\n    onActionComplete?: ({ newDeviceList }: onActionCompleted_props) => void\r\n    log?: logger\r\n}\r\n\r\nconst [_colorSaga_watcher, _colorSaga_action] = _getWorker<_colorAction_Props>({\r\n    type: _reduxConstant.COLOR_UPDATE_SAGA,\r\n    shouldTakeLatest: true,\r\n    callable: function* containersWorker({\r\n        deviceMac,\r\n        hsv: { h, s, v },\r\n        gestureState,\r\n        beforeUpdate = ({ newDeviceState }) => { return newDeviceState },\r\n        onActionComplete,\r\n        log }) {\r\n        log = log ? new logger(\"COLOR SAGA\", log) : undefined\r\n        const list: { Mac: string, socket: WebSocket | null }[] = []\r\n        let _deviceList: HBSocketList_t[] = yield select((state: _appState) => state.HBReducer.HBSocketList)\r\n        let devicelist: UNIVERSALS.GLOBALS.DEVICE_t[] = yield select((state: _appState) => state.deviceReducer.deviceList)\r\n        const newDeviceList = yield Promise.all(devicelist.map(async device => {\r\n            if (deviceMac.includes(device.Mac)) {/* check weather this device is present in requested deviceMac array */\r\n                h = h != undefined ? h : device.hsv.h\r\n                s = s != undefined ? s : device.hsv.s\r\n                v = v != undefined ? v : device.hsv.v\r\n                let tempdevice = _deviceList.find(item => item.Mac == device.Mac)\r\n                if (tempdevice?.socket) {/* if device has socket than send the color live */\r\n                    log?.print(\"sending color to device \" + h + \" \" + s + \" \" + v)\r\n                    //@ts-ignore\r\n                    let tempCol = convertRGBToHex(convertHSVToRgbShortRange(h, s, v))\r\n                    tempdevice.socket.send(tempCol)\r\n                } else if (gestureState == State.END && !tempdevice?.socket) {/* if device has no socket than send the color over mqtt only upon gestureState end */\r\n                    log?.print(\"device has no socket \")\r\n                    // - [ ] send code via mqtt\r\n                }\r\n                return beforeUpdate({ preDeviceState: device, newDeviceState: { ...device, hsv: { h, s, v }, localTimeStamp: Math.floor(Date.now() / 1000) } })\r\n            }\r\n            return device\r\n        }))\r\n        yield _delay(500)/* wait for the gesture to end befire sending  */\r\n        log?.print(\"[COLOR SAGA] Gesture has ended >> sending Redux Data Update\")\r\n        log?.print(JSON.stringify(newDeviceList, null, 2))\r\n        if (onActionComplete)\r\n            onActionComplete({ newDeviceList })\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport { _colorSaga_watcher, _colorSaga_action };\r\n\r\n\r\n\r\n\r\n\r\n","import { all } from \"redux-saga/effects\";\r\nimport { _deviceSaga_watcher, _deviceSaga_action, _deviceListSaga_watcher, _deviceListDB_watcher, _deviceListSaga_action, } from \"./deviceList\";\r\nimport { _colorSaga_action, _colorSaga_watcher/* , _brSaga_action, _brSaga_watcher */ } from \"./color.saga\"\r\n\r\nexport default function* _saga() {\r\n    yield all([\r\n        _deviceListSaga_watcher(),\r\n        _deviceSaga_watcher(),\r\n        _deviceListDB_watcher(),\r\n        _colorSaga_watcher(),\r\n    ]);\r\n}\r\n\r\n//export const _actions = { _containerSaga_action, _containerSagaDb_action }\r\n\r\nexport const _actions = { deviceListSaga: _deviceListSaga_action, deviceSaga: _deviceSaga_action, colorSaga: _colorSaga_action } ","import { initialState, _actionReturnTypes as ___actionReturnTypes, _actions as _reducerActions, _reducer } from \"./reducer\"\r\nimport _saga, { _actions as _sagaActions } from \"./saga\"\r\n\r\nexport { _reducer, _saga, initialState }\r\nexport const _actions = { deviceList: { ..._sagaActions, ..._reducerActions } }\r\n\r\n\r\n","const vender = \"HUElite\"\r\n//const vender: string = \"BDE\"\r\n\r\n\r\nexport const venderConf = {\r\n    venderPrefix: vender == \"HUElite\"\r\n        ? \"HUE\"\r\n        : vender == \"BDE\"\r\n            ? \"BDE\"\r\n            : \"\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import * as UNIVERSALS from \"./combineExport\"\r\n\r\nexport default UNIVERSALS","import { logger } from \"../../util/logger\"\r\n\r\nexport const errMsgSuffix = \"We are constantly working on improvements and bugfixes in our products. You can report the issue on HUElite website for faster moving of things\"\r\n\r\nexport enum axiosBaseErrors_e {\r\n    BASE_ERROR_UNHANDLED = \"BASE_ERROR_UNHANDLED\",\r\n    REQUEST_FAILED = \"REQUEST_FAILED\",\r\n    UNKNOWN_ROUTE = \"UNKNOWN_ROUTE\",\r\n    TIMEOUT = \"NETWORK TIMEOUT\",\r\n    NETWORK_ERR = \"NETWORK_ERR\",\r\n    NO_DATA = \"NO_DATA\",\r\n    MISSING_PARAM = \"MISSING_PARAM\",\r\n    PAIR_RESPONSE_WIFI_BUSY = \"PAIR_RESPONSE_WIFI_BUSY\",\r\n    SAVE_WIFI_CONFIG_API_RESPONSE_COULD_NOT_SAVE = \"SAVE_WIFI_CONFIG_API_RESPONSE_COULD_NOT_SAVE\",\r\n}\r\n\r\nexport interface baseError<ERR_TYPE, ERR_CODE> {\r\n    errCode: ERR_CODE\r\n    error?: ERR_TYPE\r\n    errMsg?: string\r\n    status?: number\r\n    data?: any\r\n}\r\n\r\nconst timeoutError: baseError<any, axiosBaseErrors_e> = {\r\n    errCode: axiosBaseErrors_e.TIMEOUT\r\n}\r\n\r\nexport const networkError: baseError<any, axiosBaseErrors_e> = {\r\n    errCode: axiosBaseErrors_e.NETWORK_ERR\r\n}\r\n\r\nexport const unknownRouteError: baseError<any, axiosBaseErrors_e> = {\r\n    errCode: axiosBaseErrors_e.UNKNOWN_ROUTE\r\n}\r\n\r\n//export type baseError = timeoutError_i | unknownError_i | networkError_i\r\n\r\n\r\n\r\nexport const checkForHttpErrors: <T, R>(err: any, log?: logger) => baseError<T, R> = (err, log) => {\r\n    log?.print(\"base error check\" + JSON.stringify(err, null, 2))\r\n    if (err?.message.indexOf(\"timeout\") > -1)\r\n        return { ...timeoutError, errMsg: err?.message }\r\n    else if (err?.message.indexOf(\"Network Error\") > -1)\r\n        return { ...networkError, errMsg: err?.message }\r\n    else if (err?.message.indexOf(\"ECONNREFUSED\") > -1)\r\n        return { ...networkError, errMsg: err?.message }\r\n    else if (err?.response?.status == 404)\r\n        return { ...unknownRouteError, /* data: err?.response?.data, */ status: err?.response?.status }\r\n    else if (err?.response)/* measure for graphql query base errors */\r\n        return { errCode: axiosBaseErrors_e.REQUEST_FAILED, error: err?.response?.data, status: err?.response?.status }\r\n    return err\r\n}","import Axios from \"axios\"\r\nimport { logger } from \"../../../../util/logger\"\r\nimport { serverURL } from \"../../baseAxios\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../baseErrors\"\r\nimport { defaultRequest } from \"../../baseRequest\"\r\n\r\nexport enum authApiErrors_e {\r\n    AUTH_API_UNHANDLED = \"AUTH_API_UNHANDLED\"\r\n}\r\n\r\n\r\nexport interface authApiErrors_i {\r\n    testError?: any\r\n}\r\n\r\ninterface authApiRes_i {\r\n    Mac: string\r\n    Hostname: string\r\n}\r\n\r\nexport interface authApiReturnType {\r\n    RES?: authApiRes_i\r\n    ERR?: baseError<authApiErrors_i, authApiErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\n/**\r\n * @description\r\n */\r\ninterface authApiProps_i {\r\n    IP: string\r\n    log?: logger\r\n}\r\ntype fun_t = (props: authApiProps_i) => Promise<authApiReturnType>\r\n\r\nexport const v1: fun_t =\r\n    async ({\r\n        IP,\r\n        log,\r\n        ...props\r\n    }: authApiProps_i) => {\r\n        var queryResponse = await defaultRequest<authApiRes_i, authApiErrors_i, authApiReturnType>({\r\n            method: \"get\",\r\n            address: 'http://' + IP,\r\n            path: \"/auth\",\r\n            resolveData: ({ RES, ERR }) => {\r\n                if (ERR) {\r\n                    log?.print(\"ERR - resolve Data\" + JSON.stringify(ERR, null, 2))\r\n                }\r\n                if (RES?.Mac && RES.Hostname) {\r\n                    log?.print(\"RES - resolve Data \" + IP + \" \" + JSON.stringify(RES, null, 2))\r\n                    return { RES }\r\n                }\r\n                return { ERR: { errCode: authApiErrors_e.AUTH_API_UNHANDLED } }\r\n            },\r\n            log: log ? new logger(\"base request\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        return queryResponse\r\n    }\r\n\r\n","import Axios from \"axios\";\r\nimport { logger } from \"../../util/logger\";\r\nimport { axiosBaseErrors_e, baseError, checkForHttpErrors } from \"./baseErrors\";\r\n\r\n\r\ninterface baseResponse_t<res, err> {\r\n    RES?: res,\r\n    ERR?: baseError<err, axiosBaseErrors_e>\r\n}\r\n/**\r\n * Default request t\r\n * @template res \r\n * @template err \r\n */\r\nexport interface defaultRequest_t<res, err, resolveReturn_t> {\r\n    address: string,\r\n    path: string,\r\n    method: \"get\" | \"post\" | \"delete\" | \"put\"\r\n    body?: any,\r\n    config?: {\r\n        timeout?: number,\r\n    },\r\n    headers?: {},\r\n    params?: any,\r\n    resolveData?: (s: baseResponse_t<res, err>) => resolveReturn_t\r\n    log?: logger\r\n}\r\n\r\n/**\r\n * ## templates\r\n * @template res response type expected from base request\r\n * @template err possible error returns from base request if no base errors are found\r\n * @template resolveReturn_t return type of the `resolveData` function\r\n * \r\n * ## parameters\r\n * @param address \r\n * @param path\r\n * @param method: \"get\" | \"post\" | \"delete\" | \"put\"\r\n * @param body?: any,\r\n * @param config?: { timeout?: number },\r\n * @param headers?: {},\r\n * @param params?: Object,\r\n * @param resolveData?: (s: baseResponse_t<res, err>) => resolveReturn_t `default` `(s) => { return s }`,\r\n * @param log?: logger\r\n * } \r\n */\r\nexport const defaultRequest = <res, err, resolveReturn_t>({\r\n    resolveData = (s: any) => { return s },\r\n    log,\r\n    ...props\r\n}: defaultRequest_t<res, err, resolveReturn_t>) => new Promise<baseResponse_t<res, err>>(async (resolve, reject) => {\r\n    await Axios.request<res>({\r\n        method: props.method,\r\n        url: props.address + props.path,\r\n        data: props.body,\r\n        headers: props.headers,\r\n        params: props.params,\r\n        timeout: props?.config?.timeout ? props.config.timeout : 5000,\r\n    }).then(({ data }) => {\r\n        if (data) {\r\n            log?.print(\"[][] response data : \" + JSON.stringify(data, null, 2))\r\n            return resolve(resolveData({ RES: data }))\r\n        }\r\n        return reject({ ERR: { errCode: axiosBaseErrors_e.NO_DATA, data } })\r\n    }).catch((error) => {\r\n        log?.print(\"[][] error : \" + error)\r\n        let tempError = checkForHttpErrors<err, axiosBaseErrors_e>(error, log ? new logger(\"base http error checker\", log) : undefined)\r\n        if (tempError.errCode)\r\n            reject({ ERR: tempError })\r\n        return reject(resolveData({ ERR: { errCode: axiosBaseErrors_e.REQUEST_FAILED, error: error } }))\r\n    });\r\n})\r\n","//import { URLSearchParams } from \"url\"\r\nimport { logger } from \"../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../baseErrors\"\r\nimport { defaultRequest } from \"../../baseRequest\"\r\n\r\nexport enum ScanApiErrors_e {\r\n    SCAN_API_WAIT_UNTIL_SCANNING = \"SCANAPI : CURRENTLY SCANNING\",\r\n    SCAN_API_NO_NETWORK_FOUND = \"SCANAPI : NO NETWORK FOUND\",\r\n    SCAN_API_UNHANDLED = \"ScanAPI_UNHANDLED\"\r\n}\r\n\r\n\r\nexport interface ScanApiErrors_i {\r\n    testError?: any\r\n}\r\ninterface network_i {\r\n    rssi: any,\r\n    \"ssid\": string,\r\n    \"bssid\": string,\r\n    \"channel\": any,\r\n    \"secure\": any,\r\n    \"hidden\": boolean\r\n}\r\ninterface ScanApiRes_i {\r\n    status: number // - [ ] make an enum for scanAPi status codes\r\n    networks?: network_i[]\r\n}\r\n\r\nexport interface ScanApiReturnType {\r\n    RES?: ScanApiRes_i\r\n    ERR?: baseError<ScanApiErrors_i, ScanApiErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\n/**\r\n * @description\r\n */\r\ninterface ScanApiProps_i {\r\n    IP: string\r\n    log?: logger\r\n    /** resolve  */\r\n}\r\ntype fun_t = (props: ScanApiProps_i) => Promise<ScanApiReturnType>\r\n\r\nexport const v1: fun_t =\r\n    async ({\r\n        IP,\r\n        log,\r\n        ...props\r\n    }: ScanApiProps_i) => {\r\n        const _params = new URLSearchParams()\r\n        _params.append(\"config\", \"wifi_scan\")\r\n        log?.print(\"params \" + _params)\r\n        var queryResponse = await defaultRequest<ScanApiRes_i, ScanApiErrors_i, ScanApiReturnType>({\r\n            method: \"post\",\r\n            address: 'http://' + IP,\r\n            path: \"/config\",\r\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            body: _params,\r\n            resolveData: ({ RES, ERR }) => {\r\n                if (ERR) {\r\n                    log?.print(\"ERR - resolve Data\" + JSON.stringify(ERR, null, 2))\r\n                }\r\n                if (RES) {\r\n                    log?.print(\"RES - resolve Data\" + JSON.stringify(RES, null, 2))\r\n                    return { RES }\r\n                }\r\n                return { ERR: { errCode: ScanApiErrors_e.SCAN_API_UNHANDLED } }\r\n            },\r\n            log: log ? new logger(\"base request\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        return queryResponse\r\n    }\r\n\r\n\r\n/* (\r\n    async () => {\r\n        const log = new logger(\"test function\")\r\n        log.print(\"test function for device api\")\r\n        const res = await fun({\r\n            IP: \"192.168.1.72\",\r\n            log: new logger(\"scan api\", log)\r\n        })\r\n        log.print(\"response --> \" + JSON.stringify(res, null, 2))\r\n    }\r\n)() */\r\n\r\n","import UNIVERSALS from \"../../../../@universals\"\r\nimport { logger } from \"../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../baseErrors\"\r\nimport { defaultRequest } from \"../../baseRequest\"\r\n\r\nexport enum pairApiErrors_e {\r\n    PAIR_API_UNHANDLED = \"PAIR_API_UNHANDLED\"\r\n}\r\n\r\n\r\nexport type pairApiErrors_i = UNIVERSALS.GLOBALS.deviceApi._DEVICE_WIFI_API_ERRORS_e\r\n\r\nexport interface pairApiRes_i {\r\n    Mac: string\r\n    WIFI_STATE: UNIVERSALS.GLOBALS.deviceApi._DEVICE_WIFI_STATE_e\r\n    IP?: string\r\n    ssid?: string\r\n}\r\n\r\nexport interface pairApiReturnType {\r\n    RES?: pairApiRes_i\r\n    ERR?: baseError<pairApiErrors_i, pairApiErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\n/**\r\n * @description\r\n */\r\ninterface pairApiProps_i {\r\n    IP: string\r\n    ssid: string\r\n    pass: string\r\n    log?: logger\r\n}\r\ntype fun_t = (props: pairApiProps_i) => Promise<pairApiReturnType>\r\n\r\nexport const v1: fun_t =\r\n    async ({\r\n        IP,\r\n        ssid,\r\n        pass,\r\n        log,\r\n        ...props\r\n    }: pairApiProps_i) => {\r\n        const _params = new URLSearchParams()\r\n        _params.append(\"config\", \"wifi_connect\")\r\n        _params.append(\"ssid\", ssid)\r\n        _params.append(\"pass\", pass)\r\n        log?.print(\"params \" + _params)\r\n        var queryResponse = await defaultRequest<pairApiRes_i, pairApiErrors_i, pairApiReturnType>({\r\n            method: \"post\",\r\n            address: 'http://' + IP,\r\n            path: \"/config\",\r\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            body: _params,\r\n            config: {\r\n                timeout: 5000\r\n            },\r\n            resolveData: ({ RES, ERR }) => {\r\n                if (ERR) {\r\n                    log?.print(\"ERR - resolve Data\" + JSON.stringify(ERR, null, 2))\r\n                }\r\n                if (RES && RES.Mac) {\r\n                    log?.print(\"RES - resolve Data\" + JSON.stringify(RES, null, 2))\r\n                    return { RES }\r\n                }\r\n                return { ERR: { errCode: pairApiErrors_e.PAIR_API_UNHANDLED } }\r\n            },\r\n            log: log ? new logger(\"base request\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        return queryResponse\r\n    }\r\n\r\n\r\n\r\n/* (async () => {\r\n    const log = new logger(\"test function\")\r\n    const res = await v1({ IP: \"192.168.4.1\", ssid: \"Homelink\", pass: \"Ioplmkjnb@1\", log })\r\n    if (res.RES)\r\n        log.print(\"RES ****----- \" + JSON.stringify(res.RES, null, 2))\r\n    else\r\n        log.print(\"ERR ****----- \" + JSON.stringify(res.ERR, null, 2))\r\n})() */","import { logger } from \"../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../baseErrors\"\r\nimport { defaultRequest } from \"../../baseRequest\"\r\n\r\nexport enum saveWifiConfigApiErrors_e {\r\n    SAVE_WIFI_CONFIG_API_UNHANDLED = \"SAVE_WIFI_CONFIG_API_UNHANDLED\"\r\n}\r\n\r\n\r\nexport type saveWifiConfigApiErrors_i = \"ERR-048\"\r\n\r\ntype saveWifiConfigApiRes_i = \"RES-551\"\r\n\r\nexport interface saveWifiConfigApiReturnType {\r\n    RES?: saveWifiConfigApiRes_i\r\n    ERR?: baseError<saveWifiConfigApiErrors_i, saveWifiConfigApiErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\n/**\r\n * @description\r\n */\r\ninterface saveWifiConfigApiProps_i {\r\n    IP: string\r\n    log?: logger\r\n}\r\ntype fun_t =\r\n    (props: saveWifiConfigApiProps_i)\r\n        => Promise<saveWifiConfigApiReturnType>\r\n\r\nexport const v1: fun_t =\r\n    async ({\r\n        IP,\r\n        log,\r\n        ...props\r\n    }: saveWifiConfigApiProps_i) => {\r\n        const _params = new URLSearchParams()\r\n        _params.append(\"config\", \"save_wifi_cnf\")\r\n        log?.print(\"params \" + _params)\r\n        var queryResponse = await defaultRequest<saveWifiConfigApiRes_i, saveWifiConfigApiErrors_i, saveWifiConfigApiReturnType>({\r\n            method: \"post\",\r\n            address: 'http://' + IP,\r\n            path: \"/config\",\r\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            body: _params,\r\n            config: {\r\n                timeout: 5000\r\n            },\r\n            resolveData: ({ RES, ERR }) => {\r\n                if (ERR) {\r\n                    log?.print(\"ERR - resolve Data\" + JSON.stringify(ERR, null, 2))\r\n                }\r\n                if (RES) {\r\n                    log?.print(\"RES - resolve Data\" + JSON.stringify(RES, null, 2))\r\n                    return { RES }\r\n                }\r\n                return { ERR: { errCode: saveWifiConfigApiErrors_e.SAVE_WIFI_CONFIG_API_UNHANDLED } }\r\n            },\r\n            log: log ? new logger(\"base request\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        return queryResponse\r\n    }\r\n\r\n\r\n","import { logger } from \"../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError, errMsgSuffix } from \"../../baseErrors\"\r\nimport { defaultRequest, defaultRequest_t } from \"../../baseRequest\"\r\nimport { serverURL } from \"../../baseAxios\"\r\n\r\nexport enum apolloErrors_e {\r\n    /** response came but no data was received */\r\n    APOLLO_QUERY_FAILED = \"APOLLO_QUERY_FAILED\",\r\n    /** incorrect query string */\r\n    APOLLO_BAD_QUERY = \"APOLLO_BAD_QUERY\",\r\n    APOLLO_UNHANDLED = \"APOLLO_UNHANDLED\",\r\n\r\n}\r\n\r\n\r\nexport interface baseApolloErrors_i {\r\n    /**  only exists if query failed and response has be received */\r\n    errors?: [{\r\n        message?: string\r\n        extensions?: {\r\n            code?: \"GRAPHQL_PARSE_FAILED\" | \"INTERNAL_SERVER_ERROR\"\r\n        }\r\n    }]\r\n}\r\n\r\ninterface baseApolloRes_i<res, err> extends baseApolloErrors_i {\r\n    /** successfull query response can be found in `data` object */\r\n    data?: res\r\n}\r\n\r\nexport interface baseApolloQuery_returnType<res, err> {\r\n    RES?: res\r\n    ERR?: baseError<err, apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\n/**\r\n * @description fiew fields are omitted as they are set to default in the baseApolloRequest \r\n *              and thus control to modify the values is not passed to lower level methods\r\n *      - `path` & `address` as path & address both are default in case apollo query post request\r\n */\r\ninterface baseApolloQuery_i<res, err, queryVariables, resolveReturn_t> extends Omit<Omit<Omit<Omit<defaultRequest_t<\"\", \"\", \"\">, \"path\">, \"address\">, \"method\">, \"resolveData\"> {\r\n    query: string\r\n    variables: queryVariables\r\n    log?: logger\r\n    /** resolve  */\r\n    resolveData?: (s: baseApolloQuery_returnType<res, err>) => resolveReturn_t\r\n}\r\ntype fun_t = <res, err, queryVariables, resolveReturn_t>\r\n    (props: baseApolloQuery_i<res, err, queryVariables, resolveReturn_t>)\r\n    => Promise<baseApolloQuery_returnType<res, err>>\r\n\r\nconst fun: fun_t =\r\n    async <res, err, queryVariables, resolveReturn_t>({\r\n        resolveData = (s: any) => { return s },\r\n        log,\r\n        ...props\r\n    }: baseApolloQuery_i<res, err, queryVariables, resolveReturn_t>) => {\r\n        var queryResponse = await defaultRequest<res & baseApolloRes_i<res, err>, err & baseApolloErrors_i, baseApolloQuery_returnType<baseApolloRes_i<res, err>, baseApolloErrors_i>>({\r\n            method: \"post\",\r\n            address: serverURL,\r\n            path: \"/admin/api\",\r\n            body: {\r\n                query: props.query,\r\n                variables: props.variables,\r\n            },\r\n            config: props.config,\r\n            /**\r\n             * @param \r\n             * - `RES` with data, `ERR` with error\r\n             * - `possible error entries` - RES.errors[0] || ERR.error.errors[0]\r\n             * @dataManuplation \r\n             * - `ERR.error ==> ERR.error.errors[0]`<br>\r\n             *   - `ERR.error.errors[0]` : [ { message :string, extensions:string } ]\r\n             *   - `ERR.error`{ message :string, extensions:string }`\r\n             */\r\n            resolveData: ({ RES, ERR }) => {\r\n\r\n                /**\r\n                 * @description\r\n                 *      checks for specific errors\r\n                 * @errorHandled\r\n                 * - `BAD_QUERY` - apollo query string syntax not correct\r\n                 * \r\n                 * @returns\r\n                 * to end the resolveData callback chain return resolved error object other than undefined\r\n                 * - `undefined` continue to the next resolveData call\r\n                 * - `errors : any` return errors[0] \r\n                 * \r\n                 */\r\n                const processErrors = (error: baseApolloErrors_i) => {\r\n                    log?.print(\"checking Local errors\")\r\n                    if (error && error.errors) {\r\n                        if (error.errors[0].extensions?.code == \"GRAPHQL_PARSE_FAILED\") {\r\n                            log?.print(\"BAD query error found\")\r\n                            return { ERR: { errCode: apolloErrors_e.APOLLO_BAD_QUERY } }\r\n                        }\r\n                    }\r\n                    return undefined\r\n                }\r\n\r\n                if (RES) {\r\n                    log?.print(\"RES - resolve Data\" + JSON.stringify(RES))\r\n                    if (RES?.errors instanceof Array) {\r\n                        log?.print(\"RES - errors object exists in 'RES' object\" + JSON.stringify(RES, null, 2))\r\n                        let tempErr = processErrors(RES)\r\n                        if (tempErr != undefined) {\r\n                            log?.print(\"RES - error found breaking chain\" + JSON.stringify(RES.errors, null, 2))\r\n                            return tempErr\r\n                        } else {\r\n                            log?.print(\"RES - sending data to next function in chain to be resolved\")\r\n                            //@ts-ignore\r\n                            return resolveData({ ERR: { errCode: apolloErrors_e.QUERY_FAILED, error: RES.errors[0] } })\r\n                        }\r\n                    }\r\n                    if (RES?.data)\r\n                        return resolveData({ RES: RES.data })\r\n                }\r\n                if (ERR) {\r\n                    log?.print(\"ERR - resolve Data\" + JSON.stringify(ERR))\r\n                    if (ERR?.error?.errors instanceof Array) {\r\n                        log?.print(\"ERR - errors object in ERR exists\" + JSON.stringify(ERR, null, 2))\r\n                        let tempErr = processErrors(ERR.error)\r\n                        if (tempErr != undefined) {\r\n                            log?.print(\"ERR - BadQuery error found breaking resolveData change\" + JSON.stringify(ERR.error.errors, null, 2))\r\n                            return tempErr\r\n                        } else {\r\n                            log?.print(\"ERR - No error found at this level. sendind data to be resolved to next function in chain with failed query error\")\r\n                            //@ts-ignore\r\n                            return resolveData({ ERR: { errCode: apolloErrors_e.QUERY_FAILED, error: ERR.error.errors[0] } })\r\n                        }\r\n                    }\r\n                    log?.print(\"ERR - sending error to next level\")\r\n                    return resolveData({ ERR })\r\n                }\r\n                return { ERR: { errCode: apolloErrors_e.APOLLO_UNHANDLED } }\r\n            },\r\n            log: log ? new logger(\"base request\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        return queryResponse\r\n    }\r\n\r\n\r\nexport default fun\r\n","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nenum deviceQueryApiErrors_e {\r\n    DEVICE_QUERY_API_INVALID_ID = \"DEVICE_QUERY_API : INVALID_ID\",\r\n    DEVICE_QUERY_API_UNHANDLED = \"DEVICE_QUERY_API : UNHANDLED\",\r\n}\r\n\r\ninterface response_i {\r\n    HueDevice?: {\r\n        id: string,\r\n        timers?: string\r\n    }\r\n}\r\n\r\ninterface error_i {\r\n    /**\r\n    * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n    */\r\n    message?: string\r\n    extensions?: {\r\n        code?: string\r\n    }\r\n}\r\n\r\nexport interface _deviceTimerQueryAPi_returnType {\r\n    RES?: {\r\n        id: string\r\n        timers?: string\r\n        ts?: number\r\n    }\r\n    ERR?: baseError<error_i, deviceQueryApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    id: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_deviceTimerQueryAPi_returnType> = async ({ id, log }: fun_t) => {\r\n\r\n    interface variables_i {\r\n        id: string\r\n    }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _deviceTimerQueryAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.getDeviceTimer_query,\r\n        variables: {\r\n            id\r\n        },\r\n        resolveData: (props) => {\r\n            //log?.print(\"resolve DATA\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR?.error) {\r\n                log?.print(\"ERR - deviceTimerQuery \" + JSON.stringify(props.ERR.error, null, 2))\r\n                if (props.ERR.error.message) {\r\n\r\n                }\r\n            }\r\n            else if (props.RES && props.RES.HueDevice?.id) {\r\n                log?.print(\"RES - deviceTimerQuery  \" + JSON.stringify(props.RES.HueDevice, null, 2))\r\n                return { RES: props.RES.HueDevice }\r\n            }\r\n            return { ERR: { errCode: deviceQueryApiErrors_e.DEVICE_QUERY_API_UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///device query test\r\n/* const test = async () => {\r\n    const log = new logger(\"TEST FUNCTION\")\r\n    log.print(\"---------\")\r\n    const _res = await v1({\r\n        id: \"5fef7e9162933b1ec4176861\",\r\n        log: log ? new logger(\"deviceTimersQuerypAPI\", log) : undefined\r\n    }).then((res: any) => res).catch((err: any) => err)\r\n\r\n    log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n} */","//export const serverURL = \"https://www.huelite.in/backend\"\r\nexport const serverURL = \"http://192.168.1.6:4000/backend\"","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nexport enum deviceQueryWithMacApiErrors_e {\r\n    DEVICE_QUERY_API_INVALID_ID = \"DEVICE_QUERY_API : INVALID_ID\",\r\n    DEVICE_QUERY_API_UNHANDLED = \"DEVICE_QUERY_API : UNHANDLED\",\r\n    DEVICE_QUERY_NO_DEVICES_FOUND = \"DEVICE_QUERY_API : NO_DEVICE_FOUND\",\r\n}\r\n\r\ninterface response_i {\r\n    allHueDevices?: UNIVERSALS.GLOBALS.Device_t[]\r\n}\r\n\r\ninterface error_i {\r\n    /**\r\n    * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n    */\r\n    message?: string\r\n    extensions?: {\r\n        code?: string\r\n    }\r\n}\r\n\r\ninterface _deviceQueryAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.Device_t\r\n    ERR?: baseError<error_i, deviceQueryWithMacApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_deviceQueryAPi_returnType> = async ({ device, log }: fun_t) => {\r\n\r\n    interface variables_i {\r\n        Mac: string\r\n    }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _deviceQueryAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.getDeviceWithMac_query,\r\n        variables: {\r\n            Mac: device.Mac\r\n        },\r\n        resolveData: (props) => {\r\n            //log?.print(\"resolve DATA\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR?.error) {\r\n                log?.print(\"ERR - deviceTimerQuery \" + JSON.stringify(props.ERR.error, null, 2))\r\n                if (props.ERR.error.message) {\r\n\r\n                }\r\n            }\r\n            else if (props.RES?.allHueDevices?.length) {\r\n                log?.print(\"RES - deviceTimerQuery  \" + JSON.stringify(props.RES.allHueDevices[0], null, 2))\r\n                return { RES: props.RES.allHueDevices[0] }\r\n            }\r\n            else if (props.RES?.allHueDevices?.length == 0) {\r\n                log?.print(\"ERR - NO_DEVICE_FOUND response received but no deices are found\")\r\n                return { ERR: { errCode: deviceQueryWithMacApiErrors_e.DEVICE_QUERY_NO_DEVICES_FOUND } }\r\n            }\r\n            return { ERR: { errCode: deviceQueryWithMacApiErrors_e.DEVICE_QUERY_API_UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///device query test\r\n/* const test = async () => {\r\n    const log = new logger(\"TEST FUNCTION\")\r\n    log.print(\"---------\")\r\n    const _res = await v1({\r\n        id: \"5fef7e9162933b1ec4176861\",\r\n        log: log ? new logger(\"deviceTimersQuerypAPI\", log) : undefined\r\n    }).then((res: any) => res).catch((err: any) => err)\r\n\r\n    log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n} */","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nenum createdeviceMutationApiErrors_e {\r\n    CREATE_DEVICE_MUTATION_API__UNHANDLED = \"CREATE_DEVICE_API : UNHANDLED\",\r\n    CREATE_DEVICE_MUTATION_API_DUPLICATE_MAC_ERROR = \"CREATE_DEVICE_API : DUPLICATE MAC\",\r\n}\r\n\r\ninterface response_i {\r\n    createHueDevice?: UNIVERSALS.GLOBALS.Device_t\r\n}\r\n\r\ninterface error_i {\r\n    /**\r\n    * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n    */\r\n    message?: \"E11000 duplicate key error collection: huelite.hue_devices index: Mac_1 dup key:\"\r\n    extensions?: {\r\n        code?: string\r\n    }\r\n}\r\n\r\ninterface _createDeviceMutationAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.Device_t\r\n    ERR?: baseError<error_i, createdeviceMutationApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t\r\n    userID: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_createDeviceMutationAPi_returnType> = async ({ device, userID, log }: fun_t) => {\r\n\r\n    interface variables_i extends UNIVERSALS.GLOBALS.Device_t { userID: string }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _createDeviceMutationAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.createNewDevice_mutation,\r\n        variables: { ...UNIVERSALS.GLOBALS.convert_Device_LocalToBackend({ device }), userID },\r\n        resolveData: (props) => {\r\n            //log?.print(\"resolve DATA\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR?.error) {\r\n                log?.print(\"ERR - createDevice \" + JSON.stringify(props.ERR.error, null, 2))\r\n                if (props.ERR.error.message == \"E11000 duplicate key error collection: huelite.hue_devices index: Mac_1 dup key:\") {\r\n                    return { ERR: { errCode: createdeviceMutationApiErrors_e.CREATE_DEVICE_MUTATION_API_DUPLICATE_MAC_ERROR, errMsg: props.ERR.error.message } }\r\n                }\r\n            }\r\n            else if (props.RES?.createHueDevice) {\r\n                log?.print(\"RES - createDevice  \" + JSON.stringify(props.RES, null, 2))\r\n                return { RES: props.RES.createHueDevice }\r\n            }\r\n            return { ERR: { errCode: createdeviceMutationApiErrors_e.CREATE_DEVICE_MUTATION_API__UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///device query test\r\n/* const test = async () => {\r\n    const log = new logger(\"TEST FUNCTION\")\r\n    log.print(\"---------\")\r\n    const _res = await v1({\r\n        id: \"5fef7e9162933b1ec4176861\",\r\n        log: log ? new logger(\"deviceTimersQuerypAPI\", log) : undefined\r\n    }).then((res: any) => res).catch((err: any) => err)\r\n\r\n    log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n} */","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nenum updateDeviceMutationApiErrors_e {\r\n    UPDATE_DEVICE_MUTATION_API__UNHANDLED = \"UPDATE_DEVICE_API : UNHANDLED\",\r\n    UPDATE_DEVICE_MUTATION_API_OUTDATED_TIMESTAMP = \"UPDATE_DEVICE_API : OUTDATED TIMESTAMP\",\r\n}\r\n\r\ninterface response_i {\r\n    updateHueDevice?: UNIVERSALS.GLOBALS.Device_t\r\n}\r\n\r\ninterface error_i {\r\n    /**\r\n    * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n    */\r\n    message?: string\r\n    extensions?: {\r\n        code?: string\r\n    }\r\n}\r\n\r\ninterface _updateDeviceMutationAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.Device_t\r\n    ERR?: baseError<error_i, updateDeviceMutationApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    device: Omit<UNIVERSALS.GLOBALS.DEVICE_t, \"id\"> & { id: string }\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_updateDeviceMutationAPi_returnType> = async ({ device, log }: fun_t) => {\r\n\r\n    interface variables_i {\r\n        id: string\r\n        hsv?: string,\r\n        IP?: string,\r\n        deviceName?: string,\r\n        ts: number\r\n    }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _updateDeviceMutationAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.updateDevice_mutation,\r\n        variables: {\r\n            id: device.id,\r\n            ...UNIVERSALS.GLOBALS.convert_Device_LocalToBackend_forUpdateMutation({ device })\r\n        },\r\n        resolveData: (props) => {\r\n            //log?.print(\"resolve DATA\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR?.error) {\r\n                log?.print(\"ERR - updateDevice \" + JSON.stringify(props.ERR.error, null, 2))\r\n            }\r\n            // - [ ] error check for outdated local timestamp\r\n            else if (props.RES?.updateHueDevice) {\r\n                log?.print(\"RES - updateDevice--  \" + JSON.stringify(props.RES, null, 2))\r\n                return { RES: props.RES.updateHueDevice }\r\n            }\r\n            return { ERR: { errCode: updateDeviceMutationApiErrors_e.UPDATE_DEVICE_MUTATION_API__UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///device query test\r\n/* const test = async () => {\r\n    const log = new logger(\"TEST FUNCTION\")\r\n    log.print(\"---------\")\r\n    const _res = await v1({\r\n        id: \"5fef7e9162933b1ec4176861\",\r\n        log: log ? new logger(\"deviceTimersQuerypAPI\", log) : undefined\r\n    }).then((res: any) => res).catch((err: any) => err)\r\n\r\n    log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n} */","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nexport enum userQueryApiErrors_e {\r\n    USER_FETCH_API_UNKNOWN_EMAIL = \"USER_FETCH_API_UNKNOWN_EMAIL\",\r\n    USER_FETCH_API_INCORRECT_PASSWORD = \"USER_FETCH_API_INCORRECT_PASSWORD\",\r\n    USER_FETCH_API_UNHANDLED = \"USER_FETCH_API_UNHANDLED\",\r\n}\r\n\r\ninterface response_i {\r\n    User: UNIVERSALS.GLOBALS.User_t\r\n}\r\n\r\nexport interface error_i {\r\n    /**\r\n     * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n     */\r\n    extensions?: \"INTERNAL_SERVER_ERROR\"\r\n    message?: string\r\n}\r\n\r\nexport interface _userQueryAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.User_t\r\n    ERR?: baseError<error_i, userQueryApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface v1_props {\r\n    id: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: v1_props) => Promise<_userQueryAPi_returnType> = async ({\r\n    id,\r\n    log }: v1_props) => {\r\n\r\n    interface variables_i {\r\n        id: string\r\n    }\r\n    var response = await makeHttpQuery<response_i, error_i, variables_i, _userQueryAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.User_queryWithId,\r\n        variables: { id },\r\n        resolveData: (props) => {\r\n            log?.print(\"userQueryAPI resolve DATA \" + JSON.stringify(props, null, 2))\r\n            if (props.RES?.User.id) {\r\n                return { RES: props.RES.User }\r\n            }\r\n            return { ERR: { errCode: userQueryApiErrors_e.USER_FETCH_API_UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(response, null, 2))\r\n    return response\r\n}\r\n\r\n\r\n///userQueryAPITest\r\n/* {\r\n    (async () => {\r\n        const log = new logger(\"login test function\")\r\n        const _res = await fun({\r\n            email: \"iamlive24@gmail.com\",\r\n            password: \"Ioplmkjnb@1\",\r\n            log: log ? new logger(\"loginAPI\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n    })()\r\n} */\r\n","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nexport enum loginApiErrors_e {\r\n    LOGIN_API_UNKNOWN_EMAIL = \"LOGIN_API_UNKNOWN_EMAIL\",\r\n    LOGIN_API_INCORRECT_PASSWORD = \"LOGIN_API_INCORRECT_PASSWORD\",\r\n    LOGIN_API_UNHANDLED = \"LOGIN_API_UNHANDLED\",\r\n}\r\n\r\ninterface response_i {\r\n    authenticateUserWithPassword: {\r\n        item: UNIVERSALS.GLOBALS.User_t\r\n    }\r\n}\r\n\r\nexport interface error_i {\r\n    /**\r\n     * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n     */\r\n    extensions?: \"INTERNAL_SERVER_ERROR\"\r\n    message?: \"[passwordAuth:secret:mismatch] The password provided is incorrect\"\r\n    | \"[passwordAuth:identity:notFound] The email provided didn't identify any undefined\"\r\n}\r\n\r\nexport interface _loginAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.User_t\r\n    ERR?: baseError<error_i, loginApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface v1_props {\r\n    email: string\r\n    password: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: v1_props) => Promise<_loginAPi_returnType> = async ({\r\n    email,\r\n    password,\r\n    log }: v1_props) => {\r\n\r\n    interface variables_i {\r\n        email: string\r\n        password: string\r\n    }\r\n    var response = await makeHttpQuery<response_i, error_i, variables_i, _loginAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.HUE_User_authenticateMutation_,\r\n        variables: {\r\n            email,\r\n            password\r\n        },\r\n        resolveData:\r\n            /**\r\n             * # resolveData\r\n             * ### description\r\n             * check if desired dataset exists than send the data to next level resolved else filter for errors. if eror\r\n             * is recognised than send specific error else send curent level unhandled as ERR object\r\n             * \r\n             * ## changelog\r\n             * \r\n             * ## featureList\r\n             *  \r\n             * ### responseHandling\r\n             * ##### description\r\n             *      if present then send the data to next resolver else check \r\n             *      for possible errors else send current level unhandled error\r\n             * \r\n             * \r\n             * ### errorHandling\r\n             * - [ ] NO Data/unknown/undefined error\r\n             * - [ ] INTERNAL_SERVER_ERROR\r\n             * - [ ] TODO incorrect password\r\n             * - [ ] incorrect email\r\n             */\r\n            (props) => {\r\n                log?.print(\"loginAPI resolve DATA \" + JSON.stringify(props, null, 2))\r\n                if (props.ERR?.error?.message == \"[passwordAuth:secret:mismatch] The password provided is incorrect\") {\r\n                    log?.print(\"Its an password incorrect\")\r\n                    return { ERR: { errCode: loginApiErrors_e.LOGIN_API_INCORRECT_PASSWORD, errMsg: props.ERR.error.message } }\r\n                }\r\n                if (props.ERR?.error?.message == \"[passwordAuth:identity:notFound] The email provided didn't identify any undefined\") {\r\n                    log?.print(\"Its an incorrect email\")\r\n                    return { ERR: { errCode: loginApiErrors_e.LOGIN_API_UNKNOWN_EMAIL, errMsg: props.ERR.error.message + \" You can consider signingUp with the provided email\" } }\r\n                }\r\n                if (props.RES?.authenticateUserWithPassword?.item?.id) {\r\n                    log?.print(\"user authinticated successfully\")\r\n                    return { RES: props.RES.authenticateUserWithPassword.item }\r\n                }\r\n                return { ERR: { errCode: loginApiErrors_e.LOGIN_API_UNHANDLED } }\r\n            },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(response, null, 2))\r\n    return response\r\n}\r\n\r\n\r\n///loginAPITest\r\n/* {\r\n    (async () => {\r\n        const log = new logger(\"login test function\")\r\n        const _res = await fun({\r\n            email: \"iamlive24@gmail.com\",\r\n            password: \"Ioplmkjnb@1\",\r\n            log: log ? new logger(\"loginAPI\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n    })()\r\n} */\r\n","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nenum signupApiErrors_e {\r\n    SIGNUP_API_EMAIL_ALREADY_REGISTERED = \"SIGNUP_API_ALREADY_REGISTERED\",\r\n    SIGNUP_API_PASSWORD_TOO_SHORT = \"SIGNUP_API_PASSWORD_TOO_SHORT\",\r\n    SIGNUP_API_PASSWORD_NOT_STRONG = \"SIGNUP_API_PASSWORD_NOT_STRONG\",\r\n    SIGNUP_API_INVALID_EMAIL = \"SIGNUP_API_INVALID_EMAIL\",\r\n    SIGNUP_API_UNHANDLED = \"SIGNUP_API_UNHANDLED\"\r\n}\r\n\r\ninterface response_i {\r\n    createUser?: UNIVERSALS.GLOBALS.User_t\r\n}\r\n\r\ninterface error_i {\r\n    /**\r\n    * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n    */\r\n    message?: string\r\n    extensions?: {\r\n        code?: string\r\n    }\r\n}\r\n\r\nexport interface _signupAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.User_t\r\n    ERR?: baseError<error_i, signupApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    userName: string\r\n    email: string\r\n    password: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_signupAPi_returnType> = async ({ email, password, userName, log }: fun_t) => {\r\n\r\n    interface variables_i {\r\n        userName: string\r\n        email: string\r\n        password: string\r\n    }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _signupAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.HUE_User_createMutation_,\r\n        variables: {\r\n            email,\r\n            password,\r\n            userName,\r\n        },\r\n        resolveData: (props) => {\r\n            //log?.print(\"resolve DATA\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR?.error) {\r\n                log?.print(\"ERR - resolve DATA error object \" + JSON.stringify(props.ERR.error, null, 2))\r\n                if (props.ERR.error.message) {\r\n                    if (props.ERR.error.message == \"[password:minLength:user:password] Value must be at least 8 characters long.\") {\r\n                        return { ERR: { errCode: signupApiErrors_e.SIGNUP_API_PASSWORD_TOO_SHORT, errMsg: props.ERR.error.message } }\r\n                    }\r\n                    else if (props.ERR.error.message == \"[password:rejectCommon:user:password] Common and frequently-used passwords are not allowed.\") {\r\n                        return { ERR: { errCode: signupApiErrors_e.SIGNUP_API_PASSWORD_NOT_STRONG, errMsg: props.ERR.error.message } }\r\n                    }\r\n                    /**\r\n                     * @imp - this section has to checked in last as the filter string could be assosiated with other errors too, especially in case of multiple errors \r\n                     */\r\n                    else if (props.ERR.error.message?.indexOf(\"E11000 duplicate key error collection: huelite.users\") >= -1) {\r\n                        return { ERR: { errCode: signupApiErrors_e.SIGNUP_API_EMAIL_ALREADY_REGISTERED, errMsg: props.ERR.error.message } }\r\n                    }\r\n                }\r\n            }\r\n            else if (props.RES && props.RES.createUser?.id) {\r\n                log?.print(\"resolve Data user created successfully\" + JSON.stringify(props.RES.createUser, null, 2))\r\n                return { RES: props.RES.createUser }\r\n            }\r\n            return { ERR: { errCode: signupApiErrors_e.SIGNUP_API_UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///loginAPITest\r\n/* {\r\n    (async () => {\r\n        const log = new logger(\"signup test function\")\r\n        const _res = await fun({\r\n            email: \"ijgjhvhj@gmail.com\",\r\n            password: \"Ioplmkjnb@1\",\r\n            userName: \"testUser\",\r\n            log: log ? new logger(\"signupAPI\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n\r\n        log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n    })()\r\n} */","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nenum userUpdateApiErrors_e {\r\n    USER_UPDATE_API_PASSWORD_TOO_SHORT = \"USER_UPDATE_API_PASSWORD_TOO_SHORT\",\r\n    USER_UPDATE_API_PASSWORD_EASY = \"USER_UPDATE_API_PASSWORD_EASY\",\r\n    USER_UPDATE_API_EMAIL_ALREADY_REGISTERED = \"USER_UPDATE_API_PASSWORD_EASY\",\r\n    USER_UPDATE_API_ID_INCORRECT_OR_NOT_PROVIDED = \"USER_UPDATE_API_ID_INCORRECT_OR_NOT_PROVIDED\",\r\n    USER_UPDATE_API_UNHANDLED = \"USER_UPDATE_API_UNHANDLED\",\r\n}\r\n\r\ninterface response_i {\r\n    updateUser: Omit<UNIVERSALS.GLOBALS.User_t, \"devices\">\r\n}\r\n\r\ninterface error_i {\r\n    message?: \"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\"\r\n    | \"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\"\r\n    | \"[password:rejectCommon:user:password] Common and frequently-used passwords are not allowed.\"\r\n    | \"[password:minLength:user:password] Value must be at least 8 characters long.\"\r\n    extensions: {\r\n        code: \"INTERNAL_SERVER_ERROR\",\r\n    }\r\n}\r\n\r\nexport interface _userUpdate_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.User_t\r\n    ERR?: baseError<error_i, userUpdateApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    id: string\r\n    userName?: string\r\n    password?: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_userUpdate_returnType> = async ({ id, userName, password, log }: fun_t) => {\r\n\r\n    interface variables_i {\r\n        id: string\r\n        userName?: string\r\n        password?: string\r\n    }\r\n    let _var: variables_i = { id: id }\r\n    if (password)\r\n        _var = { ..._var, password }\r\n    if (userName)\r\n        _var = { ..._var, userName }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _userUpdate_returnType>({\r\n        query: UNIVERSALS.GLOBALS.HUE_User_updateMutation_,\r\n        variables: _var,\r\n        resolveData: (props) => {\r\n            log?.print(\"resolve data\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR) {\r\n                log?.print(\"resolve data Error exists \" + JSON.stringify(props.ERR, null, 2))\r\n                if (props.ERR.error?.message == \"[password:rejectCommon:user:password] Common and frequently-used passwords are not allowed.\") {\r\n                    return { ERR: { errCode: userUpdateApiErrors_e.USER_UPDATE_API_PASSWORD_EASY, errMsg: props.ERR.error.message } }\r\n                }\r\n                if (props.ERR.error?.message == \"[password:minLength:user:password] Value must be at least 8 characters long.\") {\r\n                    return { ERR: { errCode: userUpdateApiErrors_e.USER_UPDATE_API_PASSWORD_TOO_SHORT, errMsg: props.ERR.error.message } }\r\n                }\r\n                if (props.ERR.error?.message == \"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\" || props.ERR.error?.message == \"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\") {\r\n                    return { ERR: { errCode: userUpdateApiErrors_e.USER_UPDATE_API_ID_INCORRECT_OR_NOT_PROVIDED, errMsg: props.ERR.error.message } }\r\n                }\r\n            }\r\n            else if (props.RES?.updateUser?.id) {\r\n                log?.print(\"resolve data user update successfully \" + JSON.stringify(props.RES.updateUser, null, 2))\r\n                return { RES: props.RES.updateUser }\r\n            }\r\n            return { ERR: { errCode: userUpdateApiErrors_e.USER_UPDATE_API_UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///update API test\r\n/* {\r\n    (async () => {\r\n        const log = new logger(\"update test function\")\r\n        const _res = await fun({\r\n            id: \"5fea01e45760e019bcf516db\",\r\n            //id: \"\",\r\n            password: \"password\",\r\n            userName: \"testUser temp\",\r\n            log: log ? new logger(\"updateAPI\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n\r\n        log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n    })()\r\n} */","import * as API from \"./v1\";\r\n\r\n\r\nexport const apiClass = new class {\r\n    IP: string | undefined\r\n    ID = \"API-\" + Math.floor(Math.random() * 10001);\r\n    constructor(IP?: string) {\r\n        console.log(\">>>>api class constructor>>>>\" + this.ID)\r\n        this.IP = IP\r\n    }\r\n}\r\n\r\nexport default API\r\n","\r\nexport interface deviceSocketHBResponse {\r\n  MAC?: string;\r\n  WIFI_STATUS?: \"WL_TIMEOUT\" | \"WL_CONNECTED\" | \"WL_DISCONNECTED\" | \"WL_SCAN_COMPLETED\" | \"WL_CONNECT_FAILED\" | \"WL_IDLE_STATUS\" | \"WL_CONNECTION_LOST\" | \"WL_NO_SSID_AVAIL\" | \"UNKNOWN\";\r\n  PAIR_STATUS?: boolean;\r\n  IP?: string;\r\n  DEVICE?: string;\r\n  BUILD_VERSION?: string;\r\n}\r\n\r\ninterface webSocketProps {\r\n  (_props: {\r\n    ipAddr: string\r\n    onOpen?: (s: any) => void\r\n    onMsg: (s: any) => void\r\n    onErr?: (s: any) => void\r\n    onClose?: (s: any) => void\r\n  }): Promise<WebSocket | null>;\r\n}\r\nconst getWebSocket: webSocketProps = async ({\r\n  ipAddr,\r\n  onOpen,\r\n  onMsg,\r\n  onErr,\r\n  onClose,\r\n}) => {\r\n  let wsUrl = `ws://${ipAddr}/ws`;\r\n  try {\r\n    let ws = await new WebSocket(wsUrl);\r\n\r\n    ws.onopen = (e) => {\r\n      if (ws) {\r\n        try {\r\n          ws.send(\"Connected\");\r\n        } catch (e) {\r\n          console.error(\"errrrrrrrrrrrrrrrrrrrrr\" + e);\r\n        }\r\n        onOpen ? onOpen(e) : {}\r\n      }\r\n    };\r\n\r\n    ws.onerror = (e) => {\r\n      onErr ? onErr(e) : {}\r\n    };\r\n\r\n    ws.onmessage = (m) => {\r\n      onMsg(m.data);\r\n    };\r\n\r\n    ws.onclose = (e) => {\r\n      onClose ? onClose(e) : {}\r\n    }\r\n\r\n    return ws;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { getWebSocket };\r\n\r\n","import moment from \"moment\";\r\n\r\n\r\n\r\n\r\n\r\nconst getCurrentTimeStampInSeconds = () => {\r\n  return Math.floor(Date.now() / 1000);\r\n};\r\n\r\ntype getTimeDiffNow_type = (timeStamp: number | undefined) => number;\r\nconst getTimeDiffNow: getTimeDiffNow_type = (timeStamp) => {\r\n  if (timeStamp) return Math.floor((getCurrentTimeStampInSeconds() - timeStamp) / 1000);\r\n  return 0;\r\n};\r\n\r\ntype getTimeDiffNowInMs_type = (timeStamp: number | undefined) => number;\r\nconst getTimeDiffNowInMs: getTimeDiffNowInMs_type = (timeStamp) => {\r\n  if (timeStamp) return Math.round(Date.now() - timeStamp);\r\n  return 0;\r\n};\r\n\r\nexport {\r\n  getCurrentTimeStampInSeconds,\r\n  getTimeDiffNow,\r\n  getTimeDiffNowInMs,\r\n};\r\n","import { State } from \"react-native-gesture-handler\"\r\nimport { log } from \"react-native-reanimated\"\r\nimport UNIVERSALS from \"../../@universals\"\r\nimport { reduxStore } from \"../../redux\"\r\nimport { _deviceListSaga_action } from \"../../redux/deviceListReducer/saga/deviceList\"\r\nimport { getCurrentTimeStampInSeconds } from \"../DateTimeUtil\"\r\nimport { logger } from \"../logger\"\r\n\r\n\r\n\r\n\r\ninterface beforeUpdateDevice_props {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t\r\n    preState?: UNIVERSALS.GLOBALS.DEVICE_t\r\n    deletedObject?: UNIVERSALS.GLOBALS.DEVICE_t\r\n}\r\ntype beforeUpdateDevice_t = (props: beforeUpdateDevice_props) => void\r\nconst beforeUpdateDeviceSideEffect: beforeUpdateDevice_t = async ({ device }) => {\r\n    // - [ ] compare timestamp and return latest accordingly\r\n}\r\n\r\n\r\n\r\n/*\r\n'########::'########:'##::::'##:'####::'######::'########::::'##::::'##:'########::'########:::::'###::::'########:'########:\r\n ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....::::: ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....::\r\n ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##:::::::::: ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::\r\n ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######:::::: ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######:::\r\n ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...::::::: ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::\r\n ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##:::::::::: ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##:::::::\r\n ########:: ########:::. ###::::'####:. ######:: ########::::. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########:\r\n........:::........:::::...:::::....:::......:::........::::::.......:::..:::::::::........:::..:::::..:::::..:::::........::\r\n*/\r\n\r\ninterface add_updateDevices_props {\r\n    cmd: \"ADD_UPDATE_DEVICES\"\r\n    newDevices: UNIVERSALS.GLOBALS.DEVICE_t[]\r\n    /** weather or not coming devices are coming from cloud as user's all devices latest state */\r\n    cloudState?: boolean\r\n    log?: logger\r\n}\r\ninterface add_updateDevices_t { (props: add_updateDevices_props): UNIVERSALS.GLOBALS.DEVICE_t[] }\r\nconst add_updateDevices: add_updateDevices_t = ({ newDevices, cloudState, ...props }) => {\r\n    let requireReduxUpdate = false\r\n    let localDeviceList = reduxStore.store.getState().deviceReducer.deviceList\r\n    let newDeviceList = localDeviceList\r\n    newDevices.forEach((newDevice, newDevice_index) => {\r\n        let localStateDevice = newDeviceList.find(item => item.Mac == newDevice.Mac)\r\n        if (localStateDevice) {\r\n            let localStateDeviceIndex = newDeviceList.findIndex(item => item.Mac == newDevice.Mac)\r\n            props.log?.print(\"device found in local state\")\r\n            beforeUpdateDeviceSideEffect({ device: newDevice, preState: localStateDevice })\r\n            if (localStateDevice.localTimeStamp < newDevice.localTimeStamp\r\n                || (newDevice.ts && localStateDevice.localTimeStamp < newDevice.ts)\r\n            ) {\r\n                requireReduxUpdate = true\r\n                newDeviceList = newDeviceList.filter(item => item.Mac != newDevice.Mac)\r\n                newDeviceList.splice(localStateDeviceIndex, 0, newDevice)\r\n            } else if ((localStateDevice.ts && newDevice.ts && localStateDevice.ts != newDevice.ts)\r\n                || (!localStateDevice.ts && newDevice.ts)\r\n            ) {\r\n                requireReduxUpdate = true\r\n                beforeUpdateDeviceSideEffect({ device: { ...localStateDevice, ts: newDevice.ts }, preState: localStateDevice })\r\n                newDeviceList = newDeviceList.filter(item => item.Mac != newDevice.Mac)\r\n                newDeviceList.splice(localStateDeviceIndex, 0, newDevice)\r\n            }\r\n        } else {\r\n            props.log?.print(\"device not found in local state\")\r\n            /* check if device is present in deletedDeviceList */\r\n            let deviceMatchFromDeletedDeviceList = reduxStore.store.getState().deviceReducer.deletedDevices.find(item => item.Mac == newDevice.Mac)\r\n            if (deviceMatchFromDeletedDeviceList && cloudState && deviceMatchFromDeletedDeviceList.localTimeStamp > newDevice.localTimeStamp) {// IMP - only filter deletedDeviceList in case if its a cloudState comparision, generally user could be re-pairing the device after delete\r\n                /** \r\n                 * if device is present is present in deletedDeviceList and timeStamp\r\n                 * is latest compared to `newDevice.ts`, then in that case it is assumed\r\n                 * that the deviec delete is not yet updated to cloud and newDevice shouldn't\r\n                 * be added to list\r\n                 */\r\n                props.log?.print(newDevice.Mac)._print(\"is present in deleted deviceList, doesn't need to be updated\")\r\n            }\r\n            else {\r\n                requireReduxUpdate = true\r\n                newDeviceList.push(newDevice)\r\n                if (deviceMatchFromDeletedDeviceList && deviceMatchFromDeletedDeviceList.localTimeStamp < newDevice.localTimeStamp) {\r\n                    props.log?.print(\"removing\")._print(newDevice.Mac)._print(\"from deleted deviceList\")\r\n                    reduxStore.store.dispatch(reduxStore.actions.deviceList.deletedDeviceListRedux({\r\n                        deletedDeviceList: reduxStore.store.getState().deviceReducer.deletedDevices.filter(item => item.Mac == newDevice.Mac)\r\n                    }))\r\n                }\r\n                beforeUpdateDeviceSideEffect({ device: newDevice })\r\n            }\r\n        }\r\n    });\r\n    if (cloudState) {\r\n        newDeviceList = newDeviceList.filter(item => (!item.id || (() => {\r\n            let devicesFoundInCloudState = false\r\n            newDevices.forEach(element => {\r\n                if (element.Mac == item.Mac)\r\n                    devicesFoundInCloudState = true\r\n            });\r\n            if (devicesFoundInCloudState)\r\n                return true\r\n            props.log?.print(\"removing device mac \" + item.Mac)\r\n            requireReduxUpdate = true\r\n            return false\r\n        })()))\r\n        props.log?.print(\"filtered device list \" + JSON.stringify(newDeviceList, null, 1))\r\n    }\r\n    if (requireReduxUpdate) {\r\n        props.log?.print(\"Sending Saga Action with new list is \" + JSON.stringify(newDeviceList, null, 2))\r\n        reduxStore.store.dispatch(reduxStore.actions.deviceList.deviceListSaga({\r\n            deviceList: newDeviceList,\r\n            log: props.log ? new logger(\"devicelist saga\", props.log) : undefined\r\n        }))\r\n    } else {\r\n        props.log?.print(\"update not required \")\r\n    }\r\n    return newDeviceList\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n'########::'########:'##::::'##::'#######::'##::::'##:'########::::'########::'########:'##::::'##:'####::'######::'########:\r\n ##.... ##: ##.....:: ###::'###:'##.... ##: ##:::: ##: ##.....::::: ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....::\r\n ##:::: ##: ##::::::: ####'####: ##:::: ##: ##:::: ##: ##:::::::::: ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##:::::::\r\n ########:: ######::: ## ### ##: ##:::: ##: ##:::: ##: ######:::::: ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######:::\r\n ##.. ##::: ##...:::: ##. #: ##: ##:::: ##:. ##:: ##:: ##...::::::: ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...::::\r\n ##::. ##:: ##::::::: ##:.:: ##: ##:::: ##::. ## ##::: ##:::::::::: ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##:::::::\r\n ##:::. ##: ########: ##:::: ##:. #######::::. ###:::: ########:::: ########:: ########:::. ###::::'####:. ######:: ########:\r\n..:::::..::........::..:::::..:::.......::::::...:::::........:::::........:::........:::::...:::::....:::......:::........::\r\n*/\r\n\r\n\r\ninterface removeDeviceProps {\r\n    cmd: \"REMOVE_DEVICE\"\r\n    Mac: string\r\n    log?: logger\r\n}\r\nconst removeDevice = (props: removeDeviceProps) => {\r\n    let device = reduxStore.store.getState().deviceReducer.deviceList.find(device => device.Mac != props.Mac)\r\n    let newDeviceList = reduxStore.store.getState().deviceReducer.deviceList.filter(device => device.Mac != props.Mac)\r\n    props.log?.print(\"device removed > sending saga update\")._print(JSON.stringify(newDeviceList, null, 2))\r\n    if (device) {\r\n        if (device.id) {\r\n            /**\r\n             * add device in the deleted deviceList so as to remove it from the cloud later from background service\r\n             */\r\n            let __foo = reduxStore.store.getState().deviceReducer.deletedDevices.filter(item => item.Mac == props.Mac)\r\n            __foo.push({ ...device, localTimeStamp: getCurrentTimeStampInSeconds() })\r\n            reduxStore.store.dispatch(reduxStore.actions.deviceList.deletedDeviceListRedux({\r\n                deletedDeviceList: __foo\r\n            }))\r\n        }\r\n        reduxStore.store.dispatch(reduxStore.actions.deviceList.deviceListSaga({ deviceList: newDeviceList, log: props.log }))\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n:'######:::'#######::'##::::::::'#######::'########:::::'##::::'##:'########::'########:::::'###::::'########:'########:\r\n'##... ##:'##.... ##: ##:::::::'##.... ##: ##.... ##:::: ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....::\r\n ##:::..:: ##:::: ##: ##::::::: ##:::: ##: ##:::: ##:::: ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::\r\n ##::::::: ##:::: ##: ##::::::: ##:::: ##: ########::::: ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######:::\r\n ##::::::: ##:::: ##: ##::::::: ##:::: ##: ##.. ##:::::: ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::\r\n ##::: ##: ##:::: ##: ##::::::: ##:::: ##: ##::. ##::::: ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##:::::::\r\n. ######::. #######:: ########:. #######:: ##:::. ##::::. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########:\r\n:......::::.......:::........:::.......:::..:::::..::::::.......:::..:::::::::........:::..:::::..:::::..:::::........::\r\n*/\r\n\r\n\r\ninterface colorUpdate_props {\r\n    cmd: \"COLOR_UPDATE\"\r\n    deviceMac: string[]\r\n    hsv: { h?: number, s?: number, v?: number }\r\n    gestureState: State,\r\n    log?: logger\r\n}\r\n/** \r\n * ## featureRequest\r\n * - [ ] send the updated devicelist to devicelistAddUpdater\r\n */\r\nconst colorUpdate = ({ deviceMac, hsv: { h, s, v }, gestureState, log }: colorUpdate_props) => {\r\n    reduxStore.store.dispatch(\r\n        reduxStore.actions.deviceList.colorSaga({\r\n            deviceMac,\r\n            hsv: { h, s, v },\r\n            gestureState,\r\n            onActionComplete: ({ newDeviceList }) => {\r\n                reduxStore.store.dispatch(_deviceListSaga_action({ deviceList: newDeviceList, log }))\r\n            },\r\n            log\r\n        })\r\n    );\r\n}\r\n\r\n\r\n\r\n/*\r\n'########::'########:'##::::'##:'####::'######::'########:::::'#######::'########::'########:'########:::::'###::::'########::'#######::'########::\r\n ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....:::::'##.... ##: ##.... ##: ##.....:: ##.... ##:::'## ##:::... ##..::'##.... ##: ##.... ##:\r\n ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##:::::::::: ##:::: ##: ##:::: ##: ##::::::: ##:::: ##::'##:. ##::::: ##:::: ##:::: ##: ##:::: ##:\r\n ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######:::::: ##:::: ##: ########:: ######::: ########::'##:::. ##:::: ##:::: ##:::: ##: ########::\r\n ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...::::::: ##:::: ##: ##.....::: ##...:::: ##.. ##::: #########:::: ##:::: ##:::: ##: ##.. ##:::\r\n ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##:::::::::: ##:::: ##: ##:::::::: ##::::::: ##::. ##:: ##.... ##:::: ##:::: ##:::: ##: ##::. ##::\r\n ########:: ########:::. ###::::'####:. ######:: ########::::. #######:: ##:::::::: ########: ##:::. ##: ##:::: ##:::: ##::::. #######:: ##:::. ##:\r\n........:::........:::::...:::::....:::......:::........::::::.......:::..:::::::::........::..:::::..::..:::::..:::::..::::::.......:::..:::::..::\r\n*/\r\n\r\n\r\n\r\ntype containerListOperation_t = (props: add_updateDevices_props | removeDeviceProps | colorUpdate_props) => void\r\nconst deviceOperation: containerListOperation_t = async (props) => {\r\n    switch (props.cmd) {\r\n        case \"ADD_UPDATE_DEVICES\":\r\n            add_updateDevices(props)\r\n            break;\r\n\r\n\r\n        case \"REMOVE_DEVICE\":\r\n            removeDevice(props)\r\n            break;\r\n\r\n        case \"COLOR_UPDATE\":\r\n            props.log = props.log ? new logger(\"D's OP - color update\", props.log) : undefined\r\n            colorUpdate(props)\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return {}\r\n}\r\n\r\nexport default deviceOperation","import { Alert } from \"react-native\"\r\nimport UNIVERSALS from \"../../@universals\";\r\nimport { reduxStore } from \"../../redux\";\r\nimport API from \"../../services/api\";\r\nimport { logger } from \"../logger\";\r\nimport deviceOperator from \"./device.operator\"\r\nimport * as Facebook from 'expo-facebook';\r\n\r\n/*\r\n'##::::::::'#######:::'######::::'#######::'##::::'##:'########::::'########:'##::::'##:'##::: ##::'######::'########:'####::'#######::'##::: ##:\r\n ##:::::::'##.... ##:'##... ##::'##.... ##: ##:::: ##:... ##..::::: ##.....:: ##:::: ##: ###:: ##:'##... ##:... ##..::. ##::'##.... ##: ###:: ##:\r\n ##::::::: ##:::: ##: ##:::..::: ##:::: ##: ##:::: ##:::: ##::::::: ##::::::: ##:::: ##: ####: ##: ##:::..::::: ##::::: ##:: ##:::: ##: ####: ##:\r\n ##::::::: ##:::: ##: ##::'####: ##:::: ##: ##:::: ##:::: ##::::::: ######::: ##:::: ##: ## ## ##: ##:::::::::: ##::::: ##:: ##:::: ##: ## ## ##:\r\n ##::::::: ##:::: ##: ##::: ##:: ##:::: ##: ##:::: ##:::: ##::::::: ##...:::: ##:::: ##: ##. ####: ##:::::::::: ##::::: ##:: ##:::: ##: ##. ####:\r\n ##::::::: ##:::: ##: ##::: ##:: ##:::: ##: ##:::: ##:::: ##::::::: ##::::::: ##:::: ##: ##:. ###: ##::: ##:::: ##::::: ##:: ##:::: ##: ##:. ###:\r\n ########:. #######::. ######:::. #######::. #######::::: ##::::::: ##:::::::. #######:: ##::. ##:. ######::::: ##::::'####:. #######:: ##::. ##:\r\n........:::.......::::......:::::.......::::.......::::::..::::::::..:::::::::.......:::..::::..:::......::::::..:::::....:::.......:::..::::..::\r\n*/\r\n\r\ninterface logoutFunction_props {\r\n    cmd: \"LOGOUT\"\r\n    onLogout?: () => void\r\n}\r\n/**\r\n * \r\n * ## featureAddition\r\n * - [x] clear deviceList and reduxState upon logout\r\n */\r\nconst logoutFunction = ({ onLogout }: logoutFunction_props) => {\r\n    reduxStore.store.dispatch(reduxStore.actions.appCTX.userSagaAction({ user: undefined, saveToDB: true }))\r\n    reduxStore.store.dispatch(reduxStore.actions.deviceList.deviceListSaga({ deviceList: [], saveToDB: true }))\r\n    reduxStore.store.dispatch(reduxStore.actions.HBReducer.HBSocketClear({}))\r\n    if (onLogout)\r\n        onLogout()\r\n    return {}\r\n}\r\n\r\n/*\r\n'##::::::::'#######:::'######:::'####:'##::: ##::::'########:'##::::'##:'##::: ##::'######::'########:'####::'#######::'##::: ##:\r\n ##:::::::'##.... ##:'##... ##::. ##:: ###:: ##:::: ##.....:: ##:::: ##: ###:: ##:'##... ##:... ##..::. ##::'##.... ##: ###:: ##:\r\n ##::::::: ##:::: ##: ##:::..:::: ##:: ####: ##:::: ##::::::: ##:::: ##: ####: ##: ##:::..::::: ##::::: ##:: ##:::: ##: ####: ##:\r\n ##::::::: ##:::: ##: ##::'####:: ##:: ## ## ##:::: ######::: ##:::: ##: ## ## ##: ##:::::::::: ##::::: ##:: ##:::: ##: ## ## ##:\r\n ##::::::: ##:::: ##: ##::: ##::: ##:: ##. ####:::: ##...:::: ##:::: ##: ##. ####: ##:::::::::: ##::::: ##:: ##:::: ##: ##. ####:\r\n ##::::::: ##:::: ##: ##::: ##::: ##:: ##:. ###:::: ##::::::: ##:::: ##: ##:. ###: ##::: ##:::: ##::::: ##:: ##:::: ##: ##:. ###:\r\n ########:. #######::. ######:::'####: ##::. ##:::: ##:::::::. #######:: ##::. ##:. ######::::: ##::::'####:. #######:: ##::. ##:\r\n........:::.......::::......::::....::..::::..:::::..:::::::::.......:::..::::..:::......::::::..:::::....:::.......:::..::::..::\r\n*/\r\n\r\nenum loginValidationError_e {\r\n    LOGIN_VALIDATION_EMAIL_REQUIRED = \"LOGIN_VALIDATION : EMAIL REQUIRED\",\r\n    LOGIN_VALIDATION_EMAIL_INVALID = \"LOGIN_VALIDATION : EMAIL INVALID\",\r\n    LOGIN_VALIDATION_PASSWORD_REQUIRED = \"LOGIN_VALIDATION : PASSWORD REQUIRED\",\r\n    LOGIN_VALIDATION_PASSWORD_TOO_SHORT = \"LOGIN_VALIDATION : PASSWORD TOO SHORT\",\r\n}\r\ninterface loginFunction_props {\r\n    cmd: \"LOGIN\"\r\n    email: string\r\n    password: string\r\n    onLoginSuccess?: (user: UNIVERSALS.GLOBALS.USER_t) => void\r\n    onValidateDataFailed?: (props: API.baseError<any, loginValidationError_e>) => void\r\n    onLoginFailed?: (props: Pick<API.cloudAPI.user.loginAPI._loginAPi_returnType, \"ERR\"> | { ERR?: API.baseError<any, loginValidationError_e> }) => void\r\n    log?: logger\r\n}\r\ntype loginFunction_t = (props: loginFunction_props) => Promise<API.cloudAPI.user.loginAPI._loginAPi_returnType>\r\n/**\r\n * @description\r\n * - validates the input and return appropriate errors\r\n * - hit loginAPI\r\n * - update redux userState in case successfull response\r\n * - else return eoors as response\r\n */\r\nconst loginFunction: loginFunction_t = async ({\r\n    email,\r\n    password,\r\n    onLoginFailed,\r\n    onValidateDataFailed,\r\n    onLoginSuccess,\r\n    log\r\n}) => {\r\n    if (!email || !password || password.length < 8 || email.length < 6) {\r\n        log?.print(\"validation : email: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: loginValidationError_e.LOGIN_VALIDATION_EMAIL_REQUIRED }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onLoginFailed ? onLoginFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    const res = await API.cloudAPI.user.loginAPI.v1({\r\n        email,\r\n        password,\r\n        //log: log ? new logger(\"login API\", log) : undefined\r\n    })\r\n    if (res.RES?.id) {\r\n        log?.print(\"user found >>>> \" + JSON.stringify(res.RES, null, 2))\r\n        userStoreUpdateFunction({ user: UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES }) })\r\n        log?.print(\"device from cloud\" + JSON.stringify(res.RES.devices, null, 2))\r\n        log?.print(\"device converted to local\" + JSON.stringify(UNIVERSALS.GLOBALS.convert_Devices_backendToLocal({ devices: res.RES.devices ? res.RES.devices : [] }), null, 2))\r\n        deviceOperator({\r\n            cmd: \"ADD_UPDATE_DEVICES\",\r\n            newDevices: res.RES.devices ? UNIVERSALS.GLOBALS.convert_Devices_backendToLocal({ devices: res.RES.devices }) : [],\r\n            log: log ? new logger(\"device-operator add_update_devices\", log) : undefined\r\n        })\r\n        onLoginSuccess ? onLoginSuccess(UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES })) : {}\r\n        return res\r\n    }\r\n    else {\r\n        log?.print(\"ERR no user found >>>>-- \" + JSON.stringify(res, null, 2))\r\n        onLoginFailed ? onLoginFailed(res) : {}\r\n    }\r\n    return res\r\n}\r\n\r\n\r\n/*\r\n:'######::'####::'######:::'##::: ##:'##::::'##:'########:::::'########:'##::::'##:'##::: ##::'######::'########:'####::'#######::'##::: ##:\r\n'##... ##:. ##::'##... ##:: ###:: ##: ##:::: ##: ##.... ##:::: ##.....:: ##:::: ##: ###:: ##:'##... ##:... ##..::. ##::'##.... ##: ###:: ##:\r\n ##:::..::: ##:: ##:::..::: ####: ##: ##:::: ##: ##:::: ##:::: ##::::::: ##:::: ##: ####: ##: ##:::..::::: ##::::: ##:: ##:::: ##: ####: ##:\r\n. ######::: ##:: ##::'####: ## ## ##: ##:::: ##: ########::::: ######::: ##:::: ##: ## ## ##: ##:::::::::: ##::::: ##:: ##:::: ##: ## ## ##:\r\n:..... ##:: ##:: ##::: ##:: ##. ####: ##:::: ##: ##.....:::::: ##...:::: ##:::: ##: ##. ####: ##:::::::::: ##::::: ##:: ##:::: ##: ##. ####:\r\n'##::: ##:: ##:: ##::: ##:: ##:. ###: ##:::: ##: ##::::::::::: ##::::::: ##:::: ##: ##:. ###: ##::: ##:::: ##::::: ##:: ##:::: ##: ##:. ###:\r\n. ######::'####:. ######::: ##::. ##:. #######:: ##::::::::::: ##:::::::. #######:: ##::. ##:. ######::::: ##::::'####:. #######:: ##::. ##:\r\n:......:::....:::......::::..::::..:::.......:::..::::::::::::..:::::::::.......:::..::::..:::......::::::..:::::....:::.......:::..::::..::\r\n*/\r\n\r\nenum signupValidationError_e {\r\n    SIGNUP_VALIDATION_EMAIL_REQUIRED = \"SIGNUP_VALIDATION : EMAIL REQUIRED\",\r\n    SIGNUP_VALIDATION_EMAIL_INVALID = \"SIGNUP_VALIDATION : EMAIL INVALID\",\r\n    SIGNUP_VALIDATION_PASSWORD_MISMATCH = \"SIGNUP_VALIDATION : PASSWORD MISMATCH\",\r\n    SIGNUP_VALIDATION_PASSWORD_INVALID = \"SIGNUP_VALIDATION : PASSWORD INVALID\",\r\n    SIGNUP_VALIDATION_PASSWORD_TOO_SHORT = \"SIGNUP_VALIDATION : PASSWORD TOO SHORT\",\r\n    SIGNUP_VALIDATION_USERNAME_TOO_SHORT = \"SIGNUP_VALIDATION : USERNAME_TOO_SHORT\",\r\n    SIGNUP_VALIDATION_USERNAME_REQUIRED = \"SIGNUP_VALIDATION : USERNAME REQUIRED\",\r\n}\r\ninterface signupFunction_props {\r\n    cmd: \"SIGNUP\"\r\n    email: string\r\n    password: string\r\n    re_password: string\r\n    userName: string\r\n    onSignupSuccess?: (user: UNIVERSALS.GLOBALS.USER_t) => void\r\n    onValidateDataFailed?: (props: API.baseError<any, signupValidationError_e>) => void\r\n    onSignupFailed?: (props: Pick<API.cloudAPI.user.signupAPI._signupAPi_returnType, \"ERR\"> | { ERR?: API.baseError<any, signupValidationError_e> }) => void\r\n    log?: logger\r\n}\r\ntype signupFunction_t = (props: signupFunction_props) => Promise<API.cloudAPI.user.signupAPI._signupAPi_returnType>\r\n/**\r\n * @description\r\n * - validates the input and return appropriate errors\r\n * - hit signupAPI\r\n * - update redux userState in case successfull response\r\n * - else return eoors as response\r\n */\r\nconst signupFunction: signupFunction_t = async ({\r\n    email,\r\n    password,\r\n    re_password,\r\n    userName,\r\n    onSignupFailed,\r\n    onValidateDataFailed,\r\n    onSignupSuccess,\r\n    log\r\n}) => {\r\n    if (!email || email.length < 6) {\r\n        log?.print(\"validation : email: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: signupValidationError_e.SIGNUP_VALIDATION_EMAIL_INVALID }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onSignupFailed ? onSignupFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    } else if (!userName) {\r\n        log?.print(\"validation : email: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: signupValidationError_e.SIGNUP_VALIDATION_USERNAME_REQUIRED }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onSignupFailed ? onSignupFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    } else if (userName.length < 6) {\r\n        log?.print(\"validation : email: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: signupValidationError_e.SIGNUP_VALIDATION_USERNAME_TOO_SHORT }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onSignupFailed ? onSignupFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    else if (!password || password.length < 8) {\r\n        log?.print(\"validation : email: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: signupValidationError_e.SIGNUP_VALIDATION_PASSWORD_INVALID }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onSignupFailed ? onSignupFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    else if (re_password != password) {\r\n        log?.print(\"validation : email: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: signupValidationError_e.SIGNUP_VALIDATION_PASSWORD_MISMATCH }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onSignupFailed ? onSignupFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    const res = await API.cloudAPI.user.signupAPI.v1({\r\n        userName,\r\n        email,\r\n        password,\r\n        log: log ? new logger(\"signup API\", log) : undefined\r\n    })\r\n    log?.print(\"res >>>> \" + JSON.stringify(res, null, 2))\r\n    if (res.RES?.id) {\r\n        log?.print(\"user >>>> \" + JSON.stringify(res.RES, null, 2))\r\n        userStoreUpdateFunction({ user: UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES }) })\r\n        onSignupSuccess ? onSignupSuccess(UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES })) : {}\r\n        return res\r\n    }\r\n    else {\r\n        onSignupFailed ? onSignupFailed(res) : {}\r\n    }\r\n    return res\r\n}\r\n\r\n\r\n\r\n/*\r\n'########::::'###:::::'######::'########:'########:::'#######:::'#######::'##:::'##::::'##::::::::'#######:::'######:::'####:'##::: ##:\r\n ##.....::::'## ##:::'##... ##: ##.....:: ##.... ##:'##.... ##:'##.... ##: ##::'##::::: ##:::::::'##.... ##:'##... ##::. ##:: ###:: ##:\r\n ##::::::::'##:. ##:: ##:::..:: ##::::::: ##:::: ##: ##:::: ##: ##:::: ##: ##:'##:::::: ##::::::: ##:::: ##: ##:::..:::: ##:: ####: ##:\r\n ######:::'##:::. ##: ##::::::: ######::: ########:: ##:::: ##: ##:::: ##: #####::::::: ##::::::: ##:::: ##: ##::'####:: ##:: ## ## ##:\r\n ##...:::: #########: ##::::::: ##...:::: ##.... ##: ##:::: ##: ##:::: ##: ##. ##:::::: ##::::::: ##:::: ##: ##::: ##::: ##:: ##. ####:\r\n ##::::::: ##.... ##: ##::: ##: ##::::::: ##:::: ##: ##:::: ##: ##:::: ##: ##:. ##::::: ##::::::: ##:::: ##: ##::: ##::: ##:: ##:. ###:\r\n ##::::::: ##:::: ##:. ######:: ########: ########::. #######::. #######:: ##::. ##:::: ########:. #######::. ######:::'####: ##::. ##:\r\n..::::::::..:::::..:::......:::........::........::::.......::::.......:::..::::..:::::........:::.......::::......::::....::..::::..::\r\n*/\r\n\r\n\r\nenum FBLoginValidationError_e {\r\n    FB_LOGIN_VALIDATION_EMAIL_INVALID = \"FB_VALIDATION : EMAIL INVALID\",\r\n    FB_LOGIN_VALIDATION_USERNAME_INVALID = \"FB_VALIDATION : USERNAME INVALID\",\r\n}\r\ninterface fbLogin_props {\r\n    cmd: \"FB_LOGIN\"\r\n    onFbLoginSuccess?: (user: UNIVERSALS.GLOBALS.USER_t) => void\r\n    onValidateDataFailed?: (props: API.baseError<any, FBLoginValidationError_e>) => void\r\n    onFbLoginFailed?: (props: Pick<API.cloudAPI.user.signupAPI._signupAPi_returnType | API.cloudAPI.user.loginAPI._loginAPi_returnType, \"ERR\"> | { ERR?: API.baseError<any, FBLoginValidationError_e> }) => void\r\n    log?: logger\r\n}\r\ntype fbLoginFunction_t = (props: fbLogin_props) => Promise<API.cloudAPI.user.loginAPI._loginAPi_returnType | API.cloudAPI.user.signupAPI._signupAPi_returnType>\r\nconst fbLoginFunction: fbLoginFunction_t = async ({ log, ...props }) => {\r\n    try {\r\n        await Facebook.initializeAsync({ appId: \"366634227889659\" });\r\n        log?.print(\"facebook login initialized\");\r\n        const fbProps = await Facebook.logInWithReadPermissionsAsync({\r\n            permissions: [\"public_profile\", \"email\"],\r\n        });\r\n        if (fbProps.type === \"success\") {\r\n            // Get the user's name using Facebook's Graph API\r\n            const response = await fetch(`https://graph.facebook.com/me?fields=id,name,email&access_token=${fbProps.token}`);\r\n            log?.print('fb-auth response <<< ' + JSON.stringify(response));\r\n            let fbRes = await response.json()\r\n            let fbEmail = fbRes.email\r\n            let fbName = fbRes.name\r\n            if (fbEmail && fbName) {\r\n                log?.print(\"found email and username >> \")._print(fbEmail)._print(fbName)\r\n                loginFunction({\r\n                    cmd: \"LOGIN\",\r\n                    email: \"fb-\" + fbEmail,\r\n                    password: \"tempFbLoginPass@1\",\r\n                    onLoginFailed: ({ ERR }) => {\r\n                        log?.print(\"login failed at fbLoginFunction \")._printPretty(ERR)\r\n                        if (ERR?.errCode == API.cloudAPI.user.loginAPI.loginApiErrors_e.LOGIN_API_UNKNOWN_EMAIL) {\r\n                            signupFunction({\r\n                                cmd: \"SIGNUP\",\r\n                                email: \"fb-\" + fbEmail,\r\n                                password: \"tempFbLoginPass@1\",\r\n                                re_password: \"tempFbLoginPass@1\",\r\n                                userName: fbName,\r\n                                onSignupSuccess: (res) => {\r\n                                    log?.print(\"signUp success at fbLogin\")._printPretty(res)\r\n                                    props.onFbLoginSuccess ? props.onFbLoginSuccess(res) : {}\r\n                                },\r\n                                onSignupFailed: (res) => {\r\n                                    log?.print(\"signUp failed at fbLogin\")._printPretty(res)\r\n                                    throw new Error(\"signup failed\");\r\n                                }\r\n                            })\r\n                        }\r\n                        else {\r\n                            throw new Error(\"loginFailed\");\r\n                        }\r\n                    },\r\n                    onLoginSuccess: (res) => {\r\n                        log?.print(\"loginSuccess at fbLogin\")._printPretty(res)\r\n                        props.onFbLoginSuccess ? props.onFbLoginSuccess(res) : {}\r\n                    }\r\n                })\r\n            } else {\r\n                log?.print(\"email and username not found\")\r\n                throw new Error(\"\");\r\n            }\r\n        } else {\r\n            log?.print('fb-auth initialize error >>> ');\r\n            throw new Error(\"fb-auth initialize error >>> \");\r\n        }\r\n    } catch ({ message }) {\r\n        log?.print('fb-auth error >>> ' + JSON.stringify(message));\r\n        Alert.alert(\"Facebook Login Error:\", \"you can try logging in with \" + (UNIVERSALS.venderConf.venderPrefix == \"HUE\" ? \"HUElite\" : UNIVERSALS.venderConf.venderPrefix) + \" ID\");\r\n    }\r\n    return {}\r\n}\r\n\r\n\r\n/*\r\n'##::::'##::'######::'########:'########::::::'######::'########::'#######::'########::'########::::'##::::'##:'########::'########:::::'###::::'########:'########:\r\n ##:::: ##:'##... ##: ##.....:: ##.... ##::::'##... ##:... ##..::'##.... ##: ##.... ##: ##.....::::: ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....::\r\n ##:::: ##: ##:::..:: ##::::::: ##:::: ##:::: ##:::..::::: ##:::: ##:::: ##: ##:::: ##: ##:::::::::: ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::\r\n ##:::: ##:. ######:: ######::: ########:::::. ######::::: ##:::: ##:::: ##: ########:: ######:::::: ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######:::\r\n ##:::: ##::..... ##: ##...:::: ##.. ##:::::::..... ##:::: ##:::: ##:::: ##: ##.. ##::: ##...::::::: ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::\r\n ##:::: ##:'##::: ##: ##::::::: ##::. ##:::::'##::: ##:::: ##:::: ##:::: ##: ##::. ##:: ##:::::::::: ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##:::::::\r\n. #######::. ######:: ########: ##:::. ##::::. ######::::: ##::::. #######:: ##:::. ##: ########::::. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########:\r\n:.......::::......:::........::..:::::..::::::......::::::..::::::.......:::..:::::..::........::::::.......:::..:::::::::........:::..:::::..:::::..:::::........::\r\n*/\r\n\r\n\r\n\r\n\r\ninterface userStoreUpdareFunction_props {\r\n    user: UNIVERSALS.GLOBALS.USER_t\r\n    log?: logger\r\n}\r\ntype userStoreUpdateFunction_t = (props: userStoreUpdareFunction_props) => void\r\nexport const userStoreUpdateFunction: userStoreUpdateFunction_t = async ({ user, log }) => {\r\n    const localUserState = reduxStore.store.getState().appCTXReducer.user\r\n    let latestUserState = user\r\n    if (localUserState && user.ts) {\r\n        if (localUserState.localTimeStamp > user.ts) {\r\n            latestUserState = localUserState\r\n            latestUserState.ts = user.ts\r\n        }\r\n        else if (user.ts > localUserState.localTimeStamp) {\r\n            latestUserState = user\r\n        }\r\n    }\r\n    if (latestUserState.localTimeStamp != localUserState?.localTimeStamp && latestUserState.ts != localUserState?.ts) {\r\n        reduxStore.store.dispatch(reduxStore.actions.appCTX.userSagaAction({ user: latestUserState, saveToDB: true }))\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n'##::::'##:'########::'########:::::'###::::'########:'########:::::::'###::::'########::'####:\r\n ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....:::::::'## ##::: ##.... ##:. ##::\r\n ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::::::'##:. ##:: ##:::: ##:: ##::\r\n ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######::::::'##:::. ##: ########::: ##::\r\n ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::::: #########: ##.....:::: ##::\r\n ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##:::::::::: ##.... ##: ##::::::::: ##::\r\n. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########:::: ##:::: ##: ##::::::::'####:\r\n:.......:::..:::::::::........:::..:::::..:::::..:::::........:::::..:::::..::..:::::::::....::\r\n*/\r\n\r\n\r\n\r\nenum updateValidationError_e {\r\n    UPDATE_VALIDATION_USERNAME_INVALID = \"UPDATE_VALIDATION : USERNAME INVALID/TOO SHORT\",\r\n    UPDATE_VALIDATION_PASSWORD_MISMATCH = \"UPDATE_VALIDATION : NEW PASSWORD & RE-TYPE PASSWORD MISMATCH\",\r\n    UPDATE_VALIDATION_NEW_PASSWORD_TOO_SHORT = \"UPDATE_VALIDATION : NEW PASSWORD TOO SHORT\",\r\n    UPDATE_VALIDATION_ID_REQUIRED = \"UPDATE_VALIDATION : USERID IS REQUIRED\",\r\n    UPDATE_VALIDATION_NOTHING_TO_UPDATE = \"UPDATE_VALIDATION : NOTHING TO UPDATE\",\r\n}\r\ninterface updateFunction_props {\r\n    cmd: \"UPDATE\"\r\n    id: string\r\n    password: string\r\n    re_password: string\r\n    userName: string\r\n    onUpdateSuccess?: (user: UNIVERSALS.GLOBALS.USER_t) => void\r\n    onValidateDataFailed?: (props: API.baseError<any, updateValidationError_e>) => void\r\n    onUpdateFailed?: (props: Pick<API.cloudAPI.user.userUpdateAPI._userUpdate_returnType, \"ERR\"> | { ERR?: API.baseError<any, updateValidationError_e> }) => void\r\n    log?: logger\r\n}\r\ntype updateFunction_t = (props: updateFunction_props) => Promise<API.cloudAPI.user.userUpdateAPI._userUpdate_returnType>\r\nconst updateFunction: updateFunction_t = async ({\r\n    id,\r\n    password,\r\n    re_password,\r\n    userName,\r\n    onUpdateFailed,\r\n    onValidateDataFailed,\r\n    onUpdateSuccess,\r\n    log\r\n}) => {\r\n    if (!id || id.length < 10) {\r\n        log?.print(\"validation => username: \" + userName + \", pass: \" + password)\r\n        const tempError = { errCode: updateValidationError_e.UPDATE_VALIDATION_ID_REQUIRED }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onUpdateFailed ? onUpdateFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    } else if (userName && userName.length < 6) {\r\n        log?.print(\"validation => username: \" + userName + \", pass: \" + password)\r\n        const tempError = { errCode: updateValidationError_e.UPDATE_VALIDATION_USERNAME_INVALID }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onUpdateFailed ? onUpdateFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    } else if (password && password.length < 8) {\r\n        log?.print(\"validation => username: \" + userName + \", pass: \" + password)\r\n        const tempError = { errCode: updateValidationError_e.UPDATE_VALIDATION_NEW_PASSWORD_TOO_SHORT }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onUpdateFailed ? onUpdateFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    else if (re_password != password) {\r\n        log?.print(\"validation => username: \" + userName + \", pass: \" + password)\r\n        const tempError = { errCode: updateValidationError_e.UPDATE_VALIDATION_PASSWORD_MISMATCH }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onUpdateFailed ? onUpdateFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    else if (!password && !userName) {\r\n        log?.print(\"validation => username: \" + userName + \", pass: \" + password)\r\n        const tempError = { errCode: updateValidationError_e.UPDATE_VALIDATION_NOTHING_TO_UPDATE }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onUpdateFailed ? onUpdateFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    const res = await API.cloudAPI.user.userUpdateAPI.v1({\r\n        id,\r\n        userName,\r\n        password,\r\n        log: log ? new logger(\"signup API\", log) : undefined\r\n    })\r\n    log?.print(\"res >>>> \" + JSON.stringify(res, null, 2))\r\n    if (res.RES?.id) {\r\n        log?.print(\"user >>>> \" + JSON.stringify(res.RES, null, 2))\r\n        userStoreUpdateFunction({ user: UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES }) })\r\n        onUpdateSuccess ? onUpdateSuccess(UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES })) : {}\r\n        return res\r\n    }\r\n    else {\r\n        onUpdateFailed ? onUpdateFailed(res) : {}\r\n    }\r\n    return res\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n'##::::'##::'######::'########:'########::::::'#######::'########::'########:'########:::::'###::::'########:'####::'#######::'##::: ##:\r\n ##:::: ##:'##... ##: ##.....:: ##.... ##::::'##.... ##: ##.... ##: ##.....:: ##.... ##:::'## ##:::... ##..::. ##::'##.... ##: ###:: ##:\r\n ##:::: ##: ##:::..:: ##::::::: ##:::: ##:::: ##:::: ##: ##:::: ##: ##::::::: ##:::: ##::'##:. ##::::: ##::::: ##:: ##:::: ##: ####: ##:\r\n ##:::: ##:. ######:: ######::: ########::::: ##:::: ##: ########:: ######::: ########::'##:::. ##:::: ##::::: ##:: ##:::: ##: ## ## ##:\r\n ##:::: ##::..... ##: ##...:::: ##.. ##:::::: ##:::: ##: ##.....::: ##...:::: ##.. ##::: #########:::: ##::::: ##:: ##:::: ##: ##. ####:\r\n ##:::: ##:'##::: ##: ##::::::: ##::. ##::::: ##:::: ##: ##:::::::: ##::::::: ##::. ##:: ##.... ##:::: ##::::: ##:: ##:::: ##: ##:. ###:\r\n. #######::. ######:: ########: ##:::. ##::::. #######:: ##:::::::: ########: ##:::. ##: ##:::: ##:::: ##::::'####:. #######:: ##::. ##:\r\n:.......::::......:::........::..:::::..::::::.......:::..:::::::::........::..:::::..::..:::::..:::::..:::::....:::.......:::..::::..::\r\n*/\r\n\r\ntype containerListOperation_t = (props: logoutFunction_props | loginFunction_props | signupFunction_props | updateFunction_props | fbLogin_props) => Promise<{ RES?: UNIVERSALS.GLOBALS.USER_t, ERR?: API.baseError<any, any> }>\r\nconst userOperation: containerListOperation_t = async (props) => {\r\n    switch (props.cmd) {\r\n        case \"LOGOUT\":\r\n            let logoutRes = logoutFunction(props)\r\n            return logoutRes\r\n            break;\r\n\r\n        case \"LOGIN\":\r\n            let loginRes = await loginFunction(props)\r\n            return loginRes\r\n            break;\r\n\r\n        case \"SIGNUP\":\r\n            let signupRes = await signupFunction(props)\r\n            return signupRes\r\n            break;\r\n\r\n        case \"UPDATE\":\r\n            let updateRes = await updateFunction(props)\r\n            return updateRes\r\n            break\r\n\r\n        case \"FB_LOGIN\":\r\n            let fbLoginRes = await fbLoginFunction(props)\r\n            return fbLoginRes\r\n            break\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return {}\r\n}\r\n\r\nexport default userOperation","import user from \"./user.operator\"\r\nimport device from \"./device.operator\"\r\nimport { userStoreUpdateFunction } from \"./user.operator\"\r\n\r\n\r\nexport const appOperator = { user, device, userStoreUpdateFunction }","import { reduxConstant } from \"../..\";\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _getBaseAction, __baseAction_Props } from \"../../sagas/sagaBaseWorkers\";\r\n\r\ntype HBDeviceList_msgSentType = {\r\n  Mac: string;\r\n  lastMsgSentTs: number;\r\n};\r\n\r\ntype HBDeviceList_msgRecType = {\r\n  Mac: string;\r\n  lastMsgRecTs: number;\r\n};\r\n\r\nexport interface HBSocketList_t {\r\n  Mac: string\r\n  socket?: WebSocket\r\n  lastMsgSentTs?: number;\r\n  lastMsgRecTs?: number;\r\n  //hsv?: { h: number, s: number, v: number }\r\n}\r\n\r\nexport interface HBReducerReducerState_Prop {\r\n  HBSocketList: HBSocketList_t[]\r\n  HBDevieclist_msgSent: HBDeviceList_msgSentType[]\r\n  HBDevieclist_msgRec: HBDeviceList_msgRecType[]\r\n}\r\n\r\nexport const initialState: HBReducerReducerState_Prop = {\r\n  HBSocketList: [],\r\n  HBDevieclist_msgSent: [],\r\n  HBDevieclist_msgRec: [],\r\n};\r\n\r\nexport const HBReducer = (\r\n  state = initialState,\r\n  action: _actionReturnTypes\r\n) => {\r\n  switch (action.type) {\r\n    case _reduxConstant.HB_DEVICELIST_REDUX:\r\n      const data = Object.assign({}, state, {\r\n        HBDevieclist_msgSent: action.props.HBDeviceList.HBDevieclist_msgSent,\r\n        HBDevieclist_msgRec: action.props.HBDeviceList.HBDevieclist_msgRec\r\n      });\r\n      return data;\r\n\r\n    case _reduxConstant.HB_DEVICELIST_MSG_SENT:\r\n      let deviceFound = false\r\n      const newList = state.HBDevieclist_msgSent.map((item, index) => {\r\n        if (item.Mac == action.props.Mac) {\r\n          deviceFound = true\r\n          item.lastMsgSentTs = action.props.lastMsgSentTs\r\n        }\r\n        return item\r\n      })\r\n      if (!deviceFound) {\r\n        newList.push({ Mac: action.props.Mac, lastMsgSentTs: action.props.lastMsgSentTs })\r\n      }\r\n      return Object.assign({}, state, { HBDevieclist_msgSent: newList })\r\n      break;\r\n\r\n    case _reduxConstant.HB_DEVICELIST_MSG_REC:\r\n      let _deviceFound = false\r\n      const _newList = state.HBDevieclist_msgRec.map((item, index) => {\r\n        if (item.Mac == action.props.Mac) {\r\n          _deviceFound = true\r\n          item.lastMsgRecTs = action.props.lastMsgRecTs\r\n        }\r\n        return item\r\n      })\r\n      if (!_deviceFound) {\r\n        _newList.push({ Mac: action.props.Mac, lastMsgRecTs: action.props.lastMsgRecTs })\r\n      }\r\n      return Object.assign({}, state, { HBDeviceList_msgRecType: _newList })\r\n      break;\r\n\r\n    case _reduxConstant.HB_SOCKET_LIST:\r\n      let preState = state.HBSocketList.find(item => item.Mac == action.props.item.Mac)\r\n      let newItem = Object.assign({}, preState ? preState : {}, action.props.item)\r\n      let __newList = state.HBSocketList\r\n      if (preState)\r\n        __newList = state.HBSocketList.map((item, index) => {\r\n          if (item.Mac == action.props.item.Mac) {\r\n            return newItem\r\n          }\r\n          return item\r\n        })\r\n      else {\r\n        __newList.push(newItem)\r\n      }\r\n      console.log(\"SOCKET LIST LENGTH >> \" + __newList.length)\r\n      return Object.assign({}, state, { HBSocketList: __newList })\r\n      break;\r\n\r\n    case reduxConstant.HB_SOCKET_LIST_CLEAR:\r\n      return Object.assign({}, state, { HBSocketList: [] })\r\n      break;\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\n\r\n\r\ninterface HBDeviceListReduxAction_Props {\r\n  HBDeviceList: HBReducerReducerState_Prop;\r\n}\r\nexport const _actions = {\r\n  /** @deprecated */\r\n  HBList: _getBaseAction<HBDeviceListReduxAction_Props>(_reduxConstant.HB_DEVICELIST_REDUX),\r\n  /** @deprecated */\r\n  HBMsgSent: _getBaseAction<HBDeviceList_msgSentType>(_reduxConstant.HB_DEVICELIST_MSG_SENT),\r\n  /** @deprecated */\r\n  HBMsgRec: _getBaseAction<HBDeviceList_msgRecType>(_reduxConstant.HB_DEVICELIST_MSG_REC),\r\n  HBSocket: _getBaseAction<{ item: HBSocketList_t }>(_reduxConstant.HB_SOCKET_LIST),\r\n  HBSocketClear: _getBaseAction<{}>(_reduxConstant.HB_SOCKET_LIST_CLEAR)\r\n}\r\n\r\nexport type _actionReturnTypes =\r\n  | __baseAction_Props<HBDeviceListReduxAction_Props> & {\r\n    type: _reduxConstant.HB_DEVICELIST_REDUX\r\n  }\r\n  | __baseAction_Props<HBDeviceList_msgSentType> & {\r\n    type: _reduxConstant.HB_DEVICELIST_MSG_SENT\r\n  }\r\n  | __baseAction_Props<HBDeviceList_msgRecType> & {\r\n    type: _reduxConstant.HB_DEVICELIST_MSG_REC\r\n  }\r\n  | __baseAction_Props<{ item: HBSocketList_t }> & {\r\n    type: _reduxConstant.HB_SOCKET_LIST\r\n  }\r\n  | __baseAction_Props<{}> & {\r\n    type: _reduxConstant.HB_SOCKET_LIST_CLEAR\r\n  }","import { select } from \"redux-saga/effects\";\r\nimport { reduxStore } from \"../..\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport api from \"../../../services/api\";\r\nimport { deviceSocketHBResponse, getWebSocket } from \"../../../services/backGroundServices/webSocket\";\r\nimport { appOperator } from \"../../../util/app.operator\";\r\nimport { getCurrentTimeStampInSeconds } from \"../../../util/DateTimeUtil\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { _deviceSaga_action } from \"../../deviceListReducer/saga/deviceList\";\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _appState } from \"../../rootReducer\";\r\nimport { _getWorker } from \"../../sagas/sagaBaseWorkers\";\r\nimport { HBSocketList_t, _actions } from \"../reducers/HBReducer\";\r\n\r\n\r\n\r\ninterface bgServiceSagaAction_porps {\r\n    iteration: number\r\n    log?: logger\r\n}\r\nexport const [bgServiceWatcher, bgServiceSagaAction] = _getWorker<bgServiceSagaAction_porps>({\r\n    type: _reduxConstant.BG_SERVICE_SAGA,\r\n    shouldTakeLatest: true,\r\n    callable: function* containersWorker({ iteration, log }) {\r\n        try {\r\n            let _deviceList: UNIVERSALS.GLOBALS.DEVICE_t[] = yield select((state: _appState) => state.deviceReducer.deviceList)\r\n            log?.print(iteration + \" - bgService : : >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> : devicelist length - \" + _deviceList.length)\r\n            performSideEffects({\r\n                user: reduxStore.store.getState().appCTXReducer.user,\r\n                iteration,\r\n                //log: log ? new logger(\"performSideEffect\", log) : undefined\r\n            })\r\n            let socketContainer: HBSocketList_t[] = yield select((state: _appState) => state.HBReducer.HBSocketList)\r\n            if (_deviceList.length) {\r\n                _deviceList.forEach(async device => {\r\n                    handleDeviceInMapLoop({\r\n                        device,\r\n                        iteration,\r\n                        user: reduxStore.store.getState().appCTXReducer.user,\r\n                        //log: log ? new logger(\"handle_device_in_loop\", log) : undefined\r\n                    })\r\n                    const localSocketContainer = socketContainer.find(item => item.Mac == device.Mac)\r\n                    if (localSocketContainer?.socket) {\r\n                        log?.print(\"device : \" + device.Mac + \" has socket\")\r\n                    } else {\r\n                        let socket = null\r\n                        let res = await api.deviceAPI.authAPI.v1({\r\n                            IP: device.IP,\r\n                            log: log ? new logger(\"authAPI\", log) : undefined\r\n                        })\r\n                        log?.print(\"authAPI from device : \" + device.Mac + \" >> \" + JSON.stringify(res))\r\n                        if (res.RES?.Mac == device.Mac) {\r\n                            log?.print(device.ts + \"getting socket for device : \" + device.Mac)\r\n                            try {\r\n                                socket = await getWebSocket({\r\n                                    ipAddr: device.IP,\r\n                                    onOpen: () => {\r\n                                        //log(\"WS Connected for Devie >> \" + device.Mac);\r\n                                    },\r\n                                    onMsg: (msg) => {\r\n                                        try {\r\n                                            const data: deviceSocketHBResponse | null = msg\r\n                                                ? JSON.parse(msg)\r\n                                                : null;\r\n                                            reduxStore.store.dispatch(_actions.HBSocket({ item: { Mac: device.Mac, lastMsgRecTs: getCurrentTimeStampInSeconds() } }))\r\n                                            //log(\"SOCKET MSG >> \" + JSON.stringify(data))\r\n                                        } catch (error) {\r\n                                            console.log(error);\r\n                                        }\r\n                                    },\r\n                                    onErr: (e) => {\r\n                                        log?.print(\"Ws Error - \" + JSON.stringify(e));\r\n                                        reduxStore.store.dispatch(_actions.HBSocket({ item: { Mac: device.Mac, socket: undefined } }))\r\n                                    },\r\n                                    onClose: () => {\r\n                                        reduxStore.store.dispatch(_actions.HBSocket({ item: { Mac: device.Mac, socket: undefined } }))\r\n                                    },\r\n                                })\r\n                                if (socket) {\r\n                                    log?.print(\"updating HBsocket list for device : \" + device.Mac)\r\n                                    reduxStore.store.dispatch(_actions.HBSocket({ item: { Mac: device.Mac, socket, lastMsgRecTs: getCurrentTimeStampInSeconds() } }))\r\n                                } else {\r\n                                    log?.print(\"no socket : \" + device.Mac)\r\n                                }\r\n                            } catch (error) {\r\n                                log?.print(\"get socket error\")\r\n                            }\r\n                        } else {\r\n                            //log?.print(\"no response from Auth api\")\r\n                        }\r\n                    }\r\n\r\n                })\r\n            }\r\n        } catch (error) {\r\n            log?.print(\"try-catch error\")\r\n            log?.print(error)\r\n        }\r\n    }\r\n})\r\n\r\n/**\r\n * @description performs data sideEffects for app and Cloud state sync\r\n * \r\n * @responsiblities\r\n * - [ ] onFirstIteration get cloudState and operate upon data\r\n *      - [ ] remove deleted devices from user DataSetdevicesList\r\n */\r\nconst performSideEffects = async ({ user, iteration, log }: { user?: UNIVERSALS.GLOBALS.USER_t, iteration: number, log?: logger }) => {\r\n    if ((iteration == 0 || iteration % 5 == 0) && user?.id) {\r\n        log?.print(\"fetching user\")\r\n        const userRes = await api.cloudAPI.user.userQuery.v1({\r\n            id: user.id,\r\n            log: log ? new logger(\"userQueryAPI\", log) : undefined\r\n        })\r\n        log?.print(\"userQueryRes \" + JSON.stringify(userRes, null, 2))\r\n        if (userRes.RES?.id) {\r\n            appOperator.userStoreUpdateFunction({ user: UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: userRes.RES }) })\r\n        }\r\n        if (userRes.RES?.devices) {\r\n            appOperator.device({\r\n                cmd: \"ADD_UPDATE_DEVICES\",\r\n                cloudState: true,\r\n                newDevices: userRes.RES.devices ? UNIVERSALS.GLOBALS.convert_Devices_backendToLocal({ devices: userRes.RES.devices }) : [],\r\n                //log: log ? new logger(\"device-operator add_update_devices\", log) : undefined\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst handleDeviceInMapLoop = ({ device, user, iteration, log }: { device: UNIVERSALS.GLOBALS.DEVICE_t, user?: UNIVERSALS.GLOBALS.USER_t, iteration: number, log?: logger }) => {\r\n    if (user?.id) {\r\n        if (!device.id) /** create device or sync ID */ {\r\n            (async () => {\r\n                log?.print(\"getting device ID for device \" + device.Mac + \" - \" + device.deviceName)\r\n                const res = await api.cloudAPI.device.deviceQueryWithMac.v1({ device, log: log ? new logger(\"device_query Api\", log) : undefined })\r\n                if (res.RES?.id && device.Mac == res.RES.Mac) {\r\n                    // - [ ] compare both local and api response data and save the latest one to redux store\r\n                    appOperator.device({\r\n                        cmd: \"ADD_UPDATE_DEVICES\",\r\n                        newDevices: [{ ...UNIVERSALS.GLOBALS.convert_Device_backendToLocal({ device: res.RES }), localTimeStamp: device.localTimeStamp }],\r\n                        log: log ? new logger(\"device-operator add/update devices\", log) : undefined\r\n                    })\r\n                }\r\n                else if (res.ERR?.errCode == api.cloudAPI.device.deviceQueryWithMac.deviceQueryWithMacApiErrors_e.DEVICE_QUERY_NO_DEVICES_FOUND) {\r\n                    //@ts-ignore - [error]=> due to user.id(could be undefined) field. [resolution]=> but we have already check for user.id field at the begning of the method\r\n                    const createDeviceApiRes = await api.cloudAPI.device.createDeviceMutation.v1({ device, userID: user.id, log: log ? new logger(\"device_create_mutation Api\", log) : undefined })\r\n                    if (createDeviceApiRes.RES)\r\n                        appOperator.device({\r\n                            cmd: \"ADD_UPDATE_DEVICES\",\r\n                            newDevices: [{ ...UNIVERSALS.GLOBALS.convert_Device_backendToLocal({ device: createDeviceApiRes.RES }), localTimeStamp: device.localTimeStamp }],\r\n                            log: log ? new logger(\"device-operator add/update devices\", log) : undefined\r\n                        })\r\n                }\r\n            })()\r\n        }\r\n        else if (!device.ts || (device.ts && device.localTimeStamp > device.ts)) /** sync local state with cloud */\r\n            (async () => {\r\n                log?.print(device.deviceName + \" time to sync, localTimeStamp : \" + device.localTimeStamp + \", serverTimestamp : \" + device.ts)\r\n                if (device.id) {\r\n                    let updateApiRes = await api.cloudAPI.device.updateDeviceMutation.v1({ device: { ...device, id: device.id }, log: log ? new logger(\"update device api\", log) : undefined })\r\n                    if (updateApiRes.RES) {\r\n                        log?.print(\"updated device serverts : \" + updateApiRes.RES.ts)\r\n                        appOperator.device({\r\n                            cmd: \"ADD_UPDATE_DEVICES\",\r\n                            newDevices: [{ ...UNIVERSALS.GLOBALS.convert_Device_backendToLocal({ device: updateApiRes.RES }), localTimeStamp: device.localTimeStamp }],\r\n                            log: log ? new logger(\"update device saga\", log) : undefined\r\n                        })\r\n                    }\r\n                }\r\n            })()\r\n    }\r\n}","import { storeData } from \"../../../services/db/storage\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { appCtxDBAction } from \"../saga/appCTXSagas\"\r\nimport { _getBaseAction, __baseAction_Props } from \"../../sagas/sagaBaseWorkers\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\n\r\nexport interface appCTXReducerState_Prop {\r\n  welcomeScreenStatus: boolean\r\n  user?: UNIVERSALS.GLOBALS.USER_t\r\n}\r\n\r\nexport const initialState: appCTXReducerState_Prop = {\r\n  welcomeScreenStatus: false,\r\n  user: undefined\r\n};\r\n\r\nexport const appCTXReducer = (\r\n  state = initialState,\r\n  action: _actionReturnTypes\r\n) => {\r\n  switch (action.type) {\r\n    case _reduxConstant.USER_REDUX:\r\n      action.props.log?.print(\"state before change >> \" + JSON.stringify(state))\r\n      const __state = Object.assign({}, state, { user: action.props.user });\r\n      action.props.log?.print(\"state after change >> \" + JSON.stringify(__state))\r\n      return __state;\r\n\r\n    case _reduxConstant.APPCTX_REDUX:\r\n      action.props.log?.print(\"appCtxRedux state for update>> \" + JSON.stringify(state))\r\n      if (action.props.data)\r\n        return Object.assign({}, state, action.props.data)\r\n      else\r\n        return state\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ninterface userReduxAction_Props {\r\n  user?: UNIVERSALS.GLOBALS.USER_t\r\n  log?: logger\r\n}\r\ninterface appCtxReduxAction_Props {\r\n  data: appCTXReducerState_Prop\r\n  log?: logger\r\n}\r\nexport const _actions = {\r\n  userRedux: _getBaseAction<userReduxAction_Props>(_reduxConstant.USER_REDUX),\r\n  appCTXRedux: _getBaseAction<appCtxReduxAction_Props>(_reduxConstant.APPCTX_REDUX)\r\n}\r\n\r\nexport type _actionReturnTypes =\r\n  | __baseAction_Props<userReduxAction_Props> & {\r\n    type: _reduxConstant.USER_REDUX\r\n  } | __baseAction_Props<appCtxReduxAction_Props> & {\r\n    type: _reduxConstant.APPCTX_REDUX\r\n  }","import { call, put, select } from \"redux-saga/effects\";\r\nimport { _getWorker } from \"../../sagas/sagaBaseWorkers\";\r\nimport { saveAppCTX } from \"../../../services/db/storage\";\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _delay } from \"../../sagas/helper\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { appCTXReducerState_Prop, _actions } from \"../reducers/AppCTXReducer\"\r\nimport { _appState } from \"../../rootReducer\"\r\nimport UNIVERSALS from \"../../../@universals\";\r\n\r\n\r\n/*\r\n:::'###::::'########::'########:::'######::'########:'##::::'##::::'########::'########::::::'######:::::'###:::::'######::::::'###::::\r\n::'## ##::: ##.... ##: ##.... ##:'##... ##:... ##..::. ##::'##::::: ##.... ##: ##.... ##::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n:'##:. ##:: ##:::: ##: ##:::: ##: ##:::..::::: ##:::::. ##'##:::::: ##:::: ##: ##:::: ##:::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n'##:::. ##: ########:: ########:: ##:::::::::: ##::::::. ###::::::: ##:::: ##: ########:::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n #########: ##.....::: ##.....::: ##:::::::::: ##:::::: ## ##:::::: ##:::: ##: ##.... ##:::::..... ##: #########: ##::: ##:: #########:\r\n ##.... ##: ##:::::::: ##:::::::: ##::: ##:::: ##::::: ##:. ##::::: ##:::: ##: ##:::: ##::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n ##:::: ##: ##:::::::: ##::::::::. ######::::: ##:::: ##:::. ##:::: ########:: ########:::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n..:::::..::..:::::::::..::::::::::......::::::..:::::..:::::..:::::........:::........:::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\n\r\ninterface appCtxSaga_props {\r\n  data: appCTXReducerState_Prop\r\n  saveToDB?: boolean\r\n  log?: logger\r\n}\r\n\r\nexport const [appCtxDBWatcher, appCtxDBAction] = _getWorker<appCtxSaga_props>({\r\n  type: _reduxConstant.APPCTX_DB_SAGA,\r\n  shouldTakeLatest: true,\r\n  callable: function* appCtxDbWorker({ log, data }) {\r\n    log?.print(\"appctxDB waiting to save: \" + JSON.stringify(data))\r\n    yield call(_delay, 1000);\r\n    log?.print(\"appctxDB now saving: \" + JSON.stringify(data))\r\n    yield call(saveAppCTX, data);\r\n  }\r\n})\r\n\r\n\r\n/*\r\n:::'###::::'########::'########:::'######::'########:'##::::'##:::::'######:::::'###:::::'######::::::'###::::\r\n::'## ##::: ##.... ##: ##.... ##:'##... ##:... ##..::. ##::'##:::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n:'##:. ##:: ##:::: ##: ##:::: ##: ##:::..::::: ##:::::. ##'##:::::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n'##:::. ##: ########:: ########:: ##:::::::::: ##::::::. ###:::::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n #########: ##.....::: ##.....::: ##:::::::::: ##:::::: ## ##:::::::..... ##: #########: ##::: ##:: #########:\r\n ##.... ##: ##:::::::: ##:::::::: ##::: ##:::: ##::::: ##:. ##:::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n ##:::: ##: ##:::::::: ##::::::::. ######::::: ##:::: ##:::. ##::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n..:::::..::..:::::::::..::::::::::......::::::..:::::..:::::..::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\n\r\nexport const [appCtxSagaWatcher, appCtxSagaAction] = _getWorker<appCtxSaga_props>({\r\n  type: _reduxConstant.APPCTX_SAGA,\r\n  shouldTakeLatest: true,\r\n  callable: function* appCtxSagaWorker(props) {\r\n    props.log?.print(\"appctx Saga : \" + JSON.stringify(props.data))\r\n    yield put(_actions.appCTXRedux(props))\r\n    if (props.saveToDB)\r\n      yield put(appCtxDBAction({ data: props.data/* , log: props.log */ }))\r\n  }\r\n})\r\n\r\n\r\n/*\r\n'##::::'##::'######::'########:'########::::::'######:::::'###:::::'######::::::'###::::\r\n ##:::: ##:'##... ##: ##.....:: ##.... ##::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n ##:::: ##: ##:::..:: ##::::::: ##:::: ##:::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n ##:::: ##:. ######:: ######::: ########:::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n ##:::: ##::..... ##: ##...:::: ##.. ##:::::::..... ##: #########: ##::: ##:: #########:\r\n ##:::: ##:'##::: ##: ##::::::: ##::. ##:::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n. #######::. ######:: ########: ##:::. ##::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n:.......::::......:::........::..:::::..::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\ninterface userSaga_props {\r\n  user: UNIVERSALS.GLOBALS.USER_t | undefined\r\n  /** `default - false` weather to save to DB or not */\r\n  saveToDB?: boolean\r\n  log?: logger\r\n}\r\nexport const [userSagaWatcher, userSagaAction] = _getWorker<userSaga_props>({\r\n  type: _reduxConstant.USER_SAGA,\r\n  shouldTakeLatest: true,\r\n  callable: function* appCtxSagaWorker(props) {\r\n    console.log(\"user Saga : \" + JSON.stringify(props.user))\r\n    let appCtx: appCTXReducerState_Prop = yield select((state: _appState) => state.appCTXReducer)\r\n    let newappCtx: appCTXReducerState_Prop = Object.assign({}, appCtx, { user: { ...props.user, devices: [] } })\r\n    yield put(_actions.appCTXRedux({ data: newappCtx }))\r\n    if (props.saveToDB)\r\n      yield put(appCtxDBAction({ data: newappCtx, log: props.log }))\r\n  }\r\n})","import { all } from \"redux-saga/effects\";\r\nimport { bgServiceWatcher } from \"./bgServiceSaga\";\r\nimport { appCtxDBWatcher, appCtxSagaWatcher, userSagaWatcher } from \"./appCTXSagas\"\r\n\r\nexport default function* _saga() {\r\n    yield all([\r\n        appCtxSagaWatcher(),\r\n        appCtxDBWatcher(),\r\n        userSagaWatcher(),\r\n        bgServiceWatcher()\r\n    ]);\r\n}\r\n","import _saga from \"./saga\"\r\nimport { _actions as appCTX_actions } from \"./reducers/AppCTXReducer\";\r\nimport { _actions as HBReducer_actions } from \"./reducers/HBReducer\";\r\nimport { bgServiceSagaAction } from \"./saga/bgServiceSaga\"\r\nimport { appCtxDBAction, appCtxSagaAction, userSagaAction } from \"./saga/appCTXSagas\"\r\n\r\nexport { _saga }\r\n\r\nexport const _actions = { appCTX: { ...appCTX_actions, appCtxDBAction, appCtxSagaAction, userSagaAction }, HBReducer: HBReducer_actions, bgServiceSagaAction }","import { all } from \"redux-saga/effects\";\r\nimport { _saga as deviceReducerSaga } from \"../deviceListReducer\";\r\nimport { _saga as bgServiceSaga } from \"../helperSideEffect\";\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    deviceReducerSaga(),\r\n    bgServiceSaga()\r\n  ]);\r\n}\r\n","const { combineReducers } = require(\"redux\");\r\nimport { initialState as deviceListInitailState, _reducer as deviceReducer } from \"./deviceListReducer\";\r\nimport { _reducer_i as deviceReducer_i } from \"./deviceListReducer/reducer/index\";\r\nimport { appCTXReducer, appCTXReducerState_Prop, initialState as appCtxInitailState, } from \"./helperSideEffect/reducers/AppCTXReducer\";\r\nimport { HBReducer, HBReducerReducerState_Prop, initialState as HBInitailState, } from \"./helperSideEffect/reducers/HBReducer\";\r\n\r\n\r\nexport interface _appState {\r\n  deviceReducer: deviceReducer_i;\r\n  appCTXReducer: appCTXReducerState_Prop;\r\n  HBReducer: HBReducerReducerState_Prop;\r\n};\r\nconst initialState: _appState = {\r\n  deviceReducer: deviceListInitailState,\r\n  appCTXReducer: appCtxInitailState,\r\n  HBReducer: HBInitailState\r\n}\r\n\r\nfunction rootReducer(state = initialState, action: any) {\r\n  return {\r\n    deviceReducer: deviceReducer(state.deviceReducer, action),\r\n    appCTXReducer: appCTXReducer(state.appCTXReducer, action),\r\n    HBReducer: HBReducer(state.HBReducer, action),\r\n  };\r\n}\r\n\r\nexport default rootReducer\r\n\r\n\r\n","import { _configureReduxStore } from \"./ReduxStore\"\r\nimport { _actions as deviceListAction } from \"./deviceListReducer\"\r\nimport { _actions as helperSideEffectActions } from \"./helperSideEffect\"\r\n\r\nexport { _reduxConstant as reduxConstant } from \"./ReduxConstant\"\r\n\r\n\r\n\r\nconst reduxStore = { actions: { ...deviceListAction, ...helperSideEffectActions }, store: _configureReduxStore() }\r\nexport { reduxStore }\r\nexport { _appState as appState } from \"./rootReducer\"","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas\";\r\nimport rootReducer, { _appState } from \"./rootReducer\";\r\n\r\nexport const _configureReduxStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n};\r\n","import React from 'react'\r\nimport { StyleProp, View, ViewStyle } from 'react-native'\r\nimport Animated from 'react-native-reanimated';\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n\r\n\r\ninterface Props {\r\n    style?: StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default ({ style, children }: Props) => {\r\n    return (\r\n        <SafeAreaView style={[{ width: \"100%\" }, style]}>\r\n            <Animated.ScrollView showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false}>\r\n                {children}\r\n            </Animated.ScrollView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const colors = {\r\n    primary: \"#333\",\r\n    secondary: \"#555\",\r\n    tertiary: \"#777\",\r\n    warning: \"#cd6155\",\r\n    feather: \"#aaa\"\r\n}\r\n\r\nexport default StyleSheet.create({\r\n    primaryTextColors: {\r\n        color: colors.primary\r\n    },\r\n    secondaryTextColor: {\r\n        color: colors.secondary\r\n    },\r\n    tertiaryTextColor: {\r\n        color: colors.tertiary\r\n    },\r\n    warningText: {\r\n        color: colors.warning\r\n    },\r\n    textFeather: {\r\n        color: colors.feather\r\n    }\r\n})","import { StyleSheet } from \"react-native\";\r\nimport color from \"./colors\"\r\n\r\n\r\nconst common = StyleSheet.create({\r\n    _headingCommonStyles: {\r\n        ...color.primaryTextColors,\r\n        marginHorizontal: 5,\r\n        fontWeight: \"bold\",\r\n    }\r\n})\r\nexport default StyleSheet.create({\r\n    _headingCommonStyles: {\r\n        marginHorizontal: 5\r\n    },\r\n    H1: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 30,\r\n    },\r\n    H2: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 27,\r\n    },\r\n    H3: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 24,\r\n    },\r\n    H4: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 21,\r\n    },\r\n    H5: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 18,\r\n    },\r\n    H6: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 15,\r\n    },\r\n    H7: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 12,\r\n    }\r\n})","import { StyleSheet } from \"react-native\";\r\n\r\nexport default StyleSheet.create({\r\n    round50: {\r\n        height: 50,\r\n        width: 50,\r\n        borderRadius: 35,\r\n    },\r\n    shadow: {\r\n        backgroundColor: \"#fff\",\r\n        alignItems: 'center',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n    absoluteFill: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0\r\n    }\r\n})","import { StyleSheet } from \"react-native\";\r\n\r\nexport default StyleSheet.create({\r\n\r\n})","import Text from \"./Text\"\r\nimport commonStyles from \"./commonStyles\"\r\nimport color, { colors } from \"./colors\"\r\nimport spacing from \"./spacing\"\r\n\r\nexport default { ...Text, ...commonStyles, ...color, ...spacing, colors }","import React from 'react'\r\nimport { View, Text, StyleProp, ViewStyle, TextStyle, TouchableOpacity, StyleSheet } from 'react-native'\r\nimport { RectButton } from 'react-native-gesture-handler'\r\nimport styles from '../styles'\r\nimport STYLES from \"../styles\"\r\n\r\ninterface Props {\r\n    buttonStyle?: StyleProp<ViewStyle>\r\n    textStyle?: StyleProp<TextStyle>\r\n    text?: string\r\n    shadow?: boolean\r\n    onPress?: () => void\r\n    children?: React.ReactNode\r\n    useReanimated?: boolean\r\n}\r\n\r\n/** \r\n * //TODO add support for dynamic JSX.elsment as children\r\n */\r\nexport const NewRectButton = ({ buttonStyle, textStyle, text, onPress = () => { }, useReanimated = true }: Props) => {\r\n    return (\r\n        <View style={[STYLES.shadow, _styles.buttonContainer, buttonStyle]}>\r\n            {useReanimated ? <RectButton style={[_styles.innerbutton]}\r\n                onPress={onPress}>\r\n                <Text style={[{ textAlign: \"center\", fontSize: 18 }, textStyle]}>{text ? text : \"BUTTON\"}</Text>\r\n            </RectButton>\r\n                : <TouchableOpacity style={[_styles.innerbutton]}\r\n                    onPress={onPress}>\r\n                    <Text style={[{ textAlign: \"center\", fontSize: 18 }, textStyle]}>{text ? text : \"BUTTON\"}</Text>\r\n                </TouchableOpacity>}\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\ninterface NewRectButtonWithChildrenProps {\r\n    style?: StyleProp<ViewStyle>\r\n    innerCompStyle?: StyleProp<ViewStyle>\r\n    shadow?: boolean\r\n    onPress?: () => void\r\n    useReanimated?: boolean\r\n    children?: React.ReactNode\r\n}/**\r\n * @param style `StyleProp<ViewStyle>` button ContainerView Style \r\n * @param innerCompStyle `StyleProp<ViewStyle>` RectButton Style \r\n * @param shadow `default false` \r\n * @param onPress \r\n * @param children `React.Node` children component\r\n * @returns  \r\n */\r\nexport const NewRectButtonWithChildren = ({ style, innerCompStyle, onPress = () => { }, useReanimated = true, children, shadow }: NewRectButtonWithChildrenProps) => {\r\n    return (\r\n        <View style={[_styles.buttonContainer, shadow ? STYLES.shadow : {}, style,]}>\r\n            {useReanimated ?\r\n                <RectButton style={\r\n                    [_styles.innerbutton, innerCompStyle]}\r\n                    onPress={onPress}>\r\n                    {children}\r\n                </RectButton>\r\n                : <TouchableOpacity style={\r\n                    [_styles.innerbutton, innerCompStyle]}\r\n                    onPress={onPress}>\r\n                    {children}\r\n                </TouchableOpacity>}\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst _styles = StyleSheet.create({\r\n    buttonContainer: {\r\n        backgroundColor: \"#fff\",\r\n        overflow: \"hidden\",\r\n        borderRadius: 10,\r\n        marginVertical: 5,\r\n        width: \"100%\",\r\n        height: 50,\r\n    },\r\n    innerbutton: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n})\r\n\r\n\r\n//export default NewRectButton\r\n","import { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React from \"react\";\r\nimport { Image, Text, View } from \"react-native\";\r\nimport { MainRouterStackParamList } from \"../../../routers/MainRouter\";\r\nimport Container from \"../../common/containers/SafeAreaWithAnimatedVerticalScrollView\";\r\nimport { Ionicons, FontAwesome, MaterialIcons } from '@expo/vector-icons';\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport { NewRectButtonWithChildren } from \"../../common/buttons/RectButtonCustom\";\r\nimport { reduxStore } from \"../../../redux\";\r\nimport { appOperator } from \"../../../util/app.operator\";\r\nimport { logger } from \"../../../util/logger\";\r\n\r\ntype navigationProp = StackNavigationProp<\r\n    MainRouterStackParamList,\r\n    \"config\"\r\n>\r\ntype routeProp = RouteProp<MainRouterStackParamList, \"config\">;\r\n\r\ninterface props {\r\n    navigation: navigationProp\r\n    route: routeProp;\r\n\r\n}\r\nconst AppConfigScreen = ({ navigation }: props) => {\r\n    const log = new logger(\"APP SETTING\")\r\n\r\n\r\n    return (\r\n        <Container style={{ backgroundColor: \"#fff\", paddingHorizontal: 15 }}>\r\n            <View>\r\n                <RectButton onPress={() => {\r\n                    if (navigation.canGoBack())\r\n                        navigation.pop()\r\n                }}>\r\n                    <Ionicons style={{ paddingRight: 15, paddingBottom: 10, paddingTop: 15, marginTop: 10 }} name=\"ios-arrow-back\" size={30} color=\"#222\" />\r\n                </RectButton>\r\n            </View>\r\n            <View style={{}}>\r\n                <Text style={{ color: \"#222\", fontSize: 35, fontWeight: \"bold\" }}>Settings</Text>\r\n            </View>\r\n            {/* Sec: user profile settings */}\r\n            <View style={{}}>\r\n                <MenuHeading heading=\"User Profile\" Icon={() => <FontAwesome style={{ paddingRight: 10 }} name=\"user-o\" size={25} color=\"#555\" />} />\r\n                <MenuItem heading=\"User Profile\" />\r\n                <MenuItem heading=\"Change Password\" />\r\n                <MenuItem heading=\"Logout\" onPress={() => {\r\n                    appOperator.user({\r\n                        cmd: \"LOGOUT\", onLogout: () => {\r\n                            log?.print(\"logging out now\")\r\n                            navigation.replace(\"user\")\r\n                        }\r\n                    })\r\n                }} />\r\n                <MenuHeading heading=\"Notification\" Icon={() => <MaterialIcons style={{ paddingRight: 10 }} name=\"notifications-none\" size={25} color=\"#555\" />} />\r\n                <MenuItem heading=\"App Notifications\" Icon={() => <FontAwesome name=\"toggle-off\" size={25} color=\"#555\" />} />\r\n                <MenuItem heading=\"Device Notifications\" Icon={() => <FontAwesome name=\"toggle-off\" size={25} color=\"#555\" />} />\r\n                <MenuHeading heading=\"More\" Icon={() => <MaterialIcons style={{ paddingRight: 10 }} name=\"unfold-more\" size={25} color=\"#555\" />} />\r\n                <MenuItem heading=\"Support\" />\r\n                <MenuItem heading=\"Contact Us\" />\r\n            </View>\r\n            <View style={{ alignItems: \"center\", paddingVertical: 20 }}>\r\n                <Image style={{ height: 150, width: 150, opacity: 0.3 }} source={require(\"../../../../assets/icons/splash-icon.png\")} />\r\n            </View>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AppConfigScreen\r\n\r\ninterface MenuHeadingProps {\r\n    Icon: any\r\n    heading: string\r\n}\r\nconst MenuHeading = ({ Icon, heading }: MenuHeadingProps) => {\r\n    return (\r\n        <View style={{ flexDirection: \"row\", alignItems: \"flex-end\", marginTop: 30, borderBottomColor: \"#555\", borderBottomWidth: 0.5, paddingBottom: 10 }}>\r\n            <Icon />\r\n            <Text style={{ fontSize: 20, fontWeight: \"bold\", color: \"#555\" }}>{heading}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\ninterface MenuItemProps {\r\n    Icon?: any\r\n    heading: string\r\n    onPress?: () => void\r\n}\r\nconst MenuItem = ({\r\n    Icon = () => <Ionicons name=\"ios-arrow-forward\" size={25} color=\"#777\" />,\r\n    heading,\r\n    onPress = () => { }\r\n}: MenuItemProps) => {\r\n    return (\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", height: 50 }}>\r\n            <Text style={{ fontSize: 15, color: \"#777\", fontWeight: \"bold\" }}>{heading}</Text>\r\n            <NewRectButtonWithChildren onPress={onPress} style={{ shadowOpacity: 0, elevation: 0 }}>\r\n                <Icon />\r\n            </NewRectButtonWithChildren>\r\n        </View>\r\n    )\r\n}","import { LinearGradient } from \"expo-linear-gradient\";\r\nimport React, { Component, useState } from \"react\";\r\nimport { Dimensions, Text, View } from \"react-native\";\r\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\r\nimport Animated, { add, block, call, concat, cond, divide, eq, event, multiply, set, useCode } from \"react-native-reanimated\";\r\nimport { clamp, ReText, round, useValue } from \"react-native-redash\";\r\nimport { appOperator } from \"../../util/app.operator\";\r\nimport { getTimeDiffNowInMs } from \"../../util/DateTimeUtil\";\r\nimport { logger } from \"../../util/logger\";\r\n\r\nconst sliderHeight = 35;\r\nconst sliderHeightExtension = 4;\r\n\r\nexport type onBrValueChange_Props = (value: number, state: State) => void;\r\n\r\ninterface Props {\r\n  initBrValue?: number;\r\n  deviceMac: string[];\r\n  color?: string;\r\n  bgColor?: [string, string];\r\n  groupUUID?: string;\r\n  log?: logger\r\n}\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nexport default ({\r\n  initBrValue = 0,\r\n  bgColor = [\"#ffffff00\", \"#ffffff77\"],\r\n  deviceMac,\r\n  color = \"#ffffff\",\r\n  log,\r\n  ...props\r\n}: Props) => {\r\n  //console.log(\"initBr : \" + initBrValue);\r\n  const pinState = useValue(State.UNDETERMINED);\r\n  const [sliderWidth, setSliderWidth] = useState(0);\r\n  const offset = useValue((initBrValue / 100) * (width * 0.9));\r\n  const offsetX = clamp(offset, 0, sliderWidth - sliderHeight);\r\n  //@ts-ignore\r\n  const BR = round(multiply(divide(offsetX, (sliderWidth - sliderHeight)), 100))\r\n  let timeStamp = Date.now();\r\n\r\n  const updateColor = (v: number, gestureState: State, log?: logger) => {\r\n    if (v < 5)\r\n      v = 0\r\n    appOperator.device({\r\n      cmd: \"COLOR_UPDATE\",\r\n      deviceMac,\r\n      hsv: { v },\r\n      gestureState,\r\n      log\r\n    })\r\n  }\r\n\r\n  useCode(\r\n    () => [\r\n      call([BR, pinState], ([BR, pinState]) => {\r\n        if (getTimeDiffNowInMs(timeStamp) > 200 && pinState == State.ACTIVE) {\r\n          console.log(\"<<<< Sending Bightness-*- >>>>\")\r\n          timeStamp = Date.now();\r\n          updateColor(BR, pinState, log)\r\n        }\r\n        else {\r\n          //console.log(\"<<<< cannot send Bightness- >>>>\")\r\n        }\r\n        /* if (pinState == State.ACTIVE) {\r\n          if (getTimeDiffNowInMs(timeStamp) > 200) {\r\n            timeStamp = getCurrentTimeStamp();\r\n            updateColor(Math.min(100, Math.round(BR)), pinState, log)\r\n          }\r\n        } else if (pinState == State.END) {\r\n          console.log(\"<<<< --Sending Bightness- >>>>\")\r\n          setTimeout(() => {\r\n            timeStamp = getCurrentTimeStamp();\r\n            updateColor(Math.min(100, Math.round(BR)), pinState, log)\r\n          }, 200);\r\n        } */\r\n      }),\r\n    ],\r\n    [BR, pinState]\r\n  );\r\n\r\n  return (\r\n    <View style={{ overflow: \"visible\" }}>\r\n      <View style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignSelf: \"flex-end\",\r\n        marginBottom: 6,\r\n      }}>\r\n        <ReText\r\n          style={{\r\n            color: \"#fff\",\r\n            fontSize: 25,\r\n            fontWeight: \"bold\",\r\n            textAlign: \"right\"\r\n          }}\r\n          text={concat(BR)} />\r\n        <Text\r\n          style={{\r\n            color: \"#fff\",\r\n            fontSize: 25,\r\n            fontWeight: \"bold\",\r\n          }}>%</Text>\r\n      </View>\r\n      <LinearGradient\r\n        onLayout={(event) => {\r\n          var { width } = event.nativeEvent.layout;\r\n          setSliderWidth(width);\r\n        }}\r\n        style={{\r\n          justifyContent: \"center\",\r\n          opacity: 1,\r\n          height: sliderHeight,\r\n          width: \"100%\",\r\n          borderRadius: 15,\r\n        }}\r\n        start={{ x: 0, y: 0 }}\r\n        end={{ x: 1, y: 0 }}\r\n        colors={[bgColor[0], bgColor[1]]}\r\n      >\r\n        <BrightnessSlider\r\n          pinState={pinState}\r\n          offset={offset}\r\n          offsetX={offsetX}\r\n          sliderWidth={sliderWidth}\r\n        >\r\n        </BrightnessSlider>\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nclass BrightnessSlider extends Component<{\r\n  pinState: Animated.Value<number>\r\n  offset: Animated.Value<number>\r\n  sliderWidth: number\r\n  offsetX: Animated.Node<number>\r\n}, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {};\r\n  }\r\n\r\n  gestureHandler = event(\r\n    [\r\n      {\r\n        nativeEvent: ({ x: translationX, state: temp1state }: any) =>\r\n          block([\r\n            set(this.props.pinState, temp1state),\r\n            cond(eq(temp1state, State.ACTIVE), set(this.props.offset, add(this.props.offset, translationX))),\r\n          ]),\r\n      }],\r\n    { useNativeDriver: true }\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <View style={{}}>\r\n        <PanGestureHandler\r\n          onGestureEvent={this.gestureHandler}\r\n          onHandlerStateChange={this.gestureHandler}\r\n        >\r\n          <Animated.View\r\n            style={[\r\n              {\r\n                position: \"absolute\",\r\n                height: sliderHeight + sliderHeightExtension,\r\n                width: sliderHeight + sliderHeightExtension,\r\n                borderRadius: 25,\r\n                backgroundColor: \"#ddd\",\r\n                top: -(sliderHeight + sliderHeightExtension) / 2,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              },\r\n              {\r\n                transform: [{ translateX: this.props.offsetX }],\r\n              },\r\n            ]}\r\n          >\r\n            <View\r\n              style={{\r\n                height: \"80%\",\r\n                width: \"80%\",\r\n                borderRadius: 50,\r\n                backgroundColor: \"red\",\r\n                borderWidth: 10,\r\n                borderColor: \"#fff\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            ></View>\r\n          </Animated.View>\r\n        </PanGestureHandler>\r\n      </View>\r\n    )\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport { Image, StyleSheet, Text, View } from \"react-native\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RectButton, ScrollView, State } from \"react-native-gesture-handler\";\r\nimport Animated, { add, max, min } from \"react-native-reanimated\";\r\nimport { hsv2color, useValue } from \"react-native-redash\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { devicePageStackParamList } from \"../..\";\r\nimport { logger } from \"../../../../../util/logger\";\r\nimport { NewRectButtonWithChildren } from \"../../../../common/buttons/RectButtonCustom\";\r\nimport STYLES from \"../../../../common/styles\";\r\nimport { DevicePageHeader } from \"../../DevicePageHeader\";\r\nimport { ColorPickerSection } from \"./colorPickerSection\";\r\nimport { appOperator } from \"../../../../../util/app.operator\";\r\n\r\nexport enum viewTypeEnum {\r\n  DEVICE_COLOR_PICKER_SCREEN = 0,\r\n  DEVICE_MODES_SCREEN = 1,\r\n  DEVICE_SETTING_SCREEN = 2,\r\n}\r\n\r\nexport type navigation_t = StackNavigationProp<\r\n  devicePageStackParamList,\r\n  \"DeviceColorPicker\"\r\n>;\r\ntype routeProp_t = RouteProp<\r\n  devicePageStackParamList,\r\n  \"DeviceColorPicker\"\r\n>;\r\n\r\ninterface Props {\r\n  navigation: navigation_t;\r\n  route: routeProp_t;\r\n}\r\n\r\nexport const DeviceColorPickerScreen = ({\r\n  navigation,\r\n  route: {\r\n    params: { device },\r\n  },\r\n}: Props) => {\r\n  const [view, setView] = useState<viewTypeEnum>(\r\n    viewTypeEnum.DEVICE_COLOR_PICKER_SCREEN\r\n  );\r\n  const hue = useValue(0);\r\n  const saturation = useValue(0);\r\n  const value = useValue(1);\r\n  const backgroundColor = hsv2color(hue, saturation, value);\r\n  const headBackgroundColor = hsv2color(\r\n    add(hue, 40),\r\n    max(0.5, min(0.8, saturation)),\r\n    value\r\n  );\r\n  const log = new logger(\"DEVICE COLOR PICKER\")\r\n\r\n  const colorSnippets = [\r\n    { h: 0, s: 100, v: 100, hex: \"#ff0000\" },\r\n    { h: 60, s: 100, v: 100, hex: \"#ffff00\" },\r\n    { h: 119, s: 100, v: 100, hex: \"#00ff00\" },\r\n    { h: 180, s: 100, v: 100, hex: \"#00ffff\" },\r\n    { h: 240, s: 100, v: 100, hex: \"#0000ff\" },\r\n    { h: 299, s: 100, v: 100, hex: \"#ff00ff\" },\r\n  ]\r\n  interface updateColorProps {\r\n    h: number,\r\n    s: number\r\n  }\r\n  const updateColor = ({ h, s }: updateColorProps) => {\r\n    appOperator.device({\r\n      cmd: \"COLOR_UPDATE\",\r\n      deviceMac: [device.Mac],\r\n      hsv: { h, s },\r\n      gestureState: State.END,\r\n      log\r\n    })\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={[styles.container]}>\r\n      {view == viewTypeEnum.DEVICE_COLOR_PICKER_SCREEN && (\r\n        <View style={[styles.section2, { flex: 1 }]}>\r\n          <View /* Sec1: devicePage header */\r\n            style={styles.header_container}>\r\n            <Animated.View\r\n              style={[styles.header_AnimatedView, { backgroundColor: headBackgroundColor }]}\r\n            >\r\n              <DevicePageHeader\r\n                navigation={navigation}\r\n                device={device}\r\n                log={log}\r\n              />\r\n            </Animated.View>\r\n          </View>\r\n          <ScrollView style={{/* Sec1: color picker container scrollview */\r\n            //backgroundColor: \"green\",\r\n            height: \"100%\"\r\n          }}\r\n            showsVerticalScrollIndicator={false}\r\n          >\r\n            <View style={{ minHeight: \"10%\" }}>{/* Sec2: Navigator */}\r\n              <RectButton /* Sec3: modes button */\r\n                activeOpacity={0}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"4%\",\r\n                  right: \"6%\",\r\n                }}\r\n                onPress={() => {\r\n                  navigation.replace(\"DeviceModesScreen\", { device })\r\n                }}\r\n              >\r\n                <Image source={require(\"../../../../../../assets/icons/preset.png\")}\r\n                  style={{\r\n                    height: 50,\r\n                    width: 50\r\n                  }} />\r\n              </RectButton>\r\n              <RectButton /* Sec3: setting button */\r\n                activeOpacity={0}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"4%\",\r\n                  left: \"6%\",\r\n                }}\r\n                onPress={() => {\r\n                  navigation.replace(\"DeviceSettingScreen\", { device })\r\n                }}\r\n              >\r\n                <Image source={require(\"../../../../../../assets/icons/setting.png\")}\r\n                  style={{\r\n                    height: 50,\r\n                    width: 50\r\n                  }} />\r\n              </RectButton>\r\n              {/* Sec: colorPicker */}\r\n\r\n            </View>\r\n            <View style={{/*  Sec2: Color Picker */\r\n              flex: 1,\r\n              // backgroundColor: \"red\",\r\n            }}>\r\n              <ColorPickerSection\r\n                hue={hue}\r\n                saturation={saturation}\r\n                value={value}\r\n                backgroundColor={backgroundColor}\r\n                device={device}\r\n                navigation={navigation}\r\n                log={log}\r\n              />\r\n            </View>\r\n            <View style={{/* Sec2: divider => colorPicker - colorSnippets */\r\n            }}>\r\n              <Text style={[STYLES.H1, { textAlign: \"center\", marginTop: \"3%\" }]}>More Colors</Text>\r\n              <Text style={[STYLES.H7, STYLES.textFeather, { textAlign: \"center\", marginTop: 5, marginBottom: \"5%\", paddingHorizontal: \"8%\" }]}>\r\n                Color is the power which directly influences human soul. colors are the smile of nature\r\n                with <Text style={[STYLES.H7, { color: \"#555\" }]}>{\" \"}HUElite{\" \"}</Text> Express your self in colors, as colors is the most beautiful language\r\n                </Text>\r\n            </View>\r\n            <View style={{ /* Sec2: Color snippets container  */\r\n              flex: 1,\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              flexWrap: \"wrap\",\r\n              //backgroundColor: \"blue\",\r\n              marginBottom: \"50%\"\r\n            }}>\r\n              {colorSnippets.map((color, index) => {\r\n                return (\r\n                  <NewRectButtonWithChildren\r\n                    key={index}\r\n                    style={{\r\n                      backgroundColor: color.hex,\r\n                      margin: 10,\r\n                      borderRadius: 30,\r\n                      height: 60,\r\n                      width: 60\r\n                    }}\r\n                    onPress={() => {\r\n                      console.log(\"Color is :: \" + color.hex)\r\n                      updateColor({ h: color.h, s: color.s })\r\n                    }}>\r\n\r\n                  </NewRectButtonWithChildren>\r\n                )\r\n              })}\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      )\r\n      }\r\n    </SafeAreaView >\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  header_container: {\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    minHeight: 230,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  header_AnimatedView: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 25,\r\n  },\r\n  section2: {\r\n    width: \"100%\",\r\n    alignSelf: \"center\",\r\n    //backgroundColor: \"#55f\",\r\n    borderTopLeftRadius: 25,\r\n    borderTopRightRadius: 25,\r\n  },\r\n  navigatorMenu: {\r\n    backgroundColor: \"#33f\",\r\n    height: 60,\r\n    width: 230,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 15,\r\n    overflow: \"hidden\",\r\n    alignSelf: \"center\",\r\n    //position: \"absolute\",\r\n    //bottom: 10,\r\n    //display: \"flex\",\r\n    display: \"none\",\r\n    flexDirection: \"row\",\r\n    /* shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 1, */\r\n  },\r\n});\r\n","import { useActionSheet } from \"@expo/react-native-action-sheet\"\r\nimport { Entypo } from '@expo/vector-icons'\r\nimport { LinearGradient } from \"expo-linear-gradient\"\r\nimport React from \"react\"\r\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from \"react-native\"\r\nimport { navigationProp } from \"..\"\r\nimport UNIVERSALS from \"../../../../@universals\"\r\nimport { convertHSVToRgb, _convertRGBToHex } from \"../../../../util/Color\"\r\nimport { logger } from \"../../../../util/logger\"\r\nimport BrightnessSlider from \"../../../common/BrightnessSlider\"\r\nimport BrightnessSliderNew from \"../../../common/BrightnessSlider_optmizedForWeb\"\r\n/* import ColorBlending from \"gl-react-color-blending\" */\r\n\r\n\r\nexport const deviceCardHeight = 150;\r\n\r\ninterface props {\r\n  navigation: navigationProp,\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t\r\n  log?: logger\r\n  setToBeDeletedDevice?: React.Dispatch<React.SetStateAction<string>>\r\n}\r\nexport const DeviceCard = ({\r\n  navigation,\r\n  device,\r\n  log,\r\n  setToBeDeletedDevice\r\n}: props) => {\r\n  log = log ? new logger(\"DEVICE CARD\", log) : undefined\r\n  const { showActionSheetWithOptions } = useActionSheet();\r\n  let rgb2, rgb1, hex1, hex2\r\n  if (device.hsv) {\r\n    rgb1 = convertHSVToRgb(device.hsv.h, device.hsv.s, 100);\r\n    rgb2 = convertHSVToRgb(\r\n      device.hsv.h + 40,\r\n      device.hsv.s > 50 ? device.hsv.s : 50,\r\n      100\r\n    );\r\n  } else {\r\n    rgb1 = convertHSVToRgb(100, 80, 100)\r\n    rgb2 = convertHSVToRgb(130, 80, 100)\r\n  }\r\n  hex1 = _convertRGBToHex(rgb1[0], rgb1[1], rgb1[2]);\r\n  hex2 = _convertRGBToHex(rgb2[0], rgb2[1], rgb2[2]);\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={[styles.container, { height: deviceCardHeight }]}\r\n      activeOpacity={0.9}\r\n      onPress={() => {\r\n        if (device.Hostname.includes(UNIVERSALS.venderConf.venderPrefix + \"_OW\") || device.Hostname.includes(UNIVERSALS.venderConf.venderPrefix + \"_CW\") || device.Hostname.includes(UNIVERSALS.venderConf.venderPrefix + \"_WW\")) {\r\n        } else {\r\n          navigation.navigate(\"devicePage\", {\r\n            device\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      <LinearGradient\r\n        colors={[hex1, hex2]}\r\n        start={{ x: 0, y: 0 }}\r\n        end={{ x: 1, y: 0 }}\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Image\r\n          style={{\r\n            opacity: 0.3,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            flex: 1,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n          source={require(\"../../../../../assets/images/background.jpg\")}\r\n        />\r\n        {/* /// deviceCard Top section <deviceIcon | deviceName | menuIcon > */}\r\n        <View\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {/* /// menuDots */}\r\n          < TouchableOpacity\r\n            style={{\r\n              zIndex: 10,\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 0,\r\n              paddingRight: 12,\r\n              paddingTop: 8,\r\n              paddingBottom: 5,\r\n              paddingLeft: 10\r\n            }}\r\n            onPress={() => {\r\n              console.log(\"show action sheet\")\r\n              const options = [\"Delete device\", \"Share device\", \"cancel\"]\r\n              const destructiveButtonIndex = 2\r\n              const cancelButtonIndex = 2\r\n              showActionSheetWithOptions(\r\n                {\r\n                  options,\r\n                  cancelButtonIndex,\r\n                  destructiveButtonIndex,\r\n                  showSeparators: true\r\n                },\r\n                async (index) => {\r\n                  switch (index) {\r\n                    case 0:\r\n                      if (setToBeDeletedDevice)\r\n                        setToBeDeletedDevice(device.Mac)\r\n                      break;\r\n\r\n                    default:\r\n                      break;\r\n                  }\r\n                })\r\n            }}\r\n          >\r\n            <Entypo name=\"dots-three-vertical\" size={20} color=\"white\" />\r\n          </ TouchableOpacity >\r\n\r\n          <View\r\n            style={{\r\n              margin: 10,\r\n              height: 60,\r\n              width: 60,\r\n              backgroundColor: \"#fff\",\r\n              borderRadius: 30,\r\n            }}\r\n          ></View>\r\n          <Text style={[styles.deviceName, { color: \"#fff\" }]}>\r\n            {device.deviceName ? device.deviceName : \"unknown_device\"}\r\n          </Text>\r\n        </View>\r\n        {/* ///brightness container <percentageText &  brightnessBar> */}\r\n        <View style={styles.brightnessSliderContainer}>\r\n          {/*  <ReText style={styles.brightnessNumber} text={concat( BR )}/> */}\r\n          <BrightnessSliderNew\r\n            initBrValue={device.hsv ? device.hsv.v : 50}\r\n            deviceMac={[device.Mac]}\r\n            log={log}\r\n          />\r\n        </View>\r\n      </LinearGradient>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderColor: \"white\",\r\n    marginVertical: 5,\r\n    backgroundColor: \"#aaa\",\r\n    width: \"100%\",\r\n    alignSelf: \"center\",\r\n    borderRadius: 20,\r\n    overflow: \"hidden\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 1.41,\r\n    elevation: 2,\r\n  },\r\n  brightnessSliderContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    paddingHorizontal: \"5%\",\r\n    position: \"relative\",\r\n    top: -20,\r\n    //backgroundColor: \"green\",\r\n  },\r\n  deviceName: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginLeft: 15,\r\n  },\r\n});","import React from 'react'\r\nimport { View, Text, Image } from 'react-native'\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport Animated from 'react-native-reanimated';\r\nimport { MaterialIcons, SimpleLineIcons, MaterialCommunityIcons, FontAwesome } from '@expo/vector-icons';\r\nimport { RectButton } from 'react-native-gesture-handler';\r\nimport { navigationProp } from \"./index\"\r\n//@ts-ignore\r\nimport { activateKeepAwake, deactivateKeepAwake } from 'expo-keep-awake';\r\nimport { NewRectButton, NewRectButtonWithChildren } from \"../../common/buttons/RectButtonCustom\"\r\nimport UNIVERSALS from '../../../@universals';\r\n\r\ninterface Props {\r\n    navigation: navigationProp\r\n    user?: UNIVERSALS.GLOBALS.USER_t\r\n}\r\n\r\nexport default ({ navigation, user }: Props) => {\r\n    return (\r\n        <View style={{ paddingHorizontal: 10 }}>\r\n            <View style={{ backgroundColor: \"#fff\", marginTop: 25, marginBottom: 15 }}>\r\n                <View style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", backgroundColor: \"#fff\", paddingRight: 10, marginBottom: 15 }}>\r\n                    <RectButton onPress={() => {\r\n                        navigation.navigate(\"config\")\r\n                    }}>\r\n                        <AntDesign style={{ paddingRight: 10 }} name=\"menu-fold\" size={24} color=\"black\" />\r\n                    </RectButton>\r\n                    <View style={{ flexDirection: \"row\" }}>\r\n                        <RectButton onPress={() => {\r\n                            navigation.navigate(\"pairing\")\r\n                        }}>\r\n                            <MaterialIcons style={{ marginHorizontal: 10 }} name=\"add-circle-outline\" size={26} color=\"black\" />\r\n                        </RectButton>\r\n                        <RectButton onPress={() => {\r\n                            //navigation.navigate(\"user\")\r\n                            navigation.navigate(\"user\")\r\n                        }}>\r\n                            <FontAwesome style={{ marginHorizontal: 10 }} name=\"user-o\" size={24} color=\"black\" />\r\n                        </RectButton>\r\n                    </View>\r\n                </View>\r\n                <View style={{}}>\r\n                    <Text style={{ fontSize: 25, fontWeight: \"bold\", }}>{\"Hi, \" + (user?.userName ? user?.userName : \"\")}</Text>\r\n                </View>\r\n            </View>\r\n            <Animated.ScrollView horizontal style={{ flexDirection: \"row\", backgroundColor: \"#fff\", width: \"100%\", paddingBottom: 10 }}>\r\n                <View style={{ borderWidth: 0.2, borderRadius: 5, marginRight: 15 }}><Text style={{ paddingHorizontal: 5, paddingVertical: 3 }}>Alexa Support</Text></View>\r\n                <View style={{ borderWidth: 0.2, borderRadius: 5, marginRight: 15 }}><Text style={{ paddingHorizontal: 5, paddingVertical: 3 }}>Connect with Google Assistant</Text></View>\r\n            </Animated.ScrollView>\r\n            <Animated.ScrollView showsHorizontalScrollIndicator={false} horizontal style={{ backgroundColor: \"#fff\", width: \"100%\", display: \"flex\", flexDirection: \"row\", marginBottom: 15, }}>\r\n                <QuickActionBlock Heading=\"Snooze all events\" subHeading=\"ALL OFF\" primaryColor=\"#5DADE2\" Child={() => { return (<MaterialIcons name=\"snooze\" size={30} color=\"#5DADE2\" />) }} />\r\n                <QuickActionBlock Heading=\"Power saving mode\" subHeading=\"TURN ON\" primaryColor=\"#48C9B0\" Child={() => { return (<SimpleLineIcons name=\"energy\" size={30} color=\"#48C9B0\" />) }} />\r\n                <QuickActionBlock Heading=\"Shut Down Home\" subHeading=\"SAY, GOODBYE\" primaryColor=\"#EC7063\" Child={() => { return (<MaterialCommunityIcons name=\"power-plug-off\" size={30} color=\"#EC7063\" />) }} />\r\n                <QuickActionBlock Heading=\"Tablet Mode\" subHeading=\"STAY AWAKE\" primaryColor=\"#f39c12\" Child={() => { return (<MaterialCommunityIcons name=\"tablet-dashboard\" size={30} color=\"#f39c12\" />) }}\r\n                    onPress={() => {\r\n                        console.log(\"ONPRESS\")\r\n                        activateKeepAwake()\r\n                    }} />\r\n                <View style={{ width: 10 }} />\r\n            </Animated.ScrollView>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\ninterface QAB_props {\r\n    Heading: string,\r\n    subHeading?: string,\r\n    primaryColor?: string\r\n    Child: any\r\n    onPress?: () => void\r\n}\r\nconst QuickActionBlock = ({ Heading, subHeading, primaryColor = \"#48C9B0\", Child, onPress = () => { } }: QAB_props) => {\r\n\r\n    return (\r\n\r\n        <NewRectButtonWithChildren\r\n            onPress={onPress}\r\n            style={{\r\n                width: 140,\r\n                height: 160,\r\n                borderRadius: 10,\r\n                overflow: \"hidden\",\r\n                borderColor: primaryColor,\r\n                borderWidth: 0.2,\r\n                backgroundColor: \"green\",\r\n                marginRight: 10\r\n            }}>\r\n            <View style={{ backgroundColor: primaryColor, padding: 10, flex: 1, height: 120 }}>\r\n                <View style={{ backgroundColor: \"#fff\", height: 50, width: 50, borderRadius: 30, justifyContent: \"center\", alignItems: \"center\" }} >\r\n                    <Child />\r\n                </View>\r\n                <Text style={{ fontSize: 18, fontWeight: \"bold\", color: \"#fff\", marginTop: 10 }} >{Heading}</Text>\r\n                <Text style={{ fontSize: 12, fontWeight: \"bold\", color: \"#fff\", marginTop: 10, marginBottom: 10 }} >{subHeading}</Text>\r\n            </View>\r\n        </NewRectButtonWithChildren>\r\n    )\r\n}","import { FontAwesome5, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { Modal, StyleSheet, Text, View, Image } from \"react-native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport Animated from \"react-native-reanimated\";\r\nimport { red, useValue } from \"react-native-redash\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useSelector } from \"react-redux\";\r\n//native imports\r\nimport { _appState } from \"../../../redux/rootReducer\";\r\nimport { MainRouterStackParamList } from \"../../../routers/MainRouter\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { DeviceCard } from \"./deviceCard\";\r\nimport Header from './Header';\r\nimport STYLES from \"../../common/styles\"\r\nimport { NewRectButton } from \"../../common/buttons/RectButtonCustom\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { appOperator } from \"../../../util/app.operator\";\r\n\r\nconst navigationIconSize = 25;\r\n\r\nexport type navigationProp = StackNavigationProp<\r\n  MainRouterStackParamList,\r\n  \"dashboard\"\r\n>;\r\n\r\ntype routeProp = RouteProp<MainRouterStackParamList, \"dashboard\">;\r\n\r\ninterface Props {\r\n  navigation: navigationProp;\r\n  route: routeProp;\r\n}\r\n\r\nexport const Dashboard = ({ navigation, route: { params } }: Props) => {\r\n  let log = new logger(\"DASHBOARD\")\r\n  const deviceList = useSelector(({ deviceReducer: { deviceList } }: _appState) => deviceList);\r\n  const user = useSelector(({ appCTXReducer: { user } }: _appState) => user);\r\n  //const user = useSelector(({ appCTXReducer: { user } }: _appState) => user);\r\n  const scrollViewRef = useRef(null)\r\n  const [state_deleteDeviceModal, set_state_deleteDeviceModal] = useState(\"\")\r\n  //const state = useValue(State.UNDETERMINED)\r\n  //const onScroll = onScrollEvent({ y })\r\n  //const scroll = useRef(null);\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Header navigation={navigation} user={user} />\r\n      {/* /Sec1: deviceListContainer */}\r\n      <Animated.ScrollView\r\n        ref={scrollViewRef}\r\n        showsVerticalScrollIndicator={false}\r\n        style={styles.deviceListContainer}\r\n      >\r\n        <View>\r\n          {/* <View style={{ height: HEADER_MAX_HEIGHT + 60 }}></View> */}\r\n          {deviceList.map((device, index) => {\r\n            return (\r\n              <View key={index}>\r\n                <DeviceCard\r\n                  device={device}\r\n                  navigation={navigation}\r\n                  setToBeDeletedDevice={set_state_deleteDeviceModal}\r\n                  log={log}\r\n                />\r\n              </View>\r\n\r\n            )\r\n          })}\r\n\r\n        </View>\r\n      </Animated.ScrollView>\r\n      {/*  <FlatList\r\n        //ref={scroll}\r\n        //onScroll={onScroll}\r\n        showsVerticalScrollIndicator={false}\r\n        data={containerList}\r\n        keyExtractor={(item, index) =>\r\n          \"0\" + index\r\n        }\r\n        extraData={containerList}\r\n        renderItem={({ item, index }) => {\r\n          return (\r\n            <View />\r\n          );\r\n        }}\r\n      /> */}\r\n      {false && <Modal /*///Modal */\r\n        animationType=\"slide\"\r\n        transparent\r\n        visible={state_deleteDeviceModal.length > 0}\r\n      >\r\n        <View /* Sec1: Modal outer container */\r\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n          <View /* Sec2: Modal inner container */\r\n            style={[STYLES.shadow, {\r\n              width: \"85%\",\r\n              borderRadius: 20,\r\n            }]}>\r\n            <Text style={[STYLES.H6, STYLES.warningText, { marginVertical: 8 }]}>IMPORTANT NOTE</Text>\r\n            <View style={{ paddingHorizontal: 20, width: \"100%\" }}>{/* Sec3: hint text container */}\r\n              <Text style={[STYLES.H7, {\r\n                marginVertical: 8,\r\n                textAlign: \"center\",\r\n              }]}>This will delete this device from this phone, to pair it with new phone, you have to reset the device manually. follow the following step to reset</Text>\r\n              <Text style={[STYLES.H7, {}]}>1. Turn off the device </Text>\r\n              <Text style={[STYLES.H7, {}]}>2. Now switch your HUElite device ON/OFF with a gap of 2 seconds between each toggle</Text>\r\n              <Text style={[STYLES.H7, {}]}>3. Repeat the above step 5 times</Text>\r\n              <Text style={[STYLES.H7, {}]}>4. Leave the device ON at last and wait for few seconds</Text>\r\n              <Text style={[{ textAlign: \"center\", fontSize: 12, marginVertical: 15, paddingHorizontal: 20 }]}>your device should start blinking after 5 seconds and than restart after few more seconds. once completed you can initiate the pairing process</Text>\r\n            </View>\r\n            <View style={{/* Sec3: Buttons */\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              marginTop: 25,\r\n            }}>\r\n              <NewRectButton /* Sec3: delete button */\r\n                useReanimated={false}\r\n                buttonStyle={{\r\n                  flex: 1,\r\n                  marginHorizontal: 8\r\n                }}\r\n                text=\"delete\"\r\n                onPress={() => {\r\n                  console.log(\"REMOVE DEVICE\")\r\n                  appOperator.device({\r\n                    cmd: \"REMOVE_DEVICE\",\r\n                    Mac: state_deleteDeviceModal\r\n                  })\r\n                  set_state_deleteDeviceModal(\"\")\r\n                }} />\r\n              <NewRectButton /* Sec3: cancel button */\r\n                useReanimated={false}\r\n                buttonStyle={{\r\n                  flex: 1,\r\n                  marginHorizontal: 8\r\n                }}\r\n                text=\"cancel\"\r\n                onPress={() => {\r\n                  console.log(\"DEVICE REMOVE cancel : \")\r\n                  set_state_deleteDeviceModal(\"\")\r\n                }} />\r\n            </View>\r\n            <View /* Sec3: modal footer */\r\n              style={[STYLES.shadow, {\r\n                width: \"97%\",\r\n                height: 80,\r\n                borderRadius: 15,\r\n                backgroundColor: \"red\",\r\n                marginHorizontal: \"3%\",\r\n                marginTop: 15,\r\n                marginBottom: 8,\r\n\r\n              }]}\r\n            >\r\n              <LinearGradient\r\n                style={[{\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  borderRadius: 14,\r\n                  overflow: \"hidden\",\r\n                  backgroundColor: \"transparent\",\r\n                }]}\r\n                start={{ x: 0.3, y: 0 }}\r\n                end={{ x: 1, y: 2 }}\r\n                colors={[\"#00aaff\", \"#aa00aa\"]} >\r\n                <View style={[STYLES.absoluteFill, {\r\n                  backgroundColor: \"white\",\r\n                  opacity: 0.4\r\n                }]} >\r\n                  <Image source={require(\"../../../../assets/icons/icon-no-bg.png\")} style={[STYLES.absoluteFill, { width: 200, height: \"100%\" }]} />\r\n                  <Image source={require(\"../../../../assets/icons/icon-no-bg.png\")} style={[STYLES.absoluteFill, { width: 50, height: \"100%\", left: \"80%\" }]} />\r\n                </View>\r\n              </LinearGradient>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>}\r\n      {/* Sec:  */}\r\n      {false && <View style={styles.navigatorMenu}>\r\n        <RectButton\r\n          onPress={() => {\r\n            //navigation.navigate(\"pairing\");\r\n            /* dispatch(\r\n              newDeviceSagaAction({\r\n                newDevice: Object.assign({}, dummyDevice, {\r\n                  deviceName: \"Kitchen TubeLight\",\r\n                  SSID: \"Homelink1\",\r\n                  wifiPass: \"Ioplmkjnb@1\",\r\n                  Mac: \"ED:98:H3:49:f5\",\r\n                  groupName: \"group\",\r\n                }),\r\n                groupType: GROUP_TYPES.SINGLETON,\r\n              })\r\n            ); */\r\n          }}\r\n          style={{\r\n            borderRightWidth: 0.5,\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              //backgroundColor: \"green\",\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              height: 35,\r\n            }}\r\n          >\r\n            <FontAwesome5\r\n              name=\"layer-group\"\r\n              size={navigationIconSize}\r\n              color=\"white\"\r\n            />\r\n          </View>\r\n          <View style={{ paddingVertical: 2 }}>\r\n            <Text style={{ color: \"white\", fontSize: 12 }}>New Group</Text>\r\n          </View>\r\n        </RectButton>\r\n        <RectButton\r\n          onPress={() => {\r\n            navigation.navigate(\"pairing\");\r\n          }}\r\n          style={{\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            paddingLeft: 10,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              //backgroundColor: \"green\",\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              height: 35,\r\n            }}\r\n          >\r\n            <MaterialIcons\r\n              name=\"add-circle-outline\"\r\n              size={navigationIconSize}\r\n              color=\"white\"\r\n            />\r\n          </View>\r\n          <View style={{ paddingVertical: 2 }}>\r\n            <Text style={{ color: \"white\", fontSize: 12 }}>Add Device</Text>\r\n          </View>\r\n        </RectButton>\r\n      </View>}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    //backgroundColor: \"#002\",\r\n    flex: 1,\r\n  },\r\n  ScreenName: {\r\n    fontSize: 20,\r\n    marginHorizontal: 100,\r\n    transform: [{ translateX: 2 }],\r\n  },\r\n  deviceListContainer: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    //backgroundColor: \"#0aa\",\r\n    paddingHorizontal: \"2%\"\r\n  },\r\n  navigatorMenu: {\r\n    backgroundColor: \"#33f\",\r\n    paddingHorizontal: 10,\r\n    borderRadius: 15,\r\n    overflow: \"hidden\",\r\n    alignSelf: \"center\",\r\n    position: \"absolute\",\r\n    bottom: 10,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    /* shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 1, */\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n//TODO setup dashboard with new DB-set\r\n//TODO allOff button in dashboard\r\n//TODO dashboard navigation block\r\n//TODO device off on icon tap in deviceCard\r\n//TODO deviceCard Icon selector","import { LinearGradient } from \"expo-linear-gradient\";\r\nimport React, { useState } from \"react\";\r\nimport { Dimensions, Text, View } from \"react-native\";\r\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\r\nimport Animated, { add, block, call, concat, cond, divide, eq, event, multiply, set, useCode } from \"react-native-reanimated\";\r\nimport { clamp, ReText, round, useValue } from \"react-native-redash\";\r\nimport { appOperator } from \"../../util/app.operator\";\r\nimport { getTimeDiffNowInMs } from \"../../util/DateTimeUtil\";\r\nimport { logger } from \"../../util/logger\";\r\n\r\nconst sliderHeight = 35;\r\nconst sliderHeightExtension = 4;\r\n\r\nexport type onBrValueChange_Props = (value: number, state: State) => void;\r\n\r\ninterface Props {\r\n  initBrValue?: number;\r\n  deviceMac: string[];\r\n  color?: string;\r\n  bgColor?: [string, string];\r\n  groupUUID?: string;\r\n  log?: logger\r\n}\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nexport default ({\r\n  initBrValue = 0,\r\n  bgColor = [\"#ffffff00\", \"#ffffff77\"],\r\n  deviceMac,\r\n  color = \"#ffffff\",\r\n  log,\r\n  ...props\r\n}: Props) => {\r\n  //console.log(\"initBr : \" + initBrValue);\r\n  const pinState = useValue(State.UNDETERMINED);\r\n  const [sliderWidth, setSliderWidth] = useState(0);\r\n  const offset = useValue((initBrValue / 100) * (width * 0.9));\r\n  const offsetX = clamp(offset, 0, sliderWidth - sliderHeight);\r\n  //@ts-ignore\r\n  const BR = round(multiply(divide(offsetX, (sliderWidth - sliderHeight)), 100))\r\n  let timeStamp = Date.now();\r\n\r\n  const gestureHandler = event(\r\n    [\r\n      {\r\n        //@ts-ignore\r\n        nativeEvent: ({ translationX, state: temp1state }) =>\r\n          block([\r\n            set(pinState, temp1state),\r\n            cond(eq(temp1state, State.ACTIVE), set(offset, add(offset, translationX))),\r\n          ]),\r\n      },\r\n    ],\r\n    { useNativeDriver: true }\r\n  );\r\n\r\n  const updateColor = (v: number, gestureState: State, log?: logger) => {\r\n    if (v < 5)\r\n      v = 0\r\n    appOperator.device({\r\n      cmd: \"COLOR_UPDATE\",\r\n      deviceMac,\r\n      hsv: { v },\r\n      gestureState,\r\n      log\r\n    })\r\n  }\r\n\r\n  useCode(\r\n    () => [\r\n      call([BR, pinState], ([BR, pinState]) => {\r\n        if (getTimeDiffNowInMs(timeStamp) > 200 && pinState == State.ACTIVE) {\r\n          console.log(\"<<<< Sending Bightness- >>>>\")\r\n          timeStamp = Date.now();\r\n          updateColor(BR, pinState, log)\r\n        }\r\n        else {\r\n          //console.log(\"<<<< cannot send Bightness- >>>>\")\r\n        }\r\n        /* if (pinState == State.ACTIVE) {\r\n          if (getTimeDiffNowInMs(timeStamp) > 200) {\r\n            timeStamp = getCurrentTimeStamp();\r\n            updateColor(Math.min(100, Math.round(BR)), pinState, log)\r\n          }\r\n        } else if (pinState == State.END) {\r\n          console.log(\"<<<< --Sending Bightness- >>>>\")\r\n          setTimeout(() => {\r\n            timeStamp = getCurrentTimeStamp();\r\n            updateColor(Math.min(100, Math.round(BR)), pinState, log)\r\n          }, 200);\r\n        } */\r\n      }),\r\n    ],\r\n    [BR, pinState]\r\n  );\r\n\r\n  return (\r\n    <View style={{ overflow: \"visible\" }}>\r\n      <View style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignSelf: \"flex-end\",\r\n        marginBottom: 6,\r\n      }}>\r\n        <ReText\r\n          style={{\r\n            color: \"#fff\",\r\n            fontSize: 25,\r\n            fontWeight: \"bold\",\r\n          }}\r\n          text={concat(BR)} />\r\n        <Text\r\n          style={{\r\n            color: \"#fff\",\r\n            fontSize: 25,\r\n            fontWeight: \"bold\",\r\n          }}>%</Text>\r\n      </View>\r\n      <LinearGradient\r\n        onLayout={(event) => {\r\n          var { width } = event.nativeEvent.layout;\r\n          setSliderWidth(width);\r\n        }}\r\n        style={{\r\n          justifyContent: \"center\",\r\n          opacity: 1,\r\n          height: sliderHeight,\r\n          width: \"100%\",\r\n          borderRadius: 15,\r\n        }}\r\n        start={{ x: 0, y: 0 }}\r\n        end={{ x: 1, y: 0 }}\r\n        colors={[bgColor[0], bgColor[1]]}\r\n      >\r\n        <PanGestureHandler\r\n          onGestureEvent={gestureHandler}\r\n          onHandlerStateChange={gestureHandler}\r\n        >\r\n          <Animated.View\r\n            style={[\r\n              {\r\n                position: \"absolute\",\r\n                height: sliderHeight + sliderHeightExtension,\r\n                width: sliderHeight + sliderHeightExtension,\r\n                borderRadius: 25,\r\n                backgroundColor: \"#ddd\",\r\n                top: -sliderHeightExtension / 2,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              },\r\n              {\r\n                transform: [{ translateX: offsetX }],\r\n              },\r\n            ]}\r\n          >\r\n            <View\r\n              style={{\r\n                height: \"80%\",\r\n                width: \"80%\",\r\n                borderRadius: 50,\r\n                backgroundColor: color,\r\n                borderWidth: 10,\r\n                borderColor: \"#fff\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            ></View>\r\n          </Animated.View>\r\n        </PanGestureHandler>\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Image, StyleSheet, Text, View } from \"react-native\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport BrightnessSlider from \"../../common/BrightnessSlider\";\r\nimport { navigation_t } from \"./devicePageNavigator/colorPickerScreen\";\r\n\r\ninterface Props {\r\n  navigation: navigation_t;\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t;\r\n  log?: logger\r\n}\r\n\r\nexport const DevicePageHeader = ({ navigation, device, log }: Props) => {\r\n  const [brVal, setBrVal] = useState(device.hsv.v);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        style={{\r\n          height: \"100%\",\r\n          width: 150,\r\n          position: \"absolute\",\r\n          top: 0,\r\n          right: 50,\r\n          opacity: 0.3,\r\n        }}\r\n        source={require(\"../../../../assets/images/1.png\")}\r\n      />\r\n      <View style={styles.nameContainer}>\r\n        <View\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              width: 70,\r\n              height: 70,\r\n              backgroundColor: \"#fff\",\r\n              borderRadius: 50,\r\n            }}\r\n          ></View>\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              //backgroundColor: \"green\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Text style={styles.deviceName}>\r\n              {device.deviceName ? device.deviceName : \"unnamed\"}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.brightnessSliderContainer}>\r\n        <BrightnessSlider\r\n          color={\"#eee\"}\r\n          initBrValue={device.hsv ? device.hsv.v : 65}\r\n          deviceMac={[device.Mac]}\r\n          log={log}\r\n        />\r\n        {/*   </View> */}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n  },\r\n  nameContainer: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    //backgroundColor: \"#ff0\",\r\n    justifyContent: \"center\",\r\n  },\r\n  brightnessSliderContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    paddingHorizontal: \"5%\",\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  brightnessNumber: {\r\n    color: \"#fff\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"flex-end\",\r\n    marginBottom: 6,\r\n  },\r\n  deviceName: {\r\n    color: \"#fff\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    marginLeft: 20,\r\n    marginBottom: 15,\r\n  },\r\n  backButton: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\r\nimport Animated, { add, block, call, cond, divide, eq, event, modulo, pow, set, useCode } from \"react-native-reanimated\";\r\nimport { canvas2Polar, clamp, polar2Canvas, translate, useValue, vec } from \"react-native-redash\";\r\nimport UNIVERSALS from \"../../@universals\";\r\nimport { appOperator } from \"../../util/app.operator\";\r\n//import { Path } from \"react-native-svg\";\r\nimport { getTimeDiffNowInMs } from \"../../util/DateTimeUtil\";\r\nimport { logger } from \"../../util/logger\";\r\n\r\n//const AnimatedPath = Animated.createAnimatedComponent(Path);\r\nconst quadraticIn = (t: any) => pow(t, 2);\r\nconst PICKER_WIDTH = 30;\r\nconst PICKER_HEIGHT = 60;\r\nconst STROKE_WIDTH = 4;\r\n\r\ninterface Props {\r\n  canvasWidth: number\r\n  h: Animated.Value<number>\r\n  s: Animated.Value<number>\r\n  backgroundColor: Animated.Node<number>\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t\r\n  log?: logger\r\n}\r\n\r\nconst ColorPickerPin = ({\r\n  canvasWidth,\r\n  h,\r\n  s,\r\n  backgroundColor,\r\n  device,\r\n  log\r\n}: Props) => {\r\n  const state = useValue(State.UNDETERMINED);\r\n  let timeStamp = Date.now();\r\n  const CENTER = { x: canvasWidth / 2, y: canvasWidth / 2, };\r\n  const v = polar2Canvas({ theta: (device.hsv?.h ? device.hsv?.h : 0) * (Math.PI / 180), radius: (canvasWidth / 2) * Math.sqrt((device.hsv?.s ? device.hsv?.s : 100) / 100), }, CENTER);\r\n  const offset = { x: useValue(0), y: useValue(0) };\r\n  const v2 = vec.add(offset, v);\r\n  const { theta, radius } = canvas2Polar(v2, CENTER);\r\n  const l = { theta: theta, radius: clamp(radius, 0, canvasWidth / 2) };\r\n  const hue = divide(modulo(l.theta, 2 * Math.PI), 2 * Math.PI);\r\n  const saturation = cond(eq(l.radius, 0), 0, divide(l.radius, canvasWidth / 2));\r\n\r\n  const gestureHandler = event(\r\n    [\r\n      {\r\n        //@ts-ignore\r\n        nativeEvent: ({ x: transX, y: transY, state: _state }) =>\r\n          block([\r\n            set(state, _state),\r\n            cond(\r\n              eq(state, State.ACTIVE),\r\n              block([\r\n                set(offset.x, add(offset.x, transX)),\r\n                set(offset.y, add(offset.y, transY)),\r\n              ])\r\n            ),\r\n          ]),\r\n      },\r\n    ],\r\n    { useNativeDriver: true }\r\n  );\r\n\r\n  const updateColor = (h: number, s: number, gestureState: State, log?: logger) => {\r\n\r\n\r\n    appOperator.device({\r\n      cmd: \"COLOR_UPDATE\",\r\n      deviceMac: [device.Mac],\r\n      hsv: { h: Math.min(Math.round(h * 360), 360), s: Math.min(Math.round(s * 100), 100) },\r\n      gestureState,\r\n      log\r\n    })\r\n  }\r\n\r\n  useCode(\r\n    () => [\r\n      set(h, hue),\r\n      set(s, quadraticIn(saturation)),\r\n      call(\r\n        [h, s, state],\r\n        ([h, s, state]) => {\r\n          /* if (getTimeDiffNowInMs(timeStamp) > 200) {\r\n            console.log(\"<<<< Sending Color- >>>>\")\r\n            timeStamp = getCurrentTimeStamp();\r\n            updateColor(h, s, State.ACTIVE, log)\r\n          }\r\n          else {\r\n            //console.log(\"<<<< cannot send Bightness- >>>>\")\r\n          } */\r\n          if (state == State.ACTIVE) {\r\n            if (getTimeDiffNowInMs(timeStamp) > 200) {\r\n              console.log(\"Sending hex >>>>>>>>>>>>>>>>\")\r\n              //console.log(\"can send\")\r\n              timeStamp = Date.now();\r\n              updateColor(h, s, state, log)\r\n            } else {\r\n              //console.log(\"cannot send\")\r\n            }\r\n          } else if (state == State.END) {\r\n            console.log(\"Sending hex >>>>>>>>>>>>>>>>\")\r\n            setTimeout(() => {\r\n              timeStamp = Date.now();\r\n              updateColor(h, s, state, log)\r\n            }, 200);\r\n          }\r\n        }\r\n      ),\r\n    ],\r\n    [h, hue, s, state, saturation, timeStamp]\r\n  );\r\n\r\n  return (\r\n    <View style={StyleSheet.absoluteFill}>\r\n      <PanGestureHandler\r\n        onGestureEvent={gestureHandler}\r\n        onHandlerStateChange={gestureHandler}>\r\n        <Animated.View\r\n          style={{\r\n            width: 50,\r\n            height: 50,\r\n            backgroundColor: \"#00000000\" /* backgroundColor */,\r\n            shadowColor: \"#000\",\r\n            shadowOffset: {\r\n              width: 0,\r\n              height: 12,\r\n            },\r\n            shadowOpacity: 0.58,\r\n            shadowRadius: 25.0,\r\n            elevation: 4,\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            transform: [\r\n              ...translate(\r\n                polar2Canvas(l, CENTER)\r\n              ) /* ...translate(\r\n                polar2Canvas(\r\n                  {\r\n                    theta: 240 * (Math.PI / 180),\r\n                    radius: (canvasWidth / 2) * Math.pow(0.667, 2),\r\n                  },\r\n                  CENTER\r\n                )\r\n              ), */,\r\n              ...translate({\r\n                x: -25,\r\n                y: -25,\r\n              }),\r\n            ],\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              borderWidth: 2,\r\n              borderColor: \"#aaa\",\r\n              height: 30,\r\n              width: 30,\r\n              borderRadius: 15,\r\n            }}\r\n          />\r\n          {/*  <Svg\r\n                        width={100}\r\n                        height={200}\r\n                        style={{ top: -PICKER_HEIGHT / 2 }}\r\n                        viewBox={`-${STROKE_WIDTH / 2} -${STROKE_WIDTH / 2} ${44 +\r\n                            STROKE_WIDTH} ${60 + STROKE_WIDTH}`}>\r\n                        <AnimatedPath\r\n                            d=\"m13.937573,20.35588l-0.188524,-6.981805c0.063533,0.10728 1.438438,-4.5174 3.688282,-0.392685c2.249844,4.124715 3.624749,3.124784 2.124853,3.999723c-1.499896,0.874939 -5.624611,3.374767 -5.624611,3.374767z\"\r\n                            fill={backgroundColor}\r\n                            stroke=\"#fff\"\r\n                            strokeWidth={STROKE_WIDTH}\r\n                            fillRule=\"evenodd\"\r\n                        />\r\n                    </Svg> */}\r\n        </Animated.View>\r\n      </PanGestureHandler>\r\n    </View>\r\n  );\r\n};\r\nexport default ColorPickerPin;\r\n","import React, { useState, memo } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  Text,\r\n  Platform,\r\n} from \"react-native\";\r\n\r\n//import { Surface } from \"gl-react-expo\";\r\n//import { GLSL, Node, Shaders } from \"gl-react\";\r\nimport Animated from \"react-native-reanimated\";\r\nimport ColorPickerPin from \"./ColorPickerPin\";\r\n//import Svg, { Circle } from \"react-native-svg\";\r\nimport { deviceType } from \"../../util/dummyData/DummyData.jsx\";\r\nimport { logger } from \"../../util/logger\";\r\nimport UNIVERSALS from \"../../@universals\";\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    //backgroundColor: \"red\",\r\n  },\r\n  surface: {},\r\n  hue: {\r\n    alignSelf: \"center\",\r\n    //backgroundColor: \"red\",\r\n  },\r\n});\r\n\r\n/* const shaders = Shaders.create({\r\n  hue: {\r\n    frag: GLSL`\r\n  #define PI  3.141592653589793\r\n  #define TAU 6.283185307179586\r\n  precision highp float;\r\n  varying vec2 uv;\r\n  uniform float size;\r\n  // https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\r\n  vec3 rgb2hsv(vec3 c)\r\n  {\r\n      vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\r\n      vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\r\n      vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\r\n      float d = q.x - min(q.w, q.y);\r\n      float e = 1.0e-10;\r\n      return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\r\n  }\r\n  // All components are in the range [0…1], including hue.\r\n  vec3 hsv2rgb(vec3 c)\r\n  {\r\n      vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\r\n      vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\r\n      return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\r\n  }\r\n  float quadraticIn(float t) {\r\n    return t * t;\r\n  }\r\n  void main() {\r\n    float mag = distance(uv, vec2(0.5));\r\n    vec2 pos = vec2(0.5) - uv;\r\n    float a = atan(pos.y, pos.x);\r\n    float progress = a * 0.5 / PI + 0.5;\r\n    gl_FragColor = mag < 0.5 ? vec4(hsv2rgb(vec3(progress, quadraticIn(mag * 2.0), 1.0)), 1.0) : vec4(1.0, 1.0, 1.0, 1.0);\r\n  }\r\n  `,\r\n  },\r\n}); */\r\n\r\ninterface Props {\r\n  canvasWidth: number;\r\n  hue: Animated.Value<number>;\r\n  saturation: Animated.Value<number>;\r\n  backgroundColor: Animated.Node<number>;\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t\r\n  log?: logger\r\n}\r\n\r\nconst ColorPicker = ({\r\n  canvasWidth,\r\n  hue,\r\n  saturation,\r\n  backgroundColor,\r\n  device,\r\n  log\r\n}: Props) => {\r\n  //const AnimatedCircle = Animated.createAnimatedComponent(Circle);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.hue}>\r\n        <Image source={require(\"../../../assets/images/colorPicker.png\")} style={[\r\n          styles.surface,\r\n          {\r\n            width: canvasWidth,\r\n            height: canvasWidth,\r\n          },\r\n        ]} />\r\n        <ColorPickerPin\r\n          canvasWidth={canvasWidth}\r\n          h={hue}\r\n          s={saturation}\r\n          backgroundColor={backgroundColor}\r\n          device={device}\r\n          log={log}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n\r\n\r\n{/*   <Surface\r\n          style={[\r\n            styles.surface,\r\n            {\r\n              width: 300,\r\n              height: 300,\r\n            },\r\n          ]}\r\n        >\r\n        <Node shader={shaders.hue} /> \r\n        </Surface> */}","import React from \"react\";\r\nimport { Dimensions, StyleSheet, View, Image } from \"react-native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport Animated from \"react-native-reanimated\";\r\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport ColorPicker from \"../../../../common/ColorPicker\";\r\nimport { navigation_t, viewTypeEnum } from \".\";\r\nimport { logger } from \"../../../../../util/logger\";\r\nimport UNIVERSALS from \"../../../../../@universals\";\r\n\r\ninterface Props {\r\n  hue: Animated.Value<number>;\r\n  saturation: Animated.Value<number>;\r\n  value: Animated.Value<number>;\r\n  backgroundColor: Animated.Node<number>;\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t;\r\n  navigation: navigation_t;\r\n  log?: logger\r\n}\r\n\r\nconst { width } = Dimensions.get(\"window\");\r\nexport const ColorPickerSection = ({\r\n  hue,\r\n  saturation,\r\n  value,\r\n  backgroundColor,\r\n  device,\r\n  navigation,\r\n  log\r\n}: Props) => {\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Sec: timer Button */}\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          //backgroundColor: \"red\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <ColorPicker\r\n          canvasWidth={width * 0.85}\r\n          hue={hue}\r\n          saturation={saturation}\r\n          backgroundColor={backgroundColor}\r\n          device={device}\r\n          log={log}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //backgroundColor: \"red\",\r\n    flex: 1,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { FlatList, Image, Text, View } from \"react-native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport { _appState } from \"../../../redux/rootReducer\";\r\n\r\nconst modes = [\r\n  {\r\n    name: \"AURORA\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/aurora.png\"),\r\n  },\r\n  {\r\n    name: \"AUTUMN\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/autumn.png\"),\r\n  },\r\n  {\r\n    name: \"DEEP OPCEAN\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/deepocean.png\"),\r\n  },\r\n  {\r\n    name: \"SPRING\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/spring1.png\"),\r\n  },\r\n  {\r\n    name: \"SUNRISE\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/sunrise.png\"),\r\n  },\r\n  {\r\n    name: \"SUNSET\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/sunset.png\"),\r\n  },\r\n  {\r\n    name: \"MODE 7\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/winter.png\"),\r\n  },\r\n];\r\n\r\ninterface Props {\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t;\r\n}\r\n\r\nexport const Modes = ({ device }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const deviceFromStore = useSelector((state: _appState) =>\r\n    state.deviceReducer.deviceList.find(\r\n      (item) => item.Mac == device.Mac\r\n    )\r\n  );\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        //backgroundColor: \"#555\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <FlatList\r\n        horizontal\r\n        data={modes}\r\n        keyExtractor={(_, index) => {\r\n          return \"\" + index;\r\n        }}\r\n        renderItem={({ item, index }) => {\r\n          return (\r\n            <View\r\n              style={{\r\n                borderRadius: 10,\r\n                marginHorizontal: 8,\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <RectButton\r\n                /*  onPress={() => {\r\n                   dispatch(\r\n                     groupModes_saga_action({\r\n                       Mode: item.name,\r\n                       groupUUID: group.groupUUID,\r\n                       deviceMac: deviceMacFromNavigator\r\n                         ? deviceMacFromNavigator\r\n                         : deviceMac\r\n                           ? deviceMac\r\n                           : [],\r\n                     })\r\n                   );\r\n                 }} */\r\n                style={{\r\n                  width: 150,\r\n                  height: 210,\r\n                  backgroundColor: \"#eee\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: {\r\n                    width: 0,\r\n                    height: 2,\r\n                  },\r\n                  shadowOpacity: 0.25,\r\n                  shadowRadius: 3.84,\r\n                  elevation: 2,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                {/*     <LinearGradient\r\n                  style={{\r\n                    height: 120,\r\n                    width: \"100%\",\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                  }}\r\n                  colors={[\"#fd746c\", \"#ff9068\"]}\r\n                  start={{ x: 1, y: 1 }}\r\n                  end={{ x: 0, y: 0 }}\r\n                ></LinearGradient> */}\r\n                <Image\r\n                  style={{\r\n                    height: 210,\r\n                    width: \"100%\",\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                  }}\r\n                  source={item.img}\r\n                />\r\n\r\n                {/* {groupFromSelector?.activeMode == item.name ? (\r\n                  <AntDesign\r\n                    name=\"pausecircleo\"\r\n                    size={20}\r\n                    color=\"#fff\"\r\n                    style={{ position: \"absolute\", bottom: 10, right: 10 }}\r\n                  />\r\n                ) : (\r\n                    <AntDesign\r\n                      name=\"playcircleo\"\r\n                      size={20}\r\n                      color=\"#fff\"\r\n                      style={{ position: \"absolute\", bottom: 10, right: 10 }}\r\n                    />\r\n                  )} */}\r\n                <Text\r\n                  style={{ fontSize: 15, color: \"#fff\", fontWeight: \"bold\" }}\r\n                >\r\n                  {item.name}\r\n                </Text>\r\n              </RectButton>\r\n            </View>\r\n          );\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n","import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport React from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\n\r\ninterface Props {\r\n  initValue: number;\r\n  _rowHeight?: number;\r\n  _width?: number;\r\n  heading?: string;\r\n  maxVal: number;\r\n  value: string;\r\n  index: number;\r\n  setIndex: (index: number) => void;\r\n}\r\n\r\nexport const NewSelector = ({\r\n  initValue,\r\n  _rowHeight = 60,\r\n  _width = 80,\r\n  heading,\r\n  maxVal,\r\n  value = \"\",\r\n  index = 0,\r\n  setIndex,\r\n}: Props) => {\r\n  const onPressUp = () => {\r\n    if (index == 0) setIndex(maxVal - 1);\r\n    else if (index > 0) setIndex(index - 1);\r\n  };\r\n\r\n  const onPressDown = () => {\r\n    if (index < maxVal - 1) setIndex(index + 1);\r\n    else setIndex(0);\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={[styles.container, { width: _width, height: _rowHeight * 3 + 20 }]}\r\n    >\r\n      <View style={styles.heading}>\r\n        {heading && <Text style={styles.headingText}>{heading}</Text>}\r\n      </View>\r\n      <View style={[styles.scrollContainer, { height: _rowHeight }]}>\r\n        <TouchableOpacity\r\n          onPress={onPressUp}\r\n          style={[styles.button, { height: _rowHeight }]}\r\n        >\r\n          <MaterialIcons name=\"navigation\" size={24} color=\"#ddd\" />\r\n          {/* <FontAwesome name=\"angle-double-up\" size={24} color=\"#555\" /> */}\r\n        </TouchableOpacity>\r\n        <View style={[styles.numberContainer, { height: _rowHeight }]}>\r\n          <Text style={styles.value}>{value}</Text>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={onPressDown}\r\n          style={[\r\n            styles.button,\r\n            { height: _rowHeight, transform: [{ rotate: \"180deg\" }] },\r\n          ]}\r\n        >\r\n          {/* <FontAwesome name=\"angle-double-up\" size={24} color=\"#555\" /> */}\r\n          <MaterialIcons\r\n            style={{ transform: [{ rotate: \"360deg\" }] }}\r\n            name=\"navigation\"\r\n            size={24}\r\n            color=\"#ddd\"\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //backgroundColor: \"red\",\r\n  },\r\n  heading: { height: 20, alignItems: \"center\", justifyContent: \"center\" },\r\n  headingText: {\r\n    fontSize: 10,\r\n    fontWeight: \"bold\",\r\n    color: \"#555\",\r\n    textAlign: \"center\",\r\n  },\r\n  scrollContainer: {},\r\n  numberContainer: { alignItems: \"center\", justifyContent: \"center\" },\r\n  value: { fontSize: 20, fontWeight: \"bold\", color: \"#555\" },\r\n  button: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    //backgroundColor: \"green\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react'\r\nimport STYLES from \"../styles\"\r\nimport { View, Text, Modal, StyleSheet } from \"react-native\"\r\nimport UNIVERSALS from '../../../@universals';\r\nimport { Feather, MaterialCommunityIcons } from \"@expo/vector-icons\"\r\nimport { NewSelector } from '../NewSelector';\r\nimport { NewRectButtonWithChildren } from '../buttons/RectButtonCustom';\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport API from '../../../services/api';\r\nimport { logger } from '../../../util/logger';\r\nimport { generate_UUID_10_withVenderPrefix } from '../../../util/UUID_utils';\r\nimport { appOperator } from '../../../util/app.operator';\r\nimport { getCurrentTimeStampInSeconds } from '../../../util/DateTimeUtil';\r\n\r\nconst daysSelectorArray = [\r\n    { day: \"M\" },\r\n    { day: \"T\" },\r\n    { day: \"W\" },\r\n    { day: \"T\" },\r\n    { day: \"F\" },\r\n    { day: \"S\" },\r\n    { day: \"S\" },\r\n];\r\nconst hrs = [\r\n    { _data: \"01\", val: 1 },\r\n    { _data: \"02\", val: 2 },\r\n    { _data: \"03\", val: 3 },\r\n    { _data: \"04\", val: 4 },\r\n    { _data: \"05\", val: 5 },\r\n    { _data: \"06\", val: 6 },\r\n    { _data: \"07\", val: 7 },\r\n    { _data: \"08\", val: 8 },\r\n    { _data: \"09\", val: 9 },\r\n    { _data: \"10\", val: 10 },\r\n    { _data: \"11\", val: 11 },\r\n    { _data: \"12\", val: 12 },\r\n];\r\nconst mins = [\r\n    { _data: \"00\", val: 0 },\r\n    { _data: \"05\", val: 5 },\r\n    { _data: \"10\", val: 10 },\r\n    { _data: \"15\", val: 15 },\r\n    { _data: \"20\", val: 20 },\r\n    { _data: \"25\", val: 25 },\r\n    { _data: \"30\", val: 30 },\r\n    { _data: \"35\", val: 35 },\r\n    { _data: \"40\", val: 40 },\r\n    { _data: \"45\", val: 45 },\r\n    { _data: \"50\", val: 50 },\r\n\r\n    { _data: \"55\", val: 55 },\r\n    /* { _data: \"12\" },\r\n    { _data: \"13\" },\r\n    { _data: \"14\" },\r\n    { _data: \"15\" },\r\n    { _data: \"16\" },\r\n    { _data: \"17\" },\r\n    { _data: \"18\" },\r\n    { _data: \"19\" },\r\n    { _data: \"20\" },\r\n  \r\n    { _data: \"21\" },\r\n    { _data: \"22\" },\r\n    { _data: \"23\" },\r\n    { _data: \"24\" },\r\n    { _data: \"25\" },\r\n    { _data: \"26\" },\r\n    { _data: \"27\" },\r\n    { _data: \"28\" },\r\n    { _data: \"29\" },\r\n    { _data: \"30\" },\r\n  \r\n    { _data: \"41\" },\r\n    { _data: \"42\" },\r\n    { _data: \"43\" },\r\n    { _data: \"44\" },\r\n    { _data: \"45\" },\r\n    { _data: \"46\" },\r\n    { _data: \"47\" },\r\n    { _data: \"48\" },\r\n    { _data: \"49\" },\r\n    { _data: \"50\" },\r\n  \r\n    { _data: \"51\" },\r\n    { _data: \"52\" },\r\n    { _data: \"53\" },\r\n    { _data: \"54\" },\r\n    { _data: \"55\" },\r\n    { _data: \"56\" },\r\n    { _data: \"57\" },\r\n    { _data: \"58\" },\r\n    { _data: \"59\" }, */\r\n];\r\nconst daytimeSelectorData = [\r\n    { _data: \"AM\", val: 1 },\r\n    { _data: \"PM\", val: 2 },\r\n];\r\n\r\ninterface Props {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t | undefined\r\n    timerInEditor: Omit<UNIVERSALS.GLOBALS.TIMER_t, \"id\"> & { id?: string } | undefined\r\n    setTimerInEditor: React.Dispatch<React.SetStateAction<Omit<UNIVERSALS.GLOBALS.TIMER_t, \"id\"> & { id?: string } | undefined>>\r\n    log?: logger\r\n}\r\n/**\r\n * ## Devices new timer dialog\r\n * \r\n * ### @description\r\n * ##### working\r\n * - onShow fetches device timer from cloud as source of truth\r\n * - if timersString is received than update the `timers` state object with json object parsed from `timerString` received\r\n * \r\n * #### @state\r\n * - `timers` - responsible for timerDialog Middle container rendering\r\n *      **dependentViews**\r\n *          - middleSecionContainer view conditions\r\n *              `undefined` => loading\r\n *              `\"error\"`=> loading error\r\n *              `timers` && `timers.length >= 5` => max Timers warning\r\n *              `timers` && `timers.length < 5` => time selector active\r\n *              \r\n * - `hrIndex` - holds hour index for current timer in editor\r\n * - `minIndex` - holds minute index for current timer in editor\r\n *  \r\n * #### @param { device, timerInEditor, setTimerInEditor, log }\r\n * \r\n * #### @returns  timer editor dialog with reactNative Modal component\r\n * \r\n * \r\n * ### @changelog\r\n * \r\n * \r\n * ### @TODO\r\n * - [x] middleSectionContainer - show unhandled view\r\n * - [x] middleSectionContainer - show errors view\r\n * - [x] middleSectionContainer - show max timers limit reacthed view\r\n * - [x] middleSectionContainer - show time selector view upon response\r\n * - [ ] make days selectors functional and style accordingly `ACTIVE` `INACTIVE`\r\n * - [ ] amke daytime selector and eventtype selector function\r\n * - [ ] modify current timer in dialog\r\n * - [ ] update new timer to device state in redux store\r\n */\r\nexport const NewTimerDialog = ({ device, timerInEditor, setTimerInEditor, log }: Props) => {\r\n    const [hrIndex, setHrIndex] = useState<number>(8);\r\n    const [minIndex, setMinIndex] = useState<number>(0);\r\n    const [dtIndex, setDtIndex] = useState<number>(0)\r\n    const [timers, setTimers] = useState<Array<UNIVERSALS.GLOBALS.TIMER_t> | undefined | \"error\">(undefined)\r\n    const [etIndex, setEtIndex] = useState<UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e>(UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON)\r\n    const [days, setDays] = useState<UNIVERSALS.GLOBALS.TIMER_DAYS_t>([false, false, false, false, false, false, false])\r\n\r\n    useEffect(() => {\r\n        if (timerInEditor) {\r\n            setDays(timerInEditor.DAYS)\r\n            setEtIndex(timerInEditor.ET)\r\n            setDtIndex(timerInEditor.DT)\r\n            setHrIndex(0)\r\n            setMinIndex(0)\r\n        }\r\n        return () => { }\r\n    }, [timerInEditor])\r\n\r\n    const resetDialog = () => {\r\n        setTimerInEditor(undefined)\r\n        setTimers(undefined)\r\n        setDays([true, true, true, true, true, true, true])\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal /* Sec2: timer editor dialog */\r\n            animationType=\"slide\"\r\n            transparent\r\n            visible={timerInEditor != undefined}\r\n            onShow={async () => {\r\n                log?.print(\"onShow\")\r\n                if (device?.id) {\r\n                    const res = await API.cloudAPI.device.deviceTimersQuery.v1({\r\n                        id: device.id,\r\n                        //log: log ? new logger(\"device timers query\", log) : undefined\r\n                    })\r\n                    /**\r\n                     * - [x] validate new timers data before updating state\r\n                     */\r\n                    if (res.RES) {\r\n                        try {\r\n                            if (res.RES.ts && device.ts && res.RES.ts >= device.ts)// => if we have both local and cloud timestamp then compare and  update the latest timerStates in timers object \r\n                            {\r\n                                let timersObj = UNIVERSALS.GLOBALS.convertTimersStringToObj({ timersString: res.RES.timers })\r\n                                if (timersObj)\r\n                                    setTimers(timersObj)\r\n                                else\r\n                                    setTimers(\"error\")\r\n                            }\r\n                            else setTimers(device.timers)\r\n                        } catch (error) {\r\n                            log?.print(error)\r\n                            setTimers(\"error\")\r\n                        }\r\n                    }\r\n                    else if (res.ERR) {/* if no timersObj is received then set timers state to error so as to set middle section to show error to user */\r\n                        // - [ ] handle deviceTimerQuery errors\r\n                        setTimers(\"error\")\r\n                    } else {\r\n                        setTimers(\"error\")\r\n                        // - [ ] handle unhandled respose\r\n                    }\r\n                }\r\n            }} >\r\n            <View /* Sec3: modal container */\r\n                style={{\r\n                    flex: 1,\r\n                    //backgroundColor: \"red\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\"\r\n                }}>\r\n                <View /* Sec3: modal inner container */\r\n                    style={[{\r\n                        width: \"85%\",\r\n                        backgroundColor: \"white\",\r\n                        borderRadius: 20\r\n                    }, STYLES.shadow]}>\r\n                    <View /* Sec4:  header */\r\n                        style={{\r\n                            backgroundColor: \"#F39C12\",\r\n                            //borderRadius: 20,\r\n                            //margin: 5,\r\n                            //height: 100,\r\n                            width: \"100%\",\r\n                            justifyContent: \"flex-end\",\r\n                            paddingLeft: 10\r\n                        }}>\r\n                        <MaterialCommunityIcons\r\n                            style={{\r\n                                marginTop: 15\r\n                            }}\r\n                            name=\"toggle-switch-off\"\r\n                            size={20} color=\"white\" />\r\n                        <Text style={[STYLES.H7, {\r\n                            margin: 0,\r\n                            padding: 0,\r\n                            color: \"white\"\r\n                        }]}>TURN OFF</Text>\r\n                        <View style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            alignItems: \"center\"\r\n                        }}>\r\n                            <Text style={[\r\n                                STYLES.H1\r\n                                , {\r\n                                    color: \"white\",\r\n                                    marginBottom: 0,\r\n                                    marginLeft: 0\r\n                                }]}>{hrs[hrIndex]._data + \" : \" + mins[minIndex]._data + \" \" + daytimeSelectorData[dtIndex]._data}</Text>\r\n                            <Feather name=\"sun\" size={15} color=\"white\" />\r\n                        </View>\r\n                    </View>\r\n                    {/* Sec4: middle container */\r\n                        (timers == \"error\") ? <View style={_styles.middleContainerCommonView}><Text>error loading</Text></View>\r\n                            : (timers == undefined) ? (<View\r\n                                style={_styles.middleContainerCommonView}>\r\n                                <Text>LOADING... please wait</Text>\r\n                            </View>)\r\n                                : ((timers && timers?.length < 5) || (timers && timerInEditor?.id)) ? (<View /* Sec5: middle container */\r\n                                    style={{\r\n                                        width: \"100%\"\r\n                                    }}>\r\n                                    <View /* Sec5: Event repeatition selector */>\r\n                                        <Text style={[STYLES.H7, { color: \"#F39C12\", marginTop: 10 }]}>EVENT TYPE</Text>\r\n                                        <View\r\n                                            style={{\r\n                                                display: \"flex\",\r\n                                                flexDirection: \"row\"\r\n                                            }}>\r\n                                            <NewRectButtonWithChildren\r\n                                                useReanimated={false}\r\n                                                onPress={() => {\r\n                                                    setEtIndex(UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON)\r\n                                                }}\r\n                                                style={{\r\n                                                    height: 50,\r\n                                                    flex: 1,\r\n                                                    backgroundColor: etIndex == UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON ? \"#aaa\" : \"#eee\",\r\n                                                    marginHorizontal: 10,\r\n                                                    marginVertical: 5,\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\"\r\n                                                }}>\r\n                                                <Text>TURN ON</Text>\r\n                                            </NewRectButtonWithChildren>\r\n                                            <NewRectButtonWithChildren\r\n                                                useReanimated={false}\r\n                                                onPress={() => {\r\n                                                    setEtIndex(UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.OFF)\r\n                                                }}\r\n                                                style={{\r\n                                                    height: 50,\r\n                                                    flex: 1,\r\n                                                    backgroundColor: etIndex == UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.OFF ? \"#aaa\" : \"#eee\",\r\n                                                    marginHorizontal: 10,\r\n                                                    marginVertical: 5,\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\"\r\n                                                }}>\r\n                                                <Text>TURN OFF</Text>\r\n                                            </NewRectButtonWithChildren>\r\n                                        </View>\r\n                                    </View>\r\n                                    <View /* Sec5: Event repeatition selector */>\r\n                                        <Text style={[STYLES.H7, { color: \"#F39C12\", marginTop: 10 }]}>REPEAT EVENT</Text>\r\n                                        <View /* Sec6: Days selectors buttons */\r\n                                            style={{\r\n                                                display: \"flex\",\r\n                                                flexDirection: \"row\",\r\n                                                justifyContent: \"space-evenly\"\r\n                                            }}>\r\n                                            <NewRectButtonWithChildren /* Sec7: oncebutton for days selector */\r\n                                                onPress={() => {\r\n                                                    setDays([false, false, false, false, false, false, false])\r\n                                                }}\r\n                                                useReanimated={false}\r\n                                                style={[{\r\n                                                    width: 50,\r\n                                                    height: 50,\r\n                                                    backgroundColor: \"white\",\r\n                                                    borderRadius: 25,\r\n                                                    marginHorizontal: 10,\r\n                                                    marginVertical: 5,\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\",\r\n                                                    borderWidth: 0.5,\r\n                                                    borderColor: \"#F39C12\"\r\n                                                }, STYLES.shadow]} >\r\n                                                <Text style={{\r\n                                                    color: \"#F39C12\",\r\n                                                    fontSize: 10,\r\n                                                    fontWeight: (() => {\r\n                                                        let once = true\r\n                                                        days.forEach(item => {\r\n                                                            if (item)\r\n                                                                once = false\r\n                                                        });\r\n                                                        return once\r\n                                                    })() ? \"bold\" : \"400\"\r\n                                                }}>ONCE</Text>\r\n                                            </NewRectButtonWithChildren>\r\n                                            <NewRectButtonWithChildren /* Sec7: Daily button for days selector */\r\n                                                useReanimated={false}\r\n                                                onPress={() => {\r\n                                                    setDays([true, true, true, true, true, true, true])\r\n                                                }}\r\n                                                style={[{\r\n                                                    width: 50,\r\n                                                    height: 50,\r\n                                                    backgroundColor: \"white\",\r\n                                                    borderRadius: 25,\r\n                                                    marginHorizontal: 10,\r\n                                                    marginVertical: 5,\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\",\r\n                                                    borderWidth: 0.5,\r\n                                                    borderColor: \"#F39C12\"\r\n                                                }, STYLES.shadow]} >\r\n                                                <Text style={{\r\n                                                    color: \"#F39C12\",\r\n                                                    fontSize: 10,\r\n                                                    fontWeight: (() => {/* check if its set for daily */\r\n                                                        let daily = true\r\n                                                        days.forEach(element => {\r\n                                                            if (!element)\r\n                                                                daily = false\r\n                                                        })\r\n                                                        return daily\r\n                                                    })() ? \"bold\" : \"400\"\r\n                                                }}>DAILY</Text>\r\n                                            </NewRectButtonWithChildren>\r\n                                            <NewRectButtonWithChildren /* Sec7: Weekly button for days selector  */\r\n                                                useReanimated={false}\r\n                                                onPress={() => {\r\n                                                    setDays([true, true, true, true, true, false, false])\r\n                                                }}\r\n                                                style={[{\r\n                                                    width: 50,\r\n                                                    height: 50,\r\n                                                    backgroundColor: \"white\",\r\n                                                    borderRadius: 25,\r\n                                                    marginHorizontal: 10,\r\n                                                    marginVertical: 5,\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\",\r\n                                                    borderWidth: 0.5,\r\n                                                    borderColor: \"#F39C12\"\r\n                                                }, STYLES.shadow]} >\r\n                                                <Text style={{\r\n                                                    color: \"#F39C12\",\r\n                                                    fontSize: 10,\r\n                                                    fontWeight: (\r\n                                                        !(() => {/* check if its set for daily */\r\n                                                            let daily = true\r\n                                                            days.forEach(element => {\r\n                                                                if (!element)\r\n                                                                    daily = false\r\n                                                            })\r\n                                                            return daily\r\n                                                        })()\r\n                                                        &&\r\n                                                        !(() => {\r\n                                                            let once = true\r\n                                                            days.forEach(item => {\r\n                                                                if (item)\r\n                                                                    once = false\r\n                                                            });\r\n                                                            return once\r\n                                                        })()) ? \"bold\" : \"400\"\r\n                                                }}>WEEKLY</Text>\r\n                                            </NewRectButtonWithChildren>\r\n                                        </View>\r\n                                        {(\r\n                                            !(() => {/* check if days is set for once only */\r\n                                                let once = true\r\n                                                days.forEach(item => {\r\n                                                    if (item)\r\n                                                        once = false\r\n                                                })\r\n                                                return once\r\n                                            })()\r\n                                            &&\r\n                                            !(() => {/* check if its set for daily */\r\n                                                let daily = true\r\n                                                days.forEach(element => {\r\n                                                    if (!element)\r\n                                                        daily = false\r\n                                                })\r\n                                                return daily\r\n                                            })()) && <View /* Sec6: Days selector */\r\n                                                style={{\r\n                                                    display: \"flex\",\r\n                                                    flexDirection: \"row\",\r\n                                                    justifyContent: \"space-evenly\",\r\n                                                    paddingVertical: 5,\r\n                                                    paddingHorizontal: 15\r\n                                                }}>\r\n                                                {days.map((item, index) => {\r\n                                                    return (\r\n                                                        <NewRectButtonWithChildren\r\n                                                            useReanimated={false}\r\n                                                            style={{\r\n                                                                flex: 1\r\n                                                            }}\r\n                                                            onPress={() => {\r\n                                                                log?.print(\"setting new Days\")\r\n                                                                let newDaysArray: any = days.map((_item, _index) => {\r\n                                                                    if (_index == index)\r\n                                                                        return !_item\r\n                                                                    return _item\r\n                                                                })\r\n                                                                setDays(newDaysArray)\r\n                                                            }}\r\n                                                            key={index}>\r\n                                                            <Text style={{\r\n                                                                color: days[index] ? STYLES.colors.primary : STYLES.colors.tertiary,\r\n                                                                fontWeight: days[index] ? \"bold\" : \"500\"\r\n                                                            }}>{daysSelectorArray[index].day}</Text>\r\n                                                        </NewRectButtonWithChildren>\r\n                                                    )\r\n                                                })}\r\n                                            </View>}\r\n                                    </View>\r\n                                    <Text style={[STYLES.H4, { color: \"#F39C12\", marginTop: 10 }]}>PICK TIME</Text>\r\n                                    <View /* Sec5: time selector */\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            flexDirection: \"row\",\r\n                                            width: \"100%\",\r\n                                            justifyContent: \"space-evenly\"\r\n                                        }}>\r\n                                        <NewSelector\r\n                                            initValue={1}\r\n                                            heading=\"HRS\"\r\n                                            maxVal={hrs.length}\r\n                                            value={hrs[hrIndex] ? hrs[hrIndex]._data : \"\"}\r\n                                            index={hrIndex}\r\n                                            setIndex={setHrIndex}\r\n                                        />\r\n                                        <NewSelector\r\n                                            initValue={5}\r\n                                            heading=\"MIN\"\r\n                                            maxVal={mins.length}\r\n                                            value={mins[minIndex] ? mins[minIndex]._data : \"\"}\r\n                                            index={minIndex}\r\n                                            setIndex={setMinIndex}\r\n                                        />\r\n                                        <NewSelector\r\n                                            initValue={5}\r\n                                            heading=\"DAYTIME\"\r\n                                            maxVal={daytimeSelectorData.length}\r\n                                            value={daytimeSelectorData[dtIndex] ? daytimeSelectorData[dtIndex]._data : \"\"}\r\n                                            index={dtIndex}\r\n                                            setIndex={setDtIndex}\r\n                                        />\r\n                                    </View>\r\n                                </View>)\r\n                                    : (timers && timers.length >= 5) ? (<View /* Sec5: max timer limit */\r\n                                        style={_styles.middleContainerCommonView}>\r\n                                        <Text>max number of timer, either delete any or edit one</Text>\r\n                                    </View>)\r\n                                        : (<View><Text>unknown error occured</Text></View>)\r\n                    }\r\n\r\n                    <View /* Sec4: modal button container */\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            marginBottom: 10\r\n                        }}>\r\n                        <View /* Sec5: save/update button */\r\n                            style={{ flex: 1, paddingHorizontal: 5 }}>\r\n                            <NewRectButtonWithChildren /* Sec5: add/update dialog button */\r\n                                onPress={() => {\r\n                                    if (timers && timers != \"error\") {\r\n                                        let newTimer: UNIVERSALS.GLOBALS.TIMER_t = {\r\n                                            id: timerInEditor?.id ? timerInEditor.id : generate_UUID_10_withVenderPrefix(),\r\n                                            DAYS: days,\r\n                                            H: hrs[hrIndex].val,\r\n                                            M: mins[minIndex].val,\r\n                                            ET: etIndex,\r\n                                            DT: dtIndex,\r\n                                            STATUS: (() => {\r\n                                                let once = true\r\n                                                days.forEach(element => {\r\n                                                    if (element)\r\n                                                        once = false\r\n                                                });\r\n                                                return once\r\n                                            })() ? UNIVERSALS.GLOBALS.TIMER_STATUS_e.ONCE : UNIVERSALS.GLOBALS.TIMER_STATUS_e.REPEAT\r\n                                        }\r\n                                        log?.print(\"new timer is \" + JSON.stringify(newTimer))\r\n                                        log?.print(\"previous timer string is \" + JSON.stringify(timers, null, 2))\r\n                                        let timerFound = false\r\n                                        let newTimersObj = timers.map((timer, index) => {\r\n                                            if (timer?.id && timer.id == timerInEditor?.id) {\r\n                                                timerFound = true\r\n                                                return newTimer\r\n                                            }\r\n                                            return { ...timer, DAYS: days }\r\n                                        })\r\n                                        if (!timerFound && newTimersObj.length < 5)\r\n                                            newTimersObj.push(newTimer)\r\n                                        log?.print(\"new timer string is \" + UNIVERSALS.GLOBALS.converLocalTimerObjectToBackendString({ timers: newTimersObj }))\r\n                                        if (device) {\r\n                                            appOperator.device({\r\n                                                cmd: \"ADD_UPDATE_DEVICES\",\r\n                                                newDevices: [{ ...device, timers: newTimersObj, localTimeStamp: getCurrentTimeStampInSeconds() }],\r\n                                                log\r\n                                            })\r\n                                            setTimerInEditor(undefined)\r\n                                        }\r\n                                    }\r\n                                    // - [x] print incoming timer\r\n                                    // - [ ] process the timer addition/update here\r\n                                    // - [ ] update local state with local timetamp of device\r\n                                    // - [ ] update the new device tate to cloud\r\n                                    // - [ ] disable update button unless we have timers and not as 'error'\r\n                                }}\r\n                                useReanimated={false}\r\n                                style={{ backgroundColor: \"green\" }}>\r\n                                <Text>{timerInEditor?.id ? \"UPDATE\" : \"ADD\"}</Text>\r\n                            </NewRectButtonWithChildren>\r\n                        </View>\r\n                        <View /* Sec5: close dialog button */\r\n                            style={{ flex: 1, paddingHorizontal: 5 }}>\r\n                            <NewRectButtonWithChildren\r\n                                onPress={() => {\r\n                                    resetDialog()\r\n                                }}\r\n                                useReanimated={false}\r\n                                style={{ backgroundColor: \"red\" }}>\r\n                                <Text>MAYBE LATER</Text>\r\n                            </NewRectButtonWithChildren>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nconst _styles = StyleSheet.create({\r\n    middleContainerCommonView: {\r\n        minHeight: 150,\r\n        width: \"100%\",\r\n        //backgroundColor: \"red\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    }\r\n})\r\n","import UNI from \"../@universals\"\r\nimport { reduxStore } from \"../redux\";\r\n\r\nexport function uuidv4() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function generate_UUID_10_withVenderPrefix() {\r\n  return UNI.venderConf.venderPrefix + \"_xxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n\r\nexport function generateRandomUserId() {\r\n  return \"xxxxxxxx-xxxx-4xxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n/** @deprecated */\r\nexport function generateUUID() {\r\n  return \"xxxxxxxx-xxxx-xxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n/** @deprecated */\r\nexport const getContainerUUID = () => {\r\n  let UUID = generateUUID()\r\n  while (checkUUIDMatch(UUID)) {\r\n    UUID = generateUUID()\r\n  }\r\n  return UUID\r\n}\r\n\r\n/** @deprecated */\r\nconst checkUUIDMatch = (UUID: string) => {\r\n  reduxStore.store.getState().deviceReducer.containers.forEach((container, index) => {\r\n    if (UUID == container.conUUID)\r\n      return true\r\n  })\r\n  return false\r\n}\r\n","import { Ionicons } from \"@expo/vector-icons\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, StyleSheet, Text, View } from \"react-native\";\r\nimport { RectButton, ScrollView } from \"react-native-gesture-handler\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport { appState } from \"../../../redux\";\r\nimport { appNegativeColor, appPositiveColor } from \"../../../theme/colors/highlightColors\";\r\nimport { appOperator } from \"../../../util/app.operator\";\r\nimport { getCurrentTimeStampInSeconds } from \"../../../util/DateTimeUtil\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { NewTimerDialog } from \"./NewTimerDialog\";\r\n\r\nconst days = [\r\n  { day: \"M\" },\r\n  { day: \"T\" },\r\n  { day: \"W\" },\r\n  { day: \"T\" },\r\n  { day: \"F\" },\r\n  { day: \"S\" },\r\n  { day: \"S\" },\r\n];\r\n\r\ninterface Props {\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t\r\n  log?: logger\r\n}\r\n/** \r\n * \r\n * ## todo\r\n * featureRequest timer delete action conformation to avoid unwanted delete operation\r\n */\r\nexport const Timer = ({ device, log }: Props) => {\r\n  const deviceFromStore = useSelector((state: appState) => state.deviceReducer.deviceList.find(item => item.Mac == device.Mac))\r\n  const [timerInEditor, setTimerInEditor] = useState<Omit<UNIVERSALS.GLOBALS.TIMER_t, \"id\"> & { id?: string } | undefined>(undefined)\r\n\r\n\r\n\r\n  return (\r\n    <ScrollView /* Sec1: ListView for Timers in the group  */\r\n      showsVerticalScrollIndicator={false}\r\n      style={{\r\n        width: \"100%\",\r\n      }} >\r\n      {deviceFromStore && deviceFromStore.timers.map((timerFromProp, index) => { /* Sec2: timer block container */\r\n        return (\r\n          <View\r\n            style={styles.timerBlockConatiner}\r\n            key={index}>\r\n            <View /* Sec3: Left Side Section */\r\n              style={{\r\n                backgroundColor: \"#fff\",\r\n                margin: 10,\r\n                paddingVertical: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 1,\r\n                  borderLeftColor:\r\n                    timerFromProp?.ET == UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON\r\n                      ? appPositiveColor\r\n                      : \"#aaa\",\r\n                  borderLeftWidth: 2,\r\n                }}\r\n              ></View>\r\n              <Text\r\n                style={{\r\n                  color: \"#777\",\r\n                  fontSize: 14,\r\n                  marginLeft: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                {timerFromProp.H < 10 ? \"0\" : \"\"}\r\n                {timerFromProp.H}\r\n                {\":\"}\r\n                {timerFromProp.M < 10 ? \"0\" : \"\"}\r\n                {timerFromProp.M + \" \"}\r\n                {timerFromProp.DT == UNIVERSALS.GLOBALS.TIMER_DAYTIME_e.AM ? \"AM\" : \"PM\"}\r\n              </Text>\r\n            </View>\r\n            <View /* Sec3: Timer Card */\r\n              style={{\r\n                flex: 1,\r\n                marginVertical: 10,\r\n                marginRight: 10,\r\n                borderRadius: 15,\r\n                backgroundColor: \"#fff\",\r\n                overflow: \"hidden\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: {\r\n                  width: 0,\r\n                  height: 1,\r\n                },\r\n                shadowOpacity: 0.22,\r\n                shadowRadius: 2.22,\r\n                elevation: 3,\r\n              }}\r\n            >\r\n              <LinearGradient /* Sec4: */\r\n                colors={[\"#ae39fe\", \"#cf63ff\"]}\r\n                start={{ x: 0, y: 0.5 }}\r\n                end={{ x: 1, y: 0 }}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                }}\r\n              />\r\n              <View /* Sec4: Middle Sec for TIME & EVENT TYPE */\r\n                style={{\r\n                  flex: 1,\r\n                  //backgroundColor: \"#ff0\",\r\n                }}\r\n              >\r\n                <View /* Sec5: Event Type */\r\n                  style={{ marginLeft: 20, marginTop: 10 }}>\r\n                  <Text style={{ color: \"white\", fontSize: 12 }}>\r\n                    {timerFromProp?.ET == UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON\r\n                      ? \"TURN ON\"\r\n                      : \"TURN OFF\"}\r\n                  </Text>\r\n                </View>\r\n                <View /* Sec5: Alarm Time */\r\n                  style={{\r\n                    //backgroundColor: \"#f00\",\r\n                    flex: 1,\r\n                    marginLeft: 20,\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 40,\r\n                      //fontWeight: \"bold\",\r\n                      color: \"#fff\",\r\n                    }}\r\n                  >\r\n                    {timerFromProp?.H + \" : \"}\r\n                    {timerFromProp?.M && timerFromProp.M < 10 ? \"0\" : \"\"}\r\n                    {timerFromProp?.M + \" \"}\r\n                    {timerFromProp?.DT == UNIVERSALS.GLOBALS.TIMER_DAYTIME_e.AM\r\n                      ? \"AM\"\r\n                      : \"PM\"}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              <View /* Sec4: Days Conatiner */\r\n                style={styles.weekDaysConatiner}>\r\n                {timerFromProp?.DAYS.map((item, index) => {\r\n                  return (\r\n                    <View style={[styles.weekDayBlock]} key={index}>\r\n                      <Text\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: item ? \"#fff\" : \"#555\",\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 12,\r\n                        }}\r\n                      >\r\n                        {days[index].day}\r\n                      </Text>\r\n                    </View>\r\n                  );\r\n                })}\r\n              </View>\r\n              <View /* Sec4: BUTTON CONTAINER ==> EDIT / DELETE */\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  borderTopColor: \"#fff\",\r\n                  borderTopWidth: 0.5,\r\n                  marginHorizontal: 10,\r\n                }}>\r\n                <RectButton /* Sec5: EDIT BUTTON */\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: 30,\r\n                  }}\r\n                  onPress={() => {\r\n                    setTimerInEditor(timerFromProp)\r\n\r\n                  }}>\r\n                  <Text\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 12,\r\n                      color: \"#fff\",\r\n                    }}\r\n                  >\r\n                    EDIT\r\n                    </Text>\r\n                </RectButton>\r\n                <View /* Sec5: Divider */\r\n                  style={{\r\n                    width: 1,\r\n                    borderRightColor: \"#fff\",\r\n                    borderRightWidth: 0.5,\r\n                    marginVertical: 5,\r\n                  }}\r\n                ></View>\r\n                <RectButton /* Sec5: DELETE BUTTON */\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    //backgroundColor: \"#EC7063\",\r\n                  }}\r\n                  onPress={() => {\r\n                    log?.print(\"currentTimersList is \" + JSON.stringify(deviceFromStore.timers))\r\n                    let newTimers: UNIVERSALS.GLOBALS.TIMER_t[] = []\r\n                    deviceFromStore.timers.forEach((deleteTimerObj, deleteTimerObjIndex) => {\r\n                      if (deleteTimerObj.id == timerFromProp.id) {\r\n                        log?.print(\"timer to be deleted at index \" + deleteTimerObjIndex + \", timerId is \" + deleteTimerObj.id)\r\n                      }\r\n                      newTimers.push(deleteTimerObj)\r\n                    })\r\n                    log?.print(\"timersList after deletion \" + JSON.stringify({ ...device, timers: newTimers }))\r\n                    appOperator.device({\r\n                      cmd: \"ADD_UPDATE_DEVICES\",\r\n                      newDevices: [{ ...device, timers: newTimers, localTimeStamp: getCurrentTimeStampInSeconds() }],\r\n                      log\r\n                    })\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: appNegativeColor,\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 12,\r\n                    }}\r\n                  >\r\n                    DELETE\r\n                    </Text>\r\n                </RectButton>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        );\r\n      })}\r\n      {(deviceFromStore && deviceFromStore.timers?.length < 5) && <RectButton /* Sec2: AddNew Event Button */\r\n        style={[\r\n          {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            minHeight: 120\r\n          },\r\n        ]}\r\n        onPress={() => {\r\n          setTimerInEditor({\r\n            DAYS: [true, true, true, true, true, false, false],\r\n            H: 10,\r\n            M: 0,\r\n            ET: UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON,\r\n            DT: UNIVERSALS.GLOBALS.TIMER_DAYTIME_e.AM,\r\n            STATUS: 1\r\n          })\r\n        }}\r\n      >\r\n        <Ionicons name=\"ios-add-circle\" size={50} color=\"#555\" />\r\n        <Text style={{ position: \"absolute\", bottom: 10, fontWeight: \"bold\" }}>\r\n          ADD NEW EVENT\r\n        </Text>\r\n      </RectButton>}\r\n      <NewTimerDialog /* Sec2: timer dialog */\r\n        device={deviceFromStore} // IMP send device from redux state so that receiving component can have latest state of device always\r\n        timerInEditor={timerInEditor}\r\n        setTimerInEditor={setTimerInEditor}\r\n        log={log ? new logger(\"timer editor dialog\", log) : undefined} />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  timerBlockConatiner: {\r\n    width: \"100%\",\r\n    minHeight: 120,\r\n    backgroundColor: \"#fff\",\r\n    overflow: \"hidden\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  weekDaysConatiner: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    padding: 5,\r\n    overflow: \"hidden\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  weekDayBlock: {\r\n    margin: 2,\r\n    width: 30,\r\n    justifyContent: \"center\",\r\n    //borderWidth: 0.5,\r\n    //borderColor: \"white\",\r\n    //borderRadius: 20,\r\n    /* shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 2, */\r\n  },\r\n});\r\n","export const appPositiveColor: string = \"#58D68D\";\r\n\r\nexport const appNegativeColor: string = \"#f55\";\r\n","import { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React from \"react\";\r\nimport { View, Text, Image } from \"react-native\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { devicePageStackParamList } from \"../..\";\r\nimport { Modes } from \"../../../../common/Modes\";\r\nimport { Timer } from \"../../../../common/Timer\";\r\nimport {\r\n  MaterialCommunityIcons,\r\n  Ionicons,\r\n  FontAwesome5,\r\n} from \"@expo/vector-icons\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport { logger } from \"../../../../../util/logger\";\r\n\r\ntype DevicePageColorPickerNavigationProp = StackNavigationProp<\r\n  devicePageStackParamList,\r\n  \"DeviceModesScreen\"\r\n>;\r\ntype devicePageColorPickerRouteProp = RouteProp<\r\n  devicePageStackParamList,\r\n  \"DeviceModesScreen\"\r\n>;\r\n\r\ninterface Props {\r\n  navigation: DevicePageColorPickerNavigationProp;\r\n  route: devicePageColorPickerRouteProp;\r\n}\r\n\r\nexport const DeviceModesScreen = ({\r\n  navigation,\r\n  route: {\r\n    params: { device },\r\n  },\r\n}: Props) => {\r\n  const log = new logger(\"device modes screen \" + device.Mac)\r\n  return (\r\n    <SafeAreaView style={{ display: \"flex\", flex: 1, backgroundColor: \"#ffffff\" }}>\r\n      <View /* Sec1: header - back arrow */\r\n        style={{ height: 60, justifyContent: \"center\", width: 200 }}>\r\n        <RectButton\r\n          style={{\r\n            //backgroundColor: \"red\",\r\n            flexDirection: \"row\",\r\n            marginLeft: 20\r\n          }}\r\n          onPress={() => {\r\n            navigation.replace(\"DeviceColorPicker\", {\r\n              device\r\n            });\r\n          }}\r\n        >\r\n          <Ionicons name=\"ios-arrow-back\" size={30} color=\"#555\" />\r\n          <Text\r\n            style={{\r\n              color: \"#555\",\r\n              fontSize: 22,\r\n              fontWeight: \"bold\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            Color Picker\r\n            </Text>\r\n        </RectButton>\r\n      </View>\r\n      <View /* Sec1: Modes container */\r\n        style={{}}>\r\n        <Text\r\n          style={{\r\n            color: \"#555\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            marginTop: 10,\r\n            marginLeft: 20,\r\n            marginBottom: 5,\r\n          }}\r\n        >\r\n          Modes\r\n          </Text>\r\n        <Text\r\n          style={{\r\n            color: \"#aaa\",\r\n            fontSize: 14,\r\n            marginLeft: 20,\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          Choose from multiple modes\r\n          </Text>\r\n        <View style={{ marginLeft: 10, marginTop: 10 }}>\r\n          <Modes device={device} />\r\n        </View>\r\n      </View>\r\n      <View /* Sec1: Timer container */\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: \"#fff\",\r\n          marginTop: 20,\r\n          borderRadius: 10,\r\n          paddingBottom: 15,\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            color: \"#555\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            marginLeft: 20,\r\n            marginTop: 10,\r\n            marginBottom: 5,\r\n          }}\r\n        >\r\n          Timer\r\n          </Text>\r\n        <Text\r\n          style={{\r\n            color: \"#aaa\",\r\n            fontSize: 14,\r\n            marginLeft: 20,\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          From dawn to dusk, schedule your day with HUElite\r\n          </Text>\r\n        <Timer device={device} log={new logger(\"TIMER COMP\", log)} />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Text, TextInput, View } from \"react-native\";\r\nimport { NewRectButtonWithChildren } from \"../buttons/RectButtonCustom\";\r\nimport STYLES from \"../styles\";\r\n\r\ninterface props {\r\n    placeholder?: string\r\n    heading?: string\r\n    highlightColor?: string\r\n    onPress?: () => void\r\n    value?: string\r\n    setValue: React.Dispatch<React.SetStateAction<string>>\r\n}\r\nexport default ({ placeholder, heading, highlightColor = \"#aaaaaa\", onPress = () => { }, setValue, value }: props) => {\r\n\r\n    return (\r\n        <View>\r\n            <Text style={[STYLES.H7, STYLES.tertiaryTextColor, { marginLeft: 10, marginBottom: 3 }]}>{heading}</Text>\r\n            <View style={{\r\n                borderColor: highlightColor,\r\n                width: \"100%\",\r\n                borderWidth: 0.5,\r\n                minHeight: 50,\r\n                borderRadius: 10,\r\n                paddingHorizontal: 10,\r\n                justifyContent: \"center\"\r\n            }}>\r\n                <TextInput style={[STYLES.H6]}\r\n                    value={value}\r\n                    placeholder={placeholder}\r\n                    onChangeText={text => { setValue(text) }}\r\n                />\r\n            </View>\r\n        </View>\r\n    )\r\n}","import React, { useRef, useState } from \"react\";\r\nimport { Alert, Text, View } from \"react-native\";\r\nimport TextField from \"../../../../common/text/textField\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { devicePageStackParamList } from \"../..\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { NewRectButtonWithChildren } from \"../../../../common/buttons/RectButtonCustom\";\r\nimport STYLES from \"../../../../common/styles\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { _appState } from \"../../../../../redux/rootReducer\";\r\nimport UNIVERSALS from \"../../../../../@universals\";\r\nimport { appOperator } from \"../../../../../util/app.operator\";\r\n\r\ntype navigation_t = StackNavigationProp<\r\n  devicePageStackParamList,\r\n  \"DeviceColorPicker\"\r\n>;\r\ntype routeProp_t = RouteProp<\r\n  devicePageStackParamList,\r\n  \"DeviceColorPicker\"\r\n>;\r\n\r\n\r\n\r\ninterface Props {\r\n  navigation: navigation_t;\r\n  route: routeProp_t;\r\n}\r\nexport const DeviceSettingScreen = ({\r\n  navigation,\r\n  route: {\r\n    params: { device },\r\n  },\r\n}: Props) => {\r\n  const [name, setName] = useState(\"\")\r\n  const deviceFromStore = useSelector((state: _appState) => state.deviceReducer.deviceList.find(item => item.Mac == device.Mac))\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: \"#fff\" }}>\r\n      <TextField\r\n        heading=\"Device Name\"\r\n        placeholder={deviceFromStore?.deviceName}\r\n        setValue={setName}\r\n        value={name}\r\n      />\r\n      <NewRectButtonWithChildren style={{\r\n        height: 50,\r\n        width: 250,\r\n        borderRadius: 25,\r\n        backgroundColor: \"#fff\",\r\n        alignSelf: \"center\",\r\n        marginTop: 200,\r\n        borderWidth: 0.5,\r\n        justifyContent: \"center\",\r\n        borderColor: name.length >= 6 ? \"#00ff00\" : \"#777777\"\r\n      }}\r\n        onPress={() => {\r\n          if (name.length >= 6) {\r\n            //console.log(\"old device is \" + JSON.stringify(device, null, 2))\r\n            let tempDevice: UNIVERSALS.GLOBALS.DEVICE_t = { ...device, deviceName: name }\r\n            //console.log(\"new device is \" + JSON.stringify(tempDevice, null, 2))\r\n            appOperator.device({ cmd: \"ADD_UPDATE_DEVICES\", newDevices: [tempDevice] })\r\n            setName(\"\")\r\n          } else if (name.length) {\r\n            Alert.alert(\"DEVICE NAME TOO SHORT\", \"Device name must be atleast 6 characters log. consider using suffix or prefix with \" + name)\r\n          }\r\n        }}\r\n      >\r\n        <Text style={[STYLES.H5, {\r\n          textAlign: \"center\",\r\n          color: name.length >= 6 ? \"#00ff00\" : \"#777777\"\r\n        }]}>CHANGE DEVICE NAME</Text>\r\n      </NewRectButtonWithChildren>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n","import { RouteProp } from \"@react-navigation/native\";\r\nimport { CardStyleInterpolators, createStackNavigator, StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React from \"react\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport { MainRouterStackParamList } from \"../../../routers/MainRouter\";\r\nimport { DeviceColorPickerScreen } from \"./devicePageNavigator/colorPickerScreen\";\r\nimport { DeviceModesScreen } from \"./devicePageNavigator/modesScreen\";\r\nimport { DeviceSettingScreen } from \"./devicePageNavigator/settingScreen\";\r\n\r\nexport type devicePageStackParamList = {\r\n  DeviceColorPicker: {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t;\r\n  };\r\n  DeviceModesScreen: {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t;\r\n  };\r\n  DeviceSettingScreen: {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t\r\n  };\r\n};\r\n\r\ntype devicePageRouteProp = RouteProp<MainRouterStackParamList, \"devicePage\">;\r\n\r\ntype DevicePageNavigationProp = StackNavigationProp<\r\n  MainRouterStackParamList,\r\n  \"devicePage\"\r\n>;\r\n\r\ninterface Props {\r\n  navigation: DevicePageNavigationProp;\r\n  route: devicePageRouteProp;\r\n}\r\nconst Stack = createStackNavigator<devicePageStackParamList>();\r\n\r\nconst Component = ({\r\n  navigation,\r\n  route: {\r\n    params: { device },\r\n  },\r\n}: Props) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"DeviceColorPicker\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n        cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\r\n        cardStyle: {\r\n          backgroundColor: \"#fff\",\r\n          opacity: 1,\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"DeviceColorPicker\"\r\n        component={DeviceColorPickerScreen}\r\n        initialParams={{ device }}\r\n      />\r\n\r\n      <Stack.Screen\r\n        name=\"DeviceModesScreen\"\r\n        component={DeviceModesScreen}\r\n        initialParams={{ device }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"DeviceSettingScreen\"\r\n        component={DeviceSettingScreen}\r\n        initialParams={{ device }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default Component\r\n","import React from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport { NewRectButton } from \"../../common/buttons/RectButtonCustom\";\r\nimport { OnboardingButton } from \"./OnboardingButton\";\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    padding: 44,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    color: \"#777\",\r\n    textAlign: \"center\",\r\n    marginBottom: 12,\r\n  },\r\n  description: {\r\n    fontSize: 16,\r\n    lineHeight: 24,\r\n    color: \"#555\",\r\n    textAlign: \"center\",\r\n  },\r\n  nextButton: {},\r\n});\r\n\r\nexport const WelcomeFooterSlide = ({ footerContent, last, onPress }: any) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{footerContent.title}</Text>\r\n      <Text style={styles.description}>{footerContent.description}</Text>\r\n      <NewRectButton\r\n        text={last ? \"Let's get started\" : \"Next-\"}\r\n        useReanimated={false}\r\n        onPress={() => {\r\n          console.log(\"euygkvj,hb\")\r\n          onPress()\r\n        }}\r\n      ></NewRectButton>\r\n    </View>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { View, Text, Dimensions, StyleSheet } from \"react-native\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nexport const SLIDE_HEIGHT = 0.61 * height;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: width,\r\n  },\r\n  label: {\r\n    fontSize: 80,\r\n    lineHeight: 80,\r\n    fontWeight: \"bold\",\r\n    color: \"white\",\r\n    textAlign: \"center\",\r\n  },\r\n  labelContainer: {\r\n    height: 100,\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nexport const WelcomeSlide = (props) => {\r\n  const transform = [\r\n    { translateY: (SLIDE_HEIGHT - 100) / 2 },\r\n    { translateX: props.right ? width / 2 - 50 : -width / 2 + 50 },\r\n    { rotate: props.right ? \"-90deg\" : \"90deg\" },\r\n  ];\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={[styles.labelContainer, { transform }]}>\r\n        <Text style={styles.label}>{props.label}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React, { useRef } from \"react\";\r\nimport { Dimensions, Platform, StyleSheet, View } from \"react-native\";\r\nimport Animated, { multiply } from \"react-native-reanimated\";\r\nimport { interpolateColor, onScrollEvent, useValue } from \"react-native-redash\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { _appState } from \"../../../redux/rootReducer\";\r\nimport { MainRouterStackParamList } from \"../../../routers/MainRouter\";\r\nimport { WelcomeFooterSlide } from \"./WelcomeFooterSlide\";\r\nimport { WelcomeSlide } from \"./WelcomeSlide\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nconst BORDER_RADIUS = 75;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    backgroundColor: \"white\",\r\n  },\r\n  slideContainer: {\r\n    flex: 0.6,\r\n    backgroundColor: \"cyan\",\r\n    borderBottomRightRadius: BORDER_RADIUS,\r\n  },\r\n  footer: { flex: 0.4 },\r\n  footerContent: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"white\",\r\n    borderTopLeftRadius: BORDER_RADIUS,\r\n  },\r\n});\r\n\r\nconst slides = [\r\n  {\r\n    label: \"Relaxed\",\r\n    color: \"#BFEAF5\",\r\n    footerContent: {\r\n      title: \"Relaxed\",\r\n      description:\r\n        \"Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Playful\",\r\n    color: \"#BEECC4\",\r\n    footerContent: {\r\n      title: \"Playful\",\r\n      description:\r\n        \"Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Excentric\",\r\n    color: \"#FFE4D9\",\r\n    footerContent: {\r\n      title: \"Excentric\",\r\n      description:\r\n        \"Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Funky\",\r\n    color: \"#FFDDDD\",\r\n    footerContent: {\r\n      title: \"Funky\",\r\n      description:\r\n        \"Neque porro quisquam est qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit...\",\r\n    },\r\n  },\r\n];\r\n\r\ntype navigationProp_t = StackNavigationProp<MainRouterStackParamList, \"onboarding\">;\r\ntype routeProp_t = RouteProp<MainRouterStackParamList, \"onboarding\">;\r\n\r\ninterface props_t {\r\n  navigation: navigationProp_t;\r\n  route: routeProp_t;\r\n}\r\n\r\nexport const WelcomeScreen = ({ navigation }: props_t) => {\r\n  const dispatch = useDispatch();\r\n  const appCTX = useSelector<_appState>(({ appCTXReducer: { appCTX } }) => appCTX);\r\n  const scroll = useRef(null);\r\n  const x = useValue(0);\r\n  const onScroll = onScrollEvent({ x });\r\n  const backgroundColor: any = interpolateColor(x, {\r\n    inputRange: slides.map((_, i) => i * width),\r\n    outputRange: slides.map((slide) => slide.color),\r\n  });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Animated.View style={[styles.slideContainer, { backgroundColor }]}>\r\n        <Animated.ScrollView\r\n          ref={scroll}\r\n          horizontal\r\n          snapToInterval={width}\r\n          decelerationRate=\"fast\"\r\n          showsHorizontalScrollIndicator={false}\r\n          bounces={false}\r\n          scrollEventThrottle={1}\r\n          {...{ onScroll }}\r\n        >\r\n          {slides.map(({ label }, index) => (\r\n            <WelcomeSlide key={index} right={!!(index % 2)} {...{ label }} />\r\n          ))}\r\n        </Animated.ScrollView>\r\n      </Animated.View>\r\n      <View style={styles.footer}>\r\n        <Animated.View\r\n          style={{ ...StyleSheet.absoluteFillObject, backgroundColor }}\r\n        />\r\n        <Animated.View\r\n          style={[\r\n            styles.footerContent,\r\n            {\r\n              width: width * slides.length,\r\n              transform: [{ translateX: multiply(x, -1) }],\r\n            },\r\n          ]}\r\n        >\r\n          {slides.map(({ footerContent }, index) => (\r\n            <WelcomeFooterSlide\r\n              key={index}\r\n              onPress={async () => {\r\n                if (Platform.OS == \"web\") {\r\n                  navigation.replace(\"user\");\r\n                } else\r\n                  if (scroll?.current && slides.length - 1 != index) {\r\n                    try {\r\n                      //@ts-ignore\r\n                      scroll.current.getNode().scrollTo({ x: width * (index + 1), animated: true });\r\n                      console.log(\"index is = \" + index)\r\n                    } catch (error) { }\r\n                  } else if (slides.length - 1 == index) {\r\n                    navigation.replace(\"user\");\r\n                  }\r\n              }}\r\n              /*  onPress={() => {\r\n                 reduxStore.store.dispatch(reduxStore.actions.appCTX.userRedux({ user: { userName: \"test_user 2\", email: \"testmail@gmail.com\", ts: 0 }, log: (s) => { console.log(\"[REDUX TEST]\" + s) } }))\r\n               }} */\r\n              last={index === slides.length - 1}\r\n              {...{ footerContent }}\r\n            />\r\n          ))}\r\n        </Animated.View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Alert, Dimensions, Image, Linking, Platform, StyleSheet, Text, View } from \"react-native\";\r\nimport { PairingStackParamList } from \"..\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LottieView from \"lottie-react-native\";\r\n//native imports\r\nimport api from \"../../../../services/api\";\r\nimport { logFun, logger } from \"../../../../util/logger\";\r\nimport { getCurrentTimeInSeconds } from \"expo-auth-session/build/TokenRequest\";\r\n\r\n\r\n\r\ntype pairingScreen1NavigationProp = StackNavigationProp<PairingStackParamList, \"PairScreen_1\">;\r\ntype pairingScreen1RouteProp = RouteProp<PairingStackParamList, \"PairScreen_1\">;\r\n\r\ninterface Props {\r\n  navigation: pairingScreen1NavigationProp;\r\n  route: pairingScreen1RouteProp;\r\n}\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nexport const PairingConnectorScreen1 = ({ navigation }: Props) => {\r\n  const log = new logger(\"PAIRING_SCREEN_1\")\r\n  const [groupName, setGroupName] = useState(\"BedRoom\");\r\n  const dispatch = useDispatch();\r\n  let _animation = null;\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      const res = await api.deviceAPI.authAPI.v1({ IP: \"192.168.4.1\", log: log ? new logger(\"auth api\", log) : undefined })\r\n      console.log(\"<><><> \" + JSON.stringify(res))\r\n      if (res.RES?.Mac) {\r\n        clearInterval(interval)\r\n        console.log(\"navigating to next screen - screen-2\")\r\n        navigation.replace(\"PairScreen_2\", { newDevice: { ...res.RES, localTimeStamp: getCurrentTimeInSeconds(), IP: \"192.168.4.1\", hsv: { h: 0, s: 100, v: 100 }, deviceName: \"\", timers: [] } });\r\n      }\r\n\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <View style={styles.container}>\r\n        <View\r\n          style={{\r\n            marginVertical: 20,\r\n            backgroundColor: \"#55f\",\r\n            height: 0.25 * height,\r\n            width: \"95%\",\r\n            alignSelf: \"center\",\r\n            borderRadius: 25,\r\n            justifyContent: \"space-evenly\",\r\n            alignItems: \"center\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n\r\n          <Image\r\n            style={{\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              opacity: 0.8,\r\n            }}\r\n            source={require(\"../../../../../assets/images/testIMG.jpg\")}\r\n          />\r\n          <RectButton\r\n            style={{\r\n              height: 40,\r\n              minWidth: 160,\r\n              paddingHorizontal: 1,\r\n              borderRadius: 25,\r\n              overflow: \"hidden\",\r\n              justifyContent: \"center\",\r\n              position: \"absolute\",\r\n              bottom: 20,\r\n              right: 20,\r\n            }}\r\n            onPress={async () => {\r\n              const supported = await Linking.canOpenURL(\"App-Prefs:root=WIFI\");\r\n              if (supported) {\r\n                await Linking.openURL(\"App-Prefs:root=WIFI\");\r\n              } else {\r\n                Alert.alert(\r\n                  `Jump not Supported`,\r\n                  \"You might want to try switching the HUElite app in background and then go to WiFi Settings \"\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                height: 40,\r\n                minWidth: 160,\r\n                paddingHorizontal: 1,\r\n                position: \"absolute\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: 25,\r\n                opacity: 0.7,\r\n                top: 0,\r\n                left: 0,\r\n              }}\r\n            ></View>\r\n            <Text\r\n              style={{ fontSize: 12, fontWeight: \"bold\", alignSelf: \"center\" }}\r\n            >\r\n              Go to Wi-Fi Settings\r\n            </Text>\r\n          </RectButton>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: \"#fff\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {Platform.OS != \"web\" && <LottieView\r\n            ref={(animation) => {\r\n              _animation = animation;\r\n            }}/* \r\n            style={{\r\n              width: width * 0.8,\r\n              height: width * 0.8,\r\n              backgroundColor: \"#fff\",\r\n            }} */\r\n            source={require(\"../../../../../assets/lottie/scanning.json\")}\r\n            autoPlay\r\n            loop={true}\r\n          //progress={progress}\r\n          />}\r\n        </View>\r\n        {/*/// Text Section */}\r\n        <View\r\n          style={{ backgroundColor: \"#fff\", justifyContent: \"center\", marginTop: 20, marginBottom: 10 }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              textAlign: \"center\",\r\n              color: \"#555\",\r\n              paddingHorizontal: 30,\r\n            }}\r\n          >\r\n            Conect to HUElite Device to proceed\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              color: \"#333\",\r\n              paddingHorizontal: 30,\r\n              marginTop: 10,\r\n              textAlign: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            To proceed with pairing you must connect your phone to HUElite\r\n            Device WiFi network. Go-to your\r\n            phone Wi-Fi Settings and connect to Wi-Fi naming{\" \"}\r\n            <Text style={{ fontWeight: \"bold\" }}>HUE_XXXX_XX:XX</Text>\r\n            {\" \"}with password{\" \"}\r\n            <Text style={{ fontWeight: \"bold\" }}>12345678</Text>\r\n          </Text>\r\n        </View>\r\n        {/* ///goBACK button */}\r\n        <View\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {navigation.canGoBack() && <RectButton\r\n            style={{\r\n              overflow: \"hidden\",\r\n              alignSelf: \"flex-start\",\r\n              marginBottom: 10,\r\n            }}\r\n            onPress={() => {\r\n              /* TODO_CUR dispatch(\r\n                newDeviceSagaAction(\r\n                  Object.assign({}, dummyDevice, {\r\n                    SSID: \"Homelink1\",\r\n                    wifiPass: \"Ioplmkjnb@1\",\r\n                    Mac: \"ED:98:FF:46:FF\",\r\n                    groupName: groupName.length > 3 ? groupName : null,\r\n                  })\r\n                )\r\n              ); */\r\n              navigation.pop();\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: 17,\r\n                fontWeight: \"bold\",\r\n                alignSelf: \"flex-start\",\r\n                marginLeft: 20,\r\n                color: \"#66F\",\r\n              }}\r\n            >\r\n              Go Back\r\n            </Text>\r\n          </RectButton>}\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { logger } from \"../../util/logger\";\r\nimport api from \"../api\";\r\n\r\ninterface userScanApiHelper_props {\r\n  timeout?: number\r\n  autoStart?: boolean\r\n  log?: logger\r\n}\r\ntype userScanApiHelper_t = (props: userScanApiHelper_props) => [\r\n  api.deviceAPI.scanAPI.ScanApiReturnType | undefined,\r\n  number,\r\n  boolean,\r\n  boolean, () => Promise<void>\r\n]\r\nconst useScanApiHook: userScanApiHelper_t = ({ timeout = 0, autoStart, log }) => {\r\n  const [data, setData] = useState<api.deviceAPI.scanAPI.ScanApiReturnType | undefined>(undefined);\r\n  const [status, setStatus] = useState(-4);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  log?.print(\"---------------\")\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      log?.print(\"data is -- \" + JSON.stringify(data))\r\n      if (data.RES?.status == -2) {\r\n        log?.print(\"wifi started scanning, wait for 5 sec\")\r\n        setTimeout(() => {\r\n          load()\r\n        }, 3000);\r\n      }\r\n      else if (data.RES?.status == -1) {\r\n        log?.print(\"wifi currently scanning, wait for few sec and try again\")\r\n        setTimeout(() => {\r\n          load()\r\n        }, 3000);\r\n      }\r\n    }\r\n    if (autoStart && !data) {\r\n      load()\r\n    }\r\n    return () => { }\r\n  }, [data])\r\n\r\n  async function load() {\r\n    log?.print(\"hitting scan api request\")\r\n    const res = await api.deviceAPI.scanAPI.v1({ IP: \"192.168.4.1\", log: log ? new logger(\"pair-API\", log) : undefined })\r\n    log?.print(\"RES - scanAPI \" + JSON.stringify(res, null, 2))\r\n    setData(res)\r\n  }\r\n\r\n  return [data, status, loading, error, load];\r\n};\r\n\r\n\r\nexport default useScanApiHook","import { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, Dimensions, FlatList, StyleSheet, Text, Vibration, View } from \"react-native\";\r\nimport { RectButton, TextInput } from \"react-native-gesture-handler\";\r\nimport Animated, { add, call, divide, interpolate, round, useCode } from \"react-native-reanimated\";\r\nimport { onScrollEvent, useValue } from \"react-native-redash\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { PairingStackParamList } from \"..\";\r\nimport { reduxStore } from \"../../../../redux\";\r\nimport useScanApiHook from \"../../../../services/webApi/webHooks\";\r\nimport { appOperator } from \"../../../../util/app.operator\";\r\nimport { getCurrentTimeStampInSeconds } from \"../../../../util/DateTimeUtil\";\r\nimport { logger } from \"../../../../util/logger\";\r\n\r\nconst deviceNames = [\r\n  \"Bedroom Light\",\r\n  \"Kitchen\",\r\n  \"Garden Light\",\r\n  \"Balcony\",\r\n  \"SwimmingPool\",\r\n];\r\n\r\ntype pairingScreen2NavigationProp = StackNavigationProp<\r\n  PairingStackParamList,\r\n  \"PairScreen_2\"\r\n>;\r\n\r\ntype pairingScreen2RouteProp = RouteProp<PairingStackParamList, \"PairScreen_2\">;\r\n\r\ninterface Props {\r\n  navigation: pairingScreen2NavigationProp;\r\n  route: pairingScreen2RouteProp;\r\n}\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nexport const PairingConnectorScreen2 = ({\r\n  navigation,\r\n  route: {\r\n    params: { newDevice },\r\n  },\r\n}: Props) => {\r\n  const log = new logger(\"PAIRING_SCREEN_2\");\r\n  const [data, status, loading, error, load] = useScanApiHook({\r\n    log: log ? new logger(\"scan API Hook\", log) : undefined,\r\n    autoStart: true\r\n  });\r\n  const debug = true;\r\n  const [Wifi, setWifi] = useState(\"\");\r\n  const [deviceName, setDeviceName] = useState(\"\");\r\n  const y = useValue(0);\r\n  const onScroll = onScrollEvent({ y });\r\n  const selected = round(divide(y, 60));\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useCode(\r\n    () => [\r\n      call([selected], ([selected]) => {\r\n        if (data?.RES?.networks && data?.RES?.networks[selected]) {\r\n          if (Wifi != data?.RES?.networks[selected].ssid) {\r\n            log.print(\"-- \" + data?.RES?.networks[selected].ssid);\r\n            setWifi(data?.RES?.networks[selected].ssid);\r\n            Vibration.vibrate(25);\r\n          }\r\n        }\r\n      }),\r\n    ],\r\n    [selected]\r\n  );\r\n\r\n  const validateNewDeviceData = (opID: \"PAIR\" | \"SKIP\") => {\r\n\r\n    const validateDeviceName = () => {\r\n      if (deviceName.length < 6) {\r\n        Alert.alert(\r\n          \"DEVICE NAME LENGTH !!\",\r\n          \"device length must be atleast 6 characters\",\r\n          [\r\n            {\r\n              text: \"Got it\",\r\n              //onPress: () => console.log(\"Cancel Pressed\"),\r\n              style: \"cancel\",\r\n            },\r\n          ],\r\n          { cancelable: false }\r\n        );\r\n        return false\r\n      } else if ((() => {\r\n        let sameDeviceNameFound = false\r\n        reduxStore.store.getState().deviceReducer.deviceList.forEach((__device) => {\r\n          if (__device.deviceName == deviceName)\r\n            sameDeviceNameFound = true\r\n        })\r\n        return sameDeviceNameFound\r\n      })()) {\r\n        log.print(\"validating device name >>\")\r\n        Alert.alert(\r\n          \"DUPLICATE DEVICE NAME\",\r\n          \"device name  \\\"\" + deviceName + \"\\\", try another name for this device\",\r\n          [\r\n            {\r\n              text: \"Got it\",\r\n              //onPress: () => console.log(\"Cancel Pressed\"),\r\n              style: \"cancel\",\r\n            },\r\n          ],\r\n          { cancelable: false }\r\n        );\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n\r\n    const validateWiFi = () => {\r\n      if (!Wifi.length) {\r\n        Alert.alert(\r\n          \"No WiFi Selected !!\",\r\n          \"Select a network to pair with, else continue without pairing at the bottom of the screen.\",\r\n          [\r\n            {\r\n              text: \"Got it\",\r\n              style: \"cancel\",\r\n            },\r\n          ],\r\n          { cancelable: false }\r\n        );\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n\r\n    switch (opID) {\r\n      case \"PAIR\":\r\n        return validateDeviceName() && validateWiFi()\r\n        break;\r\n\r\n      case \"SKIP\":\r\n        return validateDeviceName()\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  interface onInteraction_t {\r\n    opID: \"PAIR\" | \"SKIP\"\r\n  }\r\n  const onInteraction = async ({ opID }: onInteraction_t) => {\r\n    switch (opID) {\r\n      case \"PAIR\":\r\n        log.print(\"now pairing\")\r\n        if (validateNewDeviceData(\"PAIR\")) {\r\n          navigation.replace(\"PairScreen_3\", { newDevice: { ...newDevice, ssid: Wifi, deviceName } });\r\n        }\r\n        break;\r\n\r\n      case \"SKIP\":\r\n        log.print('SKIP LOGIN')\r\n        if (validateNewDeviceData(\"SKIP\")) {\r\n          log.print(\"validation passed, adding new device without pairing\")\r\n          const newContainerList = appOperator.device({ cmd: \"ADD_UPDATE_DEVICES\", newDevices: [{ ...newDevice, deviceName, localTimeStamp: getCurrentTimeStampInSeconds() }] })\r\n          console.log(\"updated conatiner list >> >> \" + JSON.stringify(newContainerList))\r\n          //@ts-ignore\r\n          navigation.replace(\"dashboard\");\r\n          navigation.reset({\r\n            index: 0,\r\n            //@ts-ignore\r\n            routes: [{ name: \"dashboard\" }],\r\n          });\r\n        }\r\n        else {\r\n          log.print(\"validation failed\")\r\n\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.conatiner}>\r\n\r\n      {/* Sec: HeaderContainer */}\r\n      <View style={styles.headerContainer} >\r\n        <Text style={{ fontSize: 12, fontWeight: \"bold\", color: \"white\" }}>\r\n          Enter Device Name\r\n          </Text>\r\n        <TextInput\r\n          style={styles.headerContainerText}\r\n          placeholderTextColor=\"#ccc\"\r\n          onChangeText={(text) => {\r\n            setDeviceName(text);\r\n          }}\r\n          placeholder=\"Light 1\"\r\n          value={deviceName}\r\n        />\r\n        <View\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            marginTop: 30,\r\n          }}\r\n        >\r\n          <FlatList\r\n            data={deviceNames}\r\n            numColumns={3}\r\n            renderItem={({ item }) => (\r\n              <RectButton\r\n                onPress={() => {\r\n                  setDeviceName(item);\r\n                  //Vibration.vibrate(50); //TODO move this to useCode/call function for better feedback\r\n                }}\r\n                style={{ alignSelf: \"flex-start\", padding: 5 }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    borderWidth: 0.5,\r\n                    borderColor: \"#fff\",\r\n                    borderRadius: 18,\r\n                    paddingHorizontal: 10,\r\n                    paddingVertical: 5,\r\n                    backgroundColor: deviceName == item ? \"#fff\" : \"#55f\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 12,\r\n                      color: deviceName == item ? \"#55f\" : \"#fff\",\r\n                    }}\r\n                  >\r\n                    {item}\r\n                  </Text>\r\n                </View>\r\n              </RectButton>\r\n            )}\r\n            keyExtractor={(item, index) => index.toString()}\r\n          />\r\n        </View>\r\n      </View>\r\n      {/* Sec: SSID Selector */}\r\n      <View style={styles.ssidSelectorContainer}  >\r\n        <Text style={{ fontSize: 15, fontWeight: \"bold\", color: \"#555\" }}>\r\n          Select your Home Wi-Fi Network\r\n          </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: 12,\r\n            color: \"#555\",\r\n            paddingTop: 10,\r\n            paddingHorizontal: 30,\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Make sure the WiFi is on and your device is in range of the network.\r\n          If you don't find your network in list than refresh from below\r\n          </Text>\r\n        {/* Sec: Wifi refresh button */}\r\n        <RectButton\r\n          style={styles.refreshButton}\r\n          onPress={() => {\r\n            log.print(\"refresh wifi scan api response\")\r\n            load()\r\n            Vibration.vibrate(50);\r\n          }}\r\n        >\r\n          <View style={styles.refreshButton_textCon} >\r\n            <Text style={{ fontSize: 10, fontWeight: \"bold\", color: \"#55f\" }}>\r\n              Refresh WiFi Scan\r\n              </Text>\r\n          </View>\r\n        </RectButton>\r\n        {/* Sec: Selector */}\r\n        <View style={styles.selectorList} >\r\n          <Animated.ScrollView\r\n            style={{\r\n              overflow: \"hidden\",\r\n            }}\r\n            snapToInterval={60}\r\n            decelerationRate=\"fast\"\r\n            showsVerticalScrollIndicator={false}\r\n            bounces={false}\r\n            scrollEventThrottle={1}\r\n            {...{ onScroll }}\r\n          >\r\n            {data?.RES?.networks && data?.RES?.networks?.length > 0 &&\r\n              data?.RES?.networks.map((item, index) => {\r\n                const positionY = add(y, -index * 60);\r\n                const opacity = interpolate(positionY, {\r\n                  inputRange: [-60, 0, 60],\r\n                  outputRange: [0.5, 1, 0.5],\r\n                });\r\n                const scale = interpolate(positionY, {\r\n                  inputRange: [-60, 0, 60],\r\n                  outputRange: [0.7, 1, 0.7],\r\n                });\r\n\r\n                return (\r\n                  <View key={index}>\r\n                    {index == 0 && <View style={{ height: 60 }}></View>}\r\n                    <View\r\n                      style={{\r\n                        height: 60,\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <Animated.Text\r\n                        style={{\r\n                          fontSize: 20,\r\n                          color: \"#555\",\r\n                          fontWeight: \"bold\",\r\n                          opacity: opacity,\r\n                          transform: [{ scaleX: scale }, { scaleY: scale }],\r\n                        }}\r\n                      >\r\n                        {item.ssid}\r\n                      </Animated.Text>\r\n                    </View>\r\n                    {(data?.RES?.networks && index == data?.RES?.networks?.length - 1) && (\r\n                      <View style={{ height: 60 }}></View>\r\n                    )}\r\n                  </View>\r\n                );\r\n              })}\r\n\r\n            {(data?.RES?.networks && data?.RES?.networks.length == 0) && (\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  height: 180,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 30,\r\n                    color: \"#555\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Scanning...\r\n                  </Text>\r\n              </View>\r\n            )}\r\n          </Animated.ScrollView>\r\n        </View>\r\n      </View>\r\n      {debug && <Text style={{}}>{Wifi}</Text>}\r\n      {/* Sec: Bottom buttons */}\r\n      <RectButton\r\n        style={[styles.pairButton, { opacity: deviceName.length > 6 ? 1 : 0.9, }]}\r\n        onPress={() => onInteraction({ opID: \"PAIR\" })}>\r\n        <Text style={{ fontSize: 20, fontWeight: \"bold\", color: \"#fff\" }}>\r\n          Pair Device\r\n          </Text>\r\n      </RectButton>\r\n      <RectButton\r\n        style={styles.skipButton}\r\n        onPress={() => onInteraction({ opID: \"SKIP\" })}\r\n      >\r\n        <Text style={{ fontSize: 12, fontWeight: \"bold\", color: \"#555\" }}>\r\n          Continue without Wi-Fi Pairing\r\n          </Text>\r\n      </RectButton>\r\n    </SafeAreaView >\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  conatiner: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n\r\n  },\r\n  ssidSelectorContainer: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n    flex: 1,\r\n    paddingTop: 50,\r\n  },\r\n  refreshButton: {\r\n    borderRadius: 15,\r\n    overflow: \"hidden\",\r\n    marginVertical: 15,\r\n  },\r\n  refreshButton_textCon: {\r\n    backgroundColor: \"#fff\",\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 8,\r\n    borderRadius: 15,\r\n    borderColor: \"#55f\",\r\n    borderWidth: 1,\r\n  },\r\n  selectorList: {\r\n    width: \"100%\",\r\n    height: 180,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n    marginTop: 10,\r\n  },\r\n  headerContainer: {\r\n    paddingHorizontal: 15,\r\n    backgroundColor: \"#55f\",\r\n    width: \"95%\",\r\n    minHeight: 200,\r\n    marginVertical: 20,\r\n    borderRadius: 25,\r\n    paddingVertical: 20,\r\n  },\r\n  headerContainerText: {\r\n    height: 50,\r\n    width: \"100%\",\r\n    borderColor: \"#ffffff\",\r\n    color: \"#ffffff\",\r\n    /*  borderWidth: 1,\r\n    borderRadius: 25, */\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"left\",\r\n    alignSelf: \"center\",\r\n    marginTop: 5,\r\n    borderBottomWidth: 0.5,\r\n  },\r\n  skipButton: {\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n    backgroundColor: \"#fff\",\r\n    paddingVertical: 10,\r\n    width: width * 0.8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 25,\r\n  },\r\n  pairButton: {\r\n    backgroundColor: \"#55f\",\r\n    height: 50,\r\n    width: width * 0.8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 25,\r\n  }\r\n})\r\n","import { useEffect, useState } from \"react\";\r\nimport UNIVERSALS from \"../../@universals\";\r\nimport { logger } from \"../../util/logger\";\r\nimport api from \"../api\";\r\nimport { deviceSocketHBResponse, getWebSocket } from \"../backGroundServices/webSocket\";\r\n\r\nexport enum pairing_state_e {\r\n  IDLE,\r\n  PAIR_READY,\r\n  PAIR_REQUEST_SUCCESS_N_CONNECTING,\r\n  PAIR_UNKNOWN_ERROR,\r\n  PAIR_SUCCESS,\r\n  PAIR_WRONG_PASSWORD,\r\n  PAIR_NO_SSID,\r\n  SAVE_CONFIG_SUCCESS,\r\n  SAVE_CONFIG_ERROR\r\n}\r\ntype connectProps = (ssid: string, pass: string) => Promise<void>;\r\n\r\ninterface Props {\r\n  (_props: {\r\n    IP: string,\r\n    _onMsg: (msg: string) => void,\r\n    log?: logger\r\n  })\r\n    : [\r\n      api.deviceAPI.pairAPI.pairApiReturnType | undefined,\r\n      WebSocket | undefined,\r\n      connectProps,\r\n      pairing_state_e,\r\n      () => Promise<void>\r\n    ];\r\n}\r\nconst usePairApiHook: Props = ({ IP: IP_ADD, _onMsg, log }) => {\r\n  const [data, setData] = useState<api.deviceAPI.pairAPI.pairApiReturnType | undefined>(undefined);\r\n  const [pairStatus, setPairStatus] = useState<pairing_state_e>(pairing_state_e.IDLE);\r\n  const [socket, setSocket] = useState<WebSocket | undefined>(undefined);\r\n\r\n\r\n  useEffect(() => {\r\n    log?.print(\"--------*\")\r\n    let interval: any\r\n    if (!socket) {\r\n      log?.print(\"--------getSocket() interval start\")\r\n      interval = setInterval(() => {\r\n        log?.print(\"--\")\r\n        getSocket()\r\n      }, 5500)\r\n    }\r\n    else {\r\n      log?.print(\"--------getSocket() interval end\")\r\n      log?.print(\"we have socket\")\r\n      clearInterval(interval)\r\n    }\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [socket])\r\n\r\n  const pair: connectProps = async (ssid, pass) => {\r\n    log?.print(\"Pair Credentials are \" + ssid + \" -- \" + pass);\r\n    if (pairStatus == pairing_state_e.PAIR_READY\r\n      || pairStatus == pairing_state_e.PAIR_WRONG_PASSWORD\r\n      || pairStatus == pairing_state_e.PAIR_UNKNOWN_ERROR\r\n      || pairStatus == pairing_state_e.PAIR_NO_SSID) {\r\n      const result = await api.deviceAPI.pairAPI.v1({ IP: \"192.168.4.1\", ssid, pass, log: log ? new logger(\"pair api\", log) : undefined })\r\n      log?.print(\"-result- RES - \" + JSON.stringify(result))\r\n      if (result.RES?.Mac)\r\n        setPairStatus(pairing_state_e.PAIR_REQUEST_SUCCESS_N_CONNECTING)\r\n      setData(result)\r\n    }\r\n  }\r\n\r\n  const hitSaveAPI = async () => {\r\n    const res = await api.deviceAPI.saveWiFiConfigAPI.v1({ IP: \"192.168.4.1\" })\r\n    log?.print(\"save api RES - \" + JSON.stringify(res))\r\n    if (res.RES == \"RES-551\") {\r\n      setPairStatus(pairing_state_e.SAVE_CONFIG_SUCCESS)\r\n    } else {\r\n      setPairStatus(pairing_state_e.SAVE_CONFIG_ERROR)\r\n    }\r\n  }\r\n\r\n\r\n  const getSocket = async () => {\r\n    if (!socket) {\r\n      log?.print(\"getting socket\");\r\n      let result = await api.deviceAPI.authAPI.v1({ IP: \"192.168.4.1\" })\r\n      if (result?.RES?.Mac) {\r\n        log?.print(\"Auth success :: \" + result.RES.Mac);\r\n      } else {\r\n        setSocket(undefined)\r\n      }\r\n      try {\r\n        const _socket = await getWebSocket({\r\n          ipAddr: IP_ADD,\r\n          onOpen: () => {\r\n            log?.print(\"WS Connected for Devie >> \" + IP_ADD);\r\n            setPairStatus(pairing_state_e.PAIR_READY)\r\n            if (_socket)\r\n              setSocket(_socket)\r\n          },\r\n          onMsg: (msg) => {\r\n            try {\r\n              const data: api.deviceAPI.pairAPI.pairApiRes_i | undefined = msg\r\n                ? JSON.parse(msg)\r\n                : undefined;\r\n              log?.print(\"SOCKET MSG >> \" + JSON.stringify(data))\r\n              if (data?.WIFI_STATE == UNIVERSALS.GLOBALS.deviceApi._DEVICE_WIFI_STATE_e.DEVICE_WL_CONNECT_FAILED && pairStatus != pairing_state_e.PAIR_WRONG_PASSWORD)\r\n                setPairStatus(pairing_state_e.PAIR_WRONG_PASSWORD)\r\n              else if (data?.WIFI_STATE == UNIVERSALS.GLOBALS.deviceApi._DEVICE_WIFI_STATE_e.DEVICE_WL_NO_SSID_AVAIL)\r\n                setPairStatus(pairing_state_e.PAIR_NO_SSID)\r\n              else if (data?.WIFI_STATE == UNIVERSALS.GLOBALS.deviceApi._DEVICE_WIFI_STATE_e.DEVICE_WL_CONNECTED && data.IP?.length) {\r\n                setPairStatus(pairing_state_e.PAIR_SUCCESS)\r\n                setData({ RES: data })\r\n              }\r\n            } catch (error) {\r\n              log?.print(error);\r\n            }\r\n            _onMsg(msg);\r\n          },\r\n          onErr: (e) => {\r\n            log?.print(\"Ws Error - \" + JSON.stringify(e));\r\n            setPairStatus(pairing_state_e.IDLE)\r\n            setSocket(undefined);\r\n          },\r\n          onClose: () => {\r\n            setPairStatus(pairing_state_e.IDLE)\r\n            setSocket(undefined);\r\n          },\r\n        });\r\n      } catch (e) {\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return [\r\n    data,\r\n    socket,\r\n    pair,\r\n    pairStatus,\r\n    hitSaveAPI\r\n  ];\r\n};\r\n\r\nexport default usePairApiHook;\r\n","import { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport LottieView from \"lottie-react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Dimensions, FlatList, StyleSheet, Text, Vibration, View } from \"react-native\";\r\nimport { RectButton, TextInput } from \"react-native-gesture-handler\";\r\nimport Animated, { Value } from \"react-native-reanimated\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n//native imports\r\nimport { PairingStackParamList } from \"..\";\r\nimport usePairApiHook, { pairing_state_e } from \"../../../../services/webApi/pairAPI_Hook\";\r\nimport { appOperator } from \"../../../../util/app.operator\";\r\nimport { getCurrentTimeStampInSeconds } from \"../../../../util/DateTimeUtil\";\r\nimport { logger } from \"../../../../util/logger\";\r\n\r\nconst groupNames = [\"Bedroom\", \"Kitchen\", \"Garden\", \"Drawing Lamps\", \"Stairs\"];\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\ntype NavigationProp = StackNavigationProp<\r\n  PairingStackParamList,\r\n  \"PairScreen_3\"\r\n>;\r\n\r\ntype _RouteProp = RouteProp<PairingStackParamList, \"PairScreen_3\">;\r\n\r\n\r\ninterface Props {\r\n  navigation: NavigationProp;\r\n  route: _RouteProp;\r\n}\r\n\r\nexport const PairingConnectorScreen3 = ({\r\n  navigation,\r\n  route: {\r\n    params: { newDevice },\r\n  },\r\n}: Props) => {\r\n  const log = new logger(\"PAIRING_SCREEN_3\")\r\n  const [pass, setPass] = useState(\"Ioplmkjnb@1\");\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  let _animation = null;\r\n  const [data, socket, pair, pairStatus, hitSaveAPI] = usePairApiHook({\r\n    IP: \"192.168.4.1\",\r\n    _onMsg: (msg) => {\r\n      //console.log(\"socket msg on Pairing Screen---- \" + JSON.stringify(msg));\r\n    },\r\n    log: log ? new logger(\"pairing hook\", log) : undefined\r\n  });\r\n\r\n  const validateData = () => {\r\n    if (!newDevice.ssid)\r\n      return false\r\n    return true\r\n  }\r\n\r\n  interface onInteraction_t { opID: \"PAIR\" | \"BACK\" | \"SAVE_CONF\" }\r\n  const onInteraction = ({ opID }: onInteraction_t) => {\r\n    switch (opID) {\r\n      case \"BACK\":\r\n        navigation.replace(\"PairScreen_2\", { newDevice });\r\n        break;\r\n\r\n      case \"PAIR\":\r\n        if (validateData())\r\n          //@ts-ignore varified _newDevice.ssid_ in _validateData_\r\n          pair(newDevice.ssid, pass);\r\n        break;\r\n\r\n      case \"SAVE_CONF\":\r\n        hitSaveAPI()\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (pairStatus == pairing_state_e.PAIR_READY)\r\n      Vibration.vibrate(250)\r\n    else if (pairStatus == pairing_state_e.PAIR_SUCCESS) {\r\n      console.log(\"paired successfully \" + JSON.stringify(data, null, 2));\r\n    } else if (pairStatus == pairing_state_e.SAVE_CONFIG_SUCCESS) {\r\n      (async () => {\r\n        if (data?.RES?.IP) {\r\n          appOperator.device({ cmd: \"ADD_UPDATE_DEVICES\", newDevices: [{ ...newDevice, IP: data.RES.IP, ssid: newDevice.ssid, localTimeStamp: getCurrentTimeStampInSeconds() }] })\r\n          //@ts-ignore\r\n          navigation.replace(\"dashboard\")\r\n          //@ts-ignore\r\n          navigation.reset({ index: 0, routes: [{ name: \"dashboard\" }], })\r\n        } else {\r\n        }\r\n      })()\r\n    } else if (pairStatus == pairing_state_e.SAVE_CONFIG_ERROR) { }\r\n    return () => { }\r\n  }, [pairStatus, data])\r\n\r\n\r\n  return (\r\n    <SafeAreaView style={styles.\r\n      container}>\r\n      {/* Sec: HEADER */}\r\n      <Animated.View\r\n        style={[\r\n          styles.card,\r\n          {\r\n            backgroundColor: \"#55f\",\r\n            width: width * 0.95,\r\n            minHeight: 150,\r\n            alignSelf: \"center\",\r\n            marginVertical: 20,\r\n            borderRadius: 25,\r\n          },\r\n        ]}\r\n      >\r\n        {/* Sec: BLOCK => WiFi Password */}\r\n        <View\r\n          style={{\r\n            paddingHorizontal: 15,\r\n            width: \"100%\",\r\n            borderRadius: 25,\r\n            paddingVertical: 20,\r\n          }}\r\n        >\r\n          <Text style={{ fontSize: 12, fontWeight: \"bold\", color: \"white\" }}>\r\n            Enter WiFi Password\r\n          </Text>\r\n          <TextInput\r\n            style={{\r\n              height: 50,\r\n              width: \"100%\",\r\n              borderColor: \"#ffffff\",\r\n              color: \"#ffffff\",\r\n              fontSize: 18,\r\n              fontWeight: \"bold\",\r\n              textAlign: \"left\",\r\n              alignSelf: \"center\",\r\n              marginTop: 5,\r\n              borderBottomWidth: 0.5,\r\n            }}\r\n            secureTextEntry={true}\r\n            placeholderTextColor=\"#ccc\"\r\n            onChangeText={(text) => {\r\n              setPass(text);\r\n            }}\r\n            placeholder=\"***\"\r\n            value={pass}\r\n          />\r\n        </View>\r\n        {/* Sec: BLOCK => Group Selector */}\r\n        <View\r\n          style={{\r\n            paddingHorizontal: 15,\r\n            width: \"100%\",\r\n            borderRadius: 25,\r\n            paddingVertical: 10,\r\n          }}\r\n        >\r\n          {/* Sec: groupName TextInput */}\r\n          <TextInput\r\n            style={{\r\n              height: 50,\r\n              width: \"100%\",\r\n              borderColor: \"#ffffff\",\r\n              color: \"#ffffff\",\r\n              fontSize: 14,\r\n              textAlign: \"left\",\r\n              alignSelf: \"center\",\r\n              marginTop: 5,\r\n              borderBottomWidth: 0.5,\r\n            }}\r\n            placeholderTextColor=\"#ddd\"\r\n            onChangeText={(text) => {\r\n              setGroupName(text);\r\n            }}\r\n            placeholder=\"Create new group\"\r\n            value={groupName}\r\n          />\r\n          <Text\r\n            style={{\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              color: \"white\",\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            Suggested group names\r\n          </Text>\r\n          {/* Sec: CONTAINER => groupName suggestion blocks */}\r\n          <View\r\n            style={{\r\n              alignItems: \"flex-start\",\r\n              paddingVertical: 10,\r\n            }}\r\n          >\r\n            {/* Sec: groupName suggestion blocks */}\r\n            <FlatList\r\n              horizontal\r\n              data={groupNames}\r\n              //numColumns={6}\r\n              renderItem={({ item }) => (\r\n                <RectButton\r\n                  onPress={() => {\r\n                    setGroupName(item);\r\n                    Vibration.vibrate(50);\r\n                  }}\r\n                  style={{ alignSelf: \"flex-start\", padding: 5 }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      borderWidth: 0.5,\r\n                      borderColor: \"#fff\",\r\n                      borderRadius: 18,\r\n                      paddingHorizontal: 10,\r\n                      paddingVertical: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontSize: 12, color: \"#fff\" }}>{item}</Text>\r\n                  </View>\r\n                </RectButton>\r\n              )}\r\n              keyExtractor={(item, index) => index.toString()}\r\n            />\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n\r\n      {/* Sec: LOTTIE Section */}\r\n      <View\r\n        style={{ width: \"100%\", backgroundColor: \"#fff\", alignItems: \"center\" }}\r\n      >\r\n        <LottieView\r\n          ref={(animation) => {\r\n            _animation = animation;\r\n          }}\r\n          style={{\r\n            width: width * 0.8,\r\n            height: width * 0.8,\r\n            backgroundColor: \"#fff\",\r\n          }}\r\n          source={pairStatus == pairing_state_e.PAIR_SUCCESS ? require(\"../../../../../assets/lottie/success.json\")\r\n            : pairStatus == pairing_state_e.PAIR_REQUEST_SUCCESS_N_CONNECTING ? require(\"../../../../../assets/lottie/progress.json\")\r\n              : (pairStatus == pairing_state_e.SAVE_CONFIG_ERROR || pairStatus == pairing_state_e.PAIR_NO_SSID || pairStatus == pairing_state_e.PAIR_UNKNOWN_ERROR || pairStatus == pairing_state_e.PAIR_WRONG_PASSWORD) ? require(\"../../../../../assets/lottie/error.json\")\r\n                : require(\"../../../../../assets/lottie/progress.json\")\r\n          }\r\n          autoPlay\r\n          loop={pairStatus == pairing_state_e.PAIR_SUCCESS ? false : true}\r\n        //progress={progress}\r\n        />\r\n      </View>\r\n\r\n      {/* Sec: Bottom buttons */}\r\n      <View\r\n        style={[\r\n          styles.Button1_Container,\r\n          {\r\n            backgroundColor: \"#fff\",\r\n            overflow: \"hidden\",\r\n            alignSelf: \"center\",\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            alignItems: \"center\",\r\n          },\r\n        ]}\r\n      >\r\n        {/* Sec: BUTTON => Pair || Next || Cancel || Finish */}\r\n        <RectButton\r\n          activeOpacity={0.3}\r\n          style={styles.Button1}\r\n          onPress={() => {\r\n            if (pairStatus == pairing_state_e.PAIR_SUCCESS)\r\n              onInteraction({ opID: \"SAVE_CONF\" })\r\n            else\r\n              onInteraction({ opID: \"PAIR\" })\r\n          }}\r\n        >\r\n          <Animated.Text\r\n            style={[\r\n              styles.Button1_Text,\r\n              {\r\n                color: \"#fff\",\r\n                fontSize: 20,\r\n              },\r\n            ]}\r\n          >\r\n            {pairStatus == pairing_state_e.IDLE ? \"Waiting for Connection\"\r\n              : pairStatus == pairing_state_e.PAIR_READY ? \"START PAIRING\"\r\n                : pairStatus == pairing_state_e.PAIR_REQUEST_SUCCESS_N_CONNECTING ? \"Connecting...\"\r\n                  : pairStatus == pairing_state_e.PAIR_SUCCESS ? \"Go To Dashboard\"\r\n                    : pairStatus == pairing_state_e.PAIR_NO_SSID ? \"no ssid, Try Again\"\r\n                      : pairStatus == pairing_state_e.PAIR_UNKNOWN_ERROR ? \"Try Again\"\r\n                        : pairStatus == pairing_state_e.PAIR_WRONG_PASSWORD ? \"wrong, pass, Try Again\"\r\n                          : \"\"}\r\n          </Animated.Text>\r\n        </RectButton>\r\n\r\n        {/* Sec: goBack() */}\r\n        <RectButton\r\n          style={styles.goBackButton}\r\n          onPress={() => onInteraction({ opID: \"BACK\" })}\r\n        >\r\n          <Text style={{ fontSize: 12, fontWeight: \"bold\", color: \"#555\" }}>\r\n            Change WiFi or goBack()\r\n          </Text>\r\n        </RectButton>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#ffffff\",\r\n    flex: 1,\r\n  },\r\n  card: {},\r\n  BGLayer_layout1: {\r\n    flex: 0.8,\r\n    backgroundColor: \"#5555ff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  BGLayer_layout1_TextInput: {\r\n    height: 50,\r\n    width: width * 0.8,\r\n    borderColor: \"#ffffff\",\r\n    color: \"#ffffff\",\r\n    borderWidth: 1,\r\n    borderRadius: 25,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    marginBottom: 40,\r\n    alignSelf: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  BGLayer_layout2: {\r\n    flex: 1.2,\r\n    backgroundColor: \"white\",\r\n    borderTopLeftRadius: 50,\r\n    borderTopRightRadius: 50,\r\n  },\r\n  Button1_Container: {\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n  },\r\n  Button1: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#55f\",\r\n    height: 50,\r\n    borderRadius: 25,\r\n    width: width * 0.9,\r\n  },\r\n  Button1_Text: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  Button2_Container: {\r\n    position: \"absolute\",\r\n    alignSelf: \"center\",\r\n    overflow: \"hidden\",\r\n    width: width * 0.8,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n  Button2: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n  },\r\n\r\n  Button2_Text: {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  goBackButton: {\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n    backgroundColor: \"#fff\",\r\n    paddingVertical: 10,\r\n    width: width * 0.8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 25,\r\n  }\r\n});","import React from \"react\";\r\nimport { Dimensions, StyleSheet } from \"react-native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n//native imports\r\nimport { deviceType } from \"../../../util/dummyData/DummyData\";\r\nimport { PairingConnectorScreen1 } from \"./PairingConnectorScreen1\";\r\nimport { PairingConnectorScreen2 } from \"./PairingConnectorScreen2\";\r\nimport { PairingConnectorScreen3 } from \"./PairingConnectorScreen3\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\n\r\nexport type PairingStackParamList = {\r\n  PairScreen_1: {};\r\n  PairScreen_2: { newDevice: UNIVERSALS.GLOBALS.DEVICE_t };\r\n  PairScreen_3: { newDevice: UNIVERSALS.GLOBALS.DEVICE_t };\r\n};\r\nconst Stack = createStackNavigator<PairingStackParamList>();\r\n\r\ninterface Props { }\r\n\r\nexport const pairingRouter = ({ }: Props) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"PairScreen_1\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"PairScreen_1\" component={PairingConnectorScreen1} />\r\n      <Stack.Screen name=\"PairScreen_2\" component={PairingConnectorScreen2} />\r\n      <Stack.Screen name=\"PairScreen_3\" component={PairingConnectorScreen3} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//TODO_CUR  pairing with new data setup ","import React, { useState } from 'react';\r\nimport { Alert, StyleSheet, Text, View } from 'react-native';\r\nimport { RectButton, TextInput } from 'react-native-gesture-handler';\r\nimport { appOperator } from '../../../../util/app.operator';\r\nimport { logger } from '../../../../util/logger';\r\nimport { NewRectButtonWithChildren } from '../../../common/buttons/RectButtonCustom';\r\nimport { navigationProp } from \"../index\";\r\n\r\n\r\ninterface LoginHeader_t {\r\n    navigation: navigationProp\r\n    setHeaderView?: React.Dispatch<React.SetStateAction<string>>,\r\n    log?: logger\r\n}\r\nexport const LoginHeader = ({ navigation, setHeaderView, log }: LoginHeader_t) => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n\r\n    return (\r\n        <View style={styles.headerContainer}>\r\n            <View /* Sec2: Form Container  */\r\n                style={{ flex: 1, width: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                <Text /* Sec3: Form Heading  */\r\n                    style={{\r\n                        fontSize: 20,\r\n                        fontWeight: \"bold\",\r\n                        textAlign: \"center\",\r\n                        color: \"#555\",\r\n                        paddingHorizontal: 20,\r\n                    }}\r\n                >\r\n                    Let's start with Login\r\n                </Text>\r\n                <Text /* Sec3: Form Description text  */\r\n                    style={{\r\n                        fontSize: 15,\r\n                        color: \"#555\",\r\n                        textAlign: \"center\",\r\n                        paddingVertical: 20,\r\n                        paddingHorizontal: 30,\r\n                    }}\r\n                >\r\n                    Your HUElite Account is required to setup your devices with Alexa and\r\n                    Google Assistant\r\n                </Text>\r\n                <TextInput /* Sec3: Email Input  */\r\n                    style={{\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n\r\n                    onChangeText={(text) => {\r\n                        setEmail(text);\r\n                    }}\r\n                    placeholder=\"email/userID\"\r\n                    value={email}\r\n                    autoCompleteType=\"email\"\r\n                />\r\n\r\n                <TextInput /* Sec3: Password Input  */\r\n                    style={{\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n                    onChangeText={(text) => {\r\n                        setPassword(text);\r\n                    }}\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                <NewRectButtonWithChildren /* Sec3: Login Button */\r\n                    useReanimated={false}\r\n                    onPress={async () => {\r\n                        log?.print(\"login button pressed\")\r\n                        appOperator.user({\r\n                            cmd: \"LOGIN\",\r\n                            email,\r\n                            password,\r\n                            onLoginFailed: ({ ERR }) => {\r\n                                Alert.alert(ERR?.errCode ? ERR?.errCode : \"UNKNOWN ERROR\", ERR?.errMsg ? ERR.errMsg : \"This could be due to technical error at backend, you can report the issue our forum. We regret for the inconveniences\")\r\n                            },\r\n                            onLoginSuccess: () => {\r\n                                log?.print(\"login successful>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\")\r\n                                navigation.replace(\"dashboard\")\r\n                            },\r\n                            log: log ? new logger(\"user login operator\", log) : undefined\r\n                        })\r\n                    }}\r\n                    style={{\r\n                        backgroundColor: \"#5555ff\",\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderRadius: 25,\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        elevation: 5,\r\n                    }}>\r\n                    <Text style={{ color: \"white\", fontSize: 18, fontWeight: \"bold\" }}> Login</Text>\r\n                </NewRectButtonWithChildren>\r\n            </View>\r\n            <RectButton /* Sec2: Signup Form switch button */\r\n                style={{ marginTop: \"5%\" }}\r\n                onPress={() => {\r\n                    log?.print(\"Signup button pressed\");\r\n                    setHeaderView ? setHeaderView(\"SIGNUP\") : {}\r\n                }}\r\n            >\r\n                <Text style={{\r\n                    textAlign: \"center\"\r\n                }}> Dont have an account<Text style={{\r\n                    color: \"#5555ff\",\r\n                    fontWeight: \"bold\"\r\n                }}>SignUP</Text></Text>\r\n            </RectButton>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        marginVertical: \"2%\"\r\n    },\r\n});","import React, { useState } from 'react';\r\nimport { Alert, StyleSheet, Text, View } from 'react-native';\r\nimport { RectButton, TextInput } from 'react-native-gesture-handler';\r\nimport UNIVERSALS from '../../../../@universals';\r\nimport { appOperator } from '../../../../util/app.operator';\r\nimport { logger } from '../../../../util/logger';\r\nimport { navigationProp } from \"../index\";\r\n\r\n/**\r\n * \r\n * //TODO email validation before signing up\r\n * //TODO retype pass must match before procceding\r\n */\r\ninterface SignUpHeader_t {\r\n    navigation: navigationProp\r\n    setHeaderView?: React.Dispatch<React.SetStateAction<string>>\r\n    log?: logger\r\n}\r\nexport const SignUpHeader = ({ navigation, setHeaderView, log }: SignUpHeader_t) => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [re_password, setRePassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n    return (\r\n        <View style={styles.headerContainer}>\r\n            <View style={{ flex: 1, width: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 20,\r\n                        fontWeight: \"bold\",\r\n                        textAlign: \"center\",\r\n                        color: \"#555\",\r\n                        paddingHorizontal: 20,\r\n                    }}\r\n                >\r\n                    Welcome to HUElite Community\r\n                </Text>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 15,\r\n                        color: \"#555\",\r\n                        textAlign: \"center\",\r\n                        paddingVertical: 20,\r\n                        paddingHorizontal: 30,\r\n                    }}\r\n                >\r\n                    Your HUElite Account will be used to link and setup your devices with Alexa and\r\n                    Google Assistant\r\n        </Text>\r\n                <TextInput\r\n                    style={{\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n\r\n                    onChangeText={(text) => {\r\n                        setEmail(text);\r\n                    }}\r\n                    placeholder=\"email/userID\"\r\n                    value={email}\r\n                    autoCompleteType=\"email\"\r\n                />\r\n\r\n                <TextInput\r\n                    style={{\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n\r\n                    onChangeText={(text) => {\r\n                        setUserName(text);\r\n                    }}\r\n                    placeholder=\"Username\"\r\n                    value={userName}\r\n                //autoCompleteType=\"username\"\r\n                />\r\n\r\n                <TextInput\r\n                    style={{\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n                    onChangeText={(text) => {\r\n                        setPassword(text);\r\n                    }}\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    secureTextEntry={true}\r\n                />\r\n                <TextInput\r\n                    style={{\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n                    onChangeText={(text) => {\r\n                        setRePassword(text);\r\n                    }}\r\n                    placeholder=\"re-type password\"\r\n                    value={re_password}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                <RectButton /* Sec3: SignUp button */\r\n                    style={{\r\n                        backgroundColor: \"#5555ff\",\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderRadius: 25,\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        elevation: 5,\r\n                    }}\r\n                    onPress={() => {\r\n                        appOperator.user({\r\n                            cmd: \"SIGNUP\",\r\n                            userName,\r\n                            password,\r\n                            re_password,\r\n                            email,\r\n                            onSignupFailed: ({ ERR }) => {\r\n                                Alert.alert(ERR?.errCode ? ERR?.errCode : \"UNKNOWN ERROR\", ERR?.errMsg ? ERR.errMsg : \"This could be due to technical error at backend, you can report the issue our forum. We regret for the inconveniences\")\r\n                            },\r\n                            onSignupSuccess: (user) => {\r\n                                navigation.replace(\"dashboard\")\r\n                            },\r\n                            log: log ? new logger(\"user signup operator\", log) : undefined\r\n                        })\r\n                    }}\r\n                >\r\n                    <Text style={{ color: \"white\", fontSize: 18, fontWeight: \"bold\" }}>\r\n                        Signup\r\n                 </Text>\r\n                </RectButton>\r\n            </View>\r\n            <RectButton\r\n                style={{ marginTop: \"5%\" }}\r\n                onPress={() => {\r\n                    console.log(\"Signup\");\r\n                    setHeaderView ? setHeaderView(\"LOGIN\") : {}\r\n                }}\r\n            >\r\n                <Text style={{ textAlign: \"center\" }}>\r\n                    Already have an account\r\n                    <Text style={{ color: \"#5555ff\", fontWeight: \"bold\" }}>Login</Text>\r\n                </Text>\r\n            </RectButton>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        marginVertical: \"2%\"\r\n    },\r\n});\r\n\r\n\r\n//TODO adjust headers for smaller screen sizes","import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet, Alert } from 'react-native'\r\nimport { RectButton, TextInput } from 'react-native-gesture-handler';\r\nimport { useSelector } from 'react-redux';\r\nimport UNIVERSALS from '../../../../@universals';\r\nimport { _appState } from '../../../../redux/rootReducer';\r\nimport { appOperator } from '../../../../util/app.operator';\r\nimport { logger } from '../../../../util/logger';\r\nimport { navigationProp } from \"../index\"\r\n\r\n/**\r\n * \r\n * //TODO email validation before signing up\r\n * //TODO retype pass must match before procceding\r\n */\r\ninterface SignUpHeader_t {\r\n    navigation: navigationProp\r\n    setHeaderView?: React.Dispatch<React.SetStateAction<string>>\r\n    user?: UNIVERSALS.GLOBALS.USER_t\r\n    log?: logger\r\n}\r\nexport const UserUpdateForm = ({ navigation, setHeaderView, user, log }: SignUpHeader_t) => {\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [re_password, setRePassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n    return (\r\n        <View style={styles.headerContainer}>\r\n            <View style={{ flex: 1, width: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 20,\r\n                        fontWeight: \"bold\",\r\n                        textAlign: \"center\",\r\n                        color: \"#555\",\r\n                        paddingHorizontal: 20,\r\n                    }}\r\n                >\r\n                    Welcome to HUElite Community\r\n                </Text>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 15,\r\n                        color: \"#555\",\r\n                        textAlign: \"center\",\r\n                        paddingVertical: 20,\r\n                        paddingHorizontal: 30,\r\n                    }}\r\n                >\r\n                    Your HUElite Account will be used to link and setup your devices with Alexa and\r\n                    Google Assistant\r\n        </Text>\r\n                <TextInput /* Sec3: userName textField */\r\n                    style={{\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n\r\n                    onChangeText={(text) => {\r\n                        setUserName(text);\r\n                    }}\r\n                    placeholder=\"Username\"\r\n                    value={userName}\r\n                    autoCompleteType=\"username\"\r\n                />\r\n\r\n                <TextInput /* Sec3: oldPassword textField */\r\n                    style={{\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n\r\n                    onChangeText={(text) => {\r\n                        setOldPassword(text);\r\n                    }}\r\n                    placeholder=\"old-password\"\r\n                    value={oldPassword}\r\n                    autoCompleteType=\"password\"\r\n                />\r\n\r\n                <TextInput /* Sec3: newPassword textField */\r\n                    style={{\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n                    onChangeText={(text) => {\r\n                        setPassword(text);\r\n                    }}\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    secureTextEntry={true}\r\n                />\r\n                <TextInput /* Sec3: retype password */\r\n                    style={{\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n                    onChangeText={(text) => {\r\n                        setRePassword(text);\r\n                    }}\r\n                    placeholder=\"re-type password\"\r\n                    value={re_password}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                <RectButton /* Sec3: SignUp button */\r\n                    style={{\r\n                        backgroundColor: \"#5555ff\",\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderRadius: 25,\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        elevation: 5,\r\n                    }}\r\n                    onPress={() => {\r\n                        if (user?.id) {\r\n                            appOperator.user({\r\n                                cmd: \"UPDATE\",\r\n                                id: user?.id ? user.id : \"\",\r\n                                userName,\r\n                                password,\r\n                                re_password,\r\n                                onUpdateFailed: ({ ERR }) => {\r\n                                    Alert.alert(ERR?.errCode ? ERR?.errCode : \"UNKNOWN ERROR\", ERR?.errMsg ? ERR.errMsg : \"This could be due to technical error at backend, you can report the issue our forum. We regret for the inconveniences\")\r\n                                },\r\n                                onUpdateSuccess: () => {\r\n\r\n                                },\r\n                                log: log ? new logger(\"user update operator\", log) : undefined\r\n                            })\r\n                        } else {\r\n                            Alert.alert(\"CANNOT UPDATE USER DATA\", \"the associated user with this account might be temprory or it could be due to techniocal error.  you can find more abou related issues on HUElite forum\")\r\n                        }\r\n                    }}\r\n                >\r\n                    <Text style={{ color: \"white\", fontSize: 18, fontWeight: \"bold\" }}>\r\n                        Update\r\n                 </Text>\r\n                </RectButton>\r\n            </View>\r\n            <RectButton\r\n                style={{ marginTop: \"5%\" }}\r\n                onPress={() => {\r\n                    console.log(\"Signup\");\r\n                    setHeaderView ? setHeaderView(\"USER\") : {}\r\n                }}\r\n            >\r\n                <Text style={{ textAlign: \"center\" }}>\r\n                    Everythings is in place\r\n                    <Text style={{ color: \"#5555ff\", fontWeight: \"bold\" }}>{\" \"}discard changes</Text>\r\n                </Text>\r\n            </RectButton>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        marginVertical: \"2%\"\r\n    },\r\n});\r\n\r\n\r\n//TODO adjust headers for smaller screen sizes","import { FontAwesome } from '@expo/vector-icons';\r\nimport React, { useState } from \"react\";\r\nimport { Dimensions, StyleSheet, Text, View } from \"react-native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport { reduxStore } from '../../../../redux';\r\nimport { appOperator } from '../../../../util/app.operator';\r\nimport { getCurrentTimeStampInSeconds } from '../../../../util/DateTimeUtil';\r\nimport { logger } from \"../../../../util/logger\";\r\nimport { navigationProp } from \"../index\";\r\nimport { LoginHeader } from \"./loginForm\";\r\nimport { SignUpHeader } from \"./signupForm\";\r\nimport { UserUpdateForm } from \"./userUpdateForm\";\r\n\r\ninterface Props {\r\n  navigation: navigationProp\r\n  userPageView?: string\r\n  setUserPageView?: React.Dispatch<React.SetStateAction<string>>\r\n  log?: logger\r\n}\r\nconst { width, height } = Dimensions.get(\"window\");\r\n/** \r\n * @description userFormsContainer responsible for switching view between login/signup/update\r\n * \r\n * ## [login/Signup](https://app.clickup.com/t/1vf7hj)\r\n *    ##### LoginFunctionality\r\n *      - [x] login and switch view to userProfile upon success\r\n *      - [x] login and show errors as Alert on error\r\n *    ##### signupFunctionality\r\n *      - [x] signup and switch view to userProfile\r\n *      - [x] show Alert for error upon signup failed\r\n *    ##### updateUser Info\r\n *      - [ ] show userUpdateErorrs\r\n *      - [ ] switch view to user profile upon successful update\r\n */\r\nexport default ({ navigation, userPageView, setUserPageView, log }: Props) => {\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Sec: Body Section for login/signup/update form*/}\r\n      <View style={styles.contentView}>\r\n        {userPageView == \"SIGNUP\"\r\n          ? <SignUpHeader\r\n            setHeaderView={setUserPageView}\r\n            navigation={navigation}\r\n            log={log ? new logger(\"signup header\", log) : undefined} />\r\n          : userPageView == \"UPDATE\"\r\n            ? <UserUpdateForm\r\n              setHeaderView={setUserPageView}\r\n              navigation={navigation}\r\n              log={log ? new logger(\"login header\", log) : undefined} />\r\n            : userPageView == \"LOGIN\"\r\n              ? <LoginHeader\r\n                setHeaderView={setUserPageView}\r\n                navigation={navigation}\r\n                log={log ? new logger(\"login header\", log) : undefined} />\r\n              : (<View></View>)}\r\n      </View>\r\n      {/* Sec: Footer */}\r\n      <View style={styles.footer}>\r\n        {/* Sec: Login buttons */}\r\n        <View style={{ display: \"flex\", flexDirection: \"row\", width: 120, alignItems: \"center\", justifyContent: \"center\" }}>\r\n          {false && <RectButton\r\n            onPress={() => {\r\n              /* - [ ] googleLogin() */\r\n            }}>\r\n            <View style={{ borderColor: \"#fff\", borderWidth: 0.5, height: 50, width: 50, borderRadius: 30, justifyContent: \"center\", alignItems: \"center\" }}>\r\n              <FontAwesome name=\"google\" size={30} color=\"#fff\" />\r\n            </View>\r\n          </RectButton>}\r\n          <RectButton\r\n            onPress={() => {\r\n              appOperator.user({\r\n                cmd: \"FB_LOGIN\",\r\n                onFbLoginSuccess: (user) => {\r\n                  navigation.replace(\"dashboard\")\r\n                },\r\n                log: log ? new logger(\"fb login\", log) : undefined\r\n              })\r\n            }}>\r\n            <View style={{ borderColor: \"#fff\", borderWidth: 0.5, height: 50, width: 50, borderRadius: 30, justifyContent: \"center\", alignItems: \"center\" }}>\r\n              <FontAwesome name=\"facebook-f\" size={30} color=\"#fff\" />\r\n            </View>\r\n          </RectButton>\r\n        </View>\r\n        {/* Sec: Skip Login */}\r\n        <RectButton\r\n          style={{ position: \"absolute\", bottom: 10, paddingVertical: 10, }}\r\n          onPress={() => {\r\n            appOperator.userStoreUpdateFunction({\r\n              user: {\r\n                email: \"testmail@huelite.in\",\r\n                localTimeStamp: getCurrentTimeStampInSeconds()\r\n              }\r\n            })\r\n            navigation.navigate(\"dashboard\")\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              textAlign: \"center\",\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            Skip for now!{\" \"}\r\n            <Text style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n              Will do Later\r\n            </Text>\r\n          </Text>\r\n        </RectButton>\r\n      </View>\r\n    </View >\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    backgroundColor: \"#5555ff\",\r\n  },\r\n  contentView: {\r\n    flex: 0.7,\r\n    borderBottomLeftRadius: width * 0.08,\r\n    borderBottomRightRadius: width * 0.08,\r\n    backgroundColor: \"white\",\r\n  },\r\n  footer: {\r\n    flex: 0.3,\r\n    zIndex: 10,\r\n    backgroundColor: \"#5555ff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import { AntDesign, FontAwesome, Ionicons } from '@expo/vector-icons';\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Image, StyleProp, Text, TextInput, View, ViewStyle } from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { appState } from \"../../../redux\";\r\nimport { MainRouterStackParamList } from \"../../../routers/MainRouter\";\r\nimport { appOperator } from \"../../../util/app.operator\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { NewRectButtonWithChildren } from \"../../common/buttons/RectButtonCustom\";\r\nimport Container from \"../../common/containers/SafeAreaWithAnimatedVerticalScrollView\";\r\nimport styles from \"../../common/styles\";\r\nimport LoginPage from \"./userForms\";\r\n\r\nexport type navigationProp = StackNavigationProp<\r\n  MainRouterStackParamList,\r\n  \"user\"\r\n>\r\ntype routeProp = RouteProp<MainRouterStackParamList, \"user\">;\r\n\r\ninterface props {\r\n  navigation: navigationProp\r\n  route: routeProp;\r\n}\r\nconst UserScreen = ({ navigation }: props) => {\r\n  const log = new logger(\"user profile\")\r\n  const [userPageView, setUserPageView] = useState(\"LOGIN\")\r\n\r\n\r\n\r\n  if (userPageView == \"USER\")\r\n    return (\r\n      <Container style={{ backgroundColor: \"#fff\", paddingHorizontal: 15 }}>\r\n        <View /* Sec2: header button container*/\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            height: 60\r\n          }}>\r\n          <NewRectButtonWithChildren /* Sec3: back button */\r\n            style={{\r\n              //backgroundColor: \"green\"\r\n            }}\r\n            onPress={() => {\r\n              if (navigation.canGoBack())\r\n                navigation.pop()\r\n              else {\r\n                navigation.replace(\"pairing\")\r\n              }\r\n            }}>\r\n            <Ionicons style={{}} name=\"ios-arrow-back\" size={30} color=\"#222\" />\r\n          </NewRectButtonWithChildren>\r\n          <NewRectButtonWithChildren /* Sec3: logoutButton */\r\n            style={{\r\n              //backgroundColor: \"red\"\r\n            }}\r\n            onPress={() => {\r\n              appOperator.user({\r\n                cmd: \"LOGOUT\",\r\n                onLogout: () => {\r\n                  log?.print(\"user logged out\")\r\n                }\r\n              })\r\n            }}>\r\n            <View\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                //backgroundColor: \"red\"\r\n              }}>\r\n              <Text style={[styles.H5]}>Logout</Text>\r\n              <AntDesign style={{}} name=\"logout\" size={28} color=\"#222\" />\r\n            </View>\r\n          </NewRectButtonWithChildren>\r\n        </View>\r\n        <View /* Sec2: page heading text container */\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            height: 50,\r\n            //backgroundColor: \"red\"\r\n          }}>\r\n          <Text style={{ color: \"#222\", fontSize: 35, fontWeight: \"bold\" }}>Settings</Text>\r\n          <NewRectButtonWithChildren /* Sec3: back button */\r\n            style={{\r\n              //backgroundColor: \"green\"\r\n            }}\r\n            onPress={() => {\r\n              setUserPageView(\"UPDATE\")\r\n            }}>\r\n            <FontAwesome style={{}} name=\"edit\" size={30} color=\"#222\" />\r\n          </NewRectButtonWithChildren>\r\n        </View>\r\n        <View style={{ alignItems: \"center\", marginTop: 50 }}>\r\n          <FontAwesome name=\"user\" size={100} color=\"#222\" />\r\n          <Text>[testemail]</Text>\r\n          <Text>[testUsername]</Text>\r\n        </View>\r\n        <View style={{}}>\r\n          <CustomTextField style={{ marginTop: 30 }} heading=\"Full Name\" primaryColor=\"#777\" />\r\n          <CustomTextField style={{ marginTop: 25 }} heading=\"email\" primaryColor=\"#777\" />\r\n        </View>\r\n        <View style={{\r\n          marginTop: 50,\r\n          borderWidth: 0.3,\r\n          //borderColor: \"#777\",\r\n          borderRadius: 25,\r\n          overflow: \"hidden\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}>\r\n          <Text style={{ color: \"#777\", fontWeight: \"bold\" }}>Coming Next</Text>\r\n          <Image style={{ width: \"100%\" }} source={require(\"../../../../assets/images/usageMeter.png\")} />\r\n        </View>\r\n        {/*  <View style={{ alignItems: \"center\", paddingVertical: 20 }}>\r\n        <Image style={{ height: 150, width: 150, opacity: 0.3 }} source={require(\"../../../../assets/icons/icon.png\")} />\r\n      </View> */}\r\n      </Container>\r\n    );\r\n  else\r\n    return (\r\n      <LoginPage\r\n        log={new logger(\"LOGIN/SIGNUP/UPDATE\", log)}\r\n        navigation={navigation}\r\n        userPageView={userPageView}\r\n        setUserPageView={setUserPageView} />\r\n    )\r\n};\r\n\r\nexport default UserScreen\r\n\r\n\r\ninterface TextFieldProps {\r\n  heading?: string\r\n  placeholder?: string\r\n  style?: StyleProp<ViewStyle>\r\n  primaryColor?: string\r\n}\r\nconst CustomTextField = ({ heading, placeholder, style, primaryColor = \"#000000\" }: TextFieldProps) => {\r\n  return (\r\n    <View style={[{}, style]}>\r\n      <Text style={{ marginLeft: 15, color: primaryColor, fontWeight: \"bold\" }}>{heading}</Text>\r\n      <View style={{ borderWidth: 0.5, borderRadius: 10, borderColor: primaryColor }}>\r\n        <TextInput style={{ height: 50, marginHorizontal: 10, fontSize: 15, color: primaryColor }} placeholder={placeholder} />\r\n      </View>\r\n    </View>\r\n  )\r\n}","import { createStackNavigator, StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React from \"react\";\r\nimport UNIVERSALS from \"../@universals\";\r\nimport AppConfigScreen from \"../components/screens/appConfig\";\r\nimport { Dashboard } from \"../components/screens/dashboard\";\r\nimport DevicePage from \"../components/screens/devicePage\";\r\nimport { WelcomeScreen } from \"../components/screens/onboarding/WelcomeScreen\";\r\nimport { pairingRouter } from \"../components/screens/pairing\";\r\nimport UserProfileScreen from \"../components/screens/userProfile\";\r\nimport { deviceContainerType } from \"../util/dummyData/DummyData\";\r\n\r\nexport type MainRouterStackParamList = {\r\n  //login_signup: undefined;\r\n  onboarding: undefined;\r\n  pairing: undefined;\r\n  //DashboardRouter: undefined;\r\n  config: undefined;\r\n  user: undefined;\r\n  dashboard: undefined;\r\n  devicePage: { device: UNIVERSALS.GLOBALS.DEVICE_t };\r\n  deviceObjectPage: { group: deviceContainerType };\r\n};\r\n\r\nexport type MainRouterNavigationProp = StackNavigationProp<MainRouterStackParamList>;\r\nconst Stack = createStackNavigator<MainRouterStackParamList>();\r\nconst MainRouter = (props: any) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName={\r\n        props.initialScreen ? props.initialScreen : \"DashboardRouter\"\r\n      }\r\n      //initialRouteName=\"test\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n        cardStyle: {\r\n          opacity: 1,\r\n          backgroundColor: \"#fff\",\r\n        },\r\n      }}\r\n    >\r\n      {/* <Stack.Screen name=\"login_signup\" component={GetStarted} /> */}\r\n      <Stack.Screen name=\"onboarding\" component={WelcomeScreen} />\r\n      <Stack.Screen name=\"pairing\" component={pairingRouter} />\r\n      <Stack.Screen name=\"dashboard\" component={Dashboard} />\r\n      <Stack.Screen name=\"config\" component={AppConfigScreen} />\r\n      <Stack.Screen name=\"user\" component={UserProfileScreen} />\r\n      <Stack.Screen\r\n        name=\"devicePage\"\r\n        component={DevicePage}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default MainRouter;\r\n","import React from \"react\";\r\nimport { reduxStore } from \"./redux\";\r\nimport MainRouter from \"./routers/MainRouter\";\r\n\r\n\r\n\r\n\r\ninterface App_i { }\r\nconst Application = ({ }: App_i) => {\r\n\r\n  /* const initialScreen = reduxStore.store.getState().appCTXReducer.user?.email\r\n    ? reduxStore.store.getState().deviceReducer.deviceList?.length ? \"dashboard\" : \"pairing\"\r\n    : \"onboarding\"; */\r\n  //const initialScreen = reduxStore.store.getState().deviceReducer.deviceList?.length ? \"dashboard\" : \"pairing\"\r\n  const initialScreen = reduxStore.store.getState().appCTXReducer.user?.email\r\n    ? reduxStore.store.getState().deviceReducer.deviceList.length\r\n      ? \"dashboard\"\r\n      : \"pairing\"\r\n    : \"login_signup\"\r\n\r\n  return <MainRouter initialScreen={initialScreen} />;\r\n};\r\n\r\n\r\nexport default Application","\r\nimport { reduxStore } from \"../../redux\";\r\nimport { logger } from \"../../util/logger\";\r\nimport { bgServiceSagaAction } from \"../../redux/helperSideEffect/saga/bgServiceSaga\"\r\n\r\nexport default class {\r\n    iteration = 0\r\n    interval = 3000\r\n    id = Math.floor(Math.random() * 10001);\r\n    log;\r\n    timerFun: any/* NodeJS.Timeout | undefined */\r\n\r\n    runner = () => {\r\n        //this.log?.print(\"--\")\r\n        this._dispatchBgSagaAction()\r\n    }\r\n\r\n    clearInterval = () => {\r\n        if (this.timerFun != undefined) {\r\n            this.log?.print(\"clearing BGService Interval\")\r\n            clearInterval(this.timerFun)\r\n            this.timerFun = undefined\r\n        }\r\n    }\r\n\r\n    _dispatchBgSagaAction = () => {\r\n        reduxStore.store.dispatch(bgServiceSagaAction({ iteration: this.iteration, log: this.log ? new logger(\"bg service saga\", this.log) : undefined }))\r\n        this.iteration = this.iteration < 2000 ? this.iteration + 1 : 1000\r\n    }\r\n\r\n    startInterval = () => {\r\n        if (this.timerFun === undefined) {\r\n            this._dispatchBgSagaAction()\r\n            this.log?.print(\"starting BGService Interval\")\r\n            this.timerFun = setInterval(this.runner, this.interval)\r\n        }\r\n    }\r\n\r\n    constructor({ interval, log }: constructor_props) {\r\n        this.log = log\r\n        if (interval)\r\n            this.interval = interval\r\n    }\r\n}\r\n\r\ninterface constructor_props {\r\n    interval?: number\r\n    log?: logger\r\n}","//@ts-ignore\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport { ActionSheetProvider } from '@expo/react-native-action-sheet';\nimport { NavigationContainer } from \"@react-navigation/native\";\n//@ts-ignore\nimport AppLoading from \"expo-app-loading\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { Text } from \"react-native\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { Provider } from \"react-redux\";\n//import \"react-native-gesture-handler\"; // TODO this was recommended to be imported in app.js for proper functioning og gesture handler acroose the application\nimport Application from \"./src/Application\";\nimport { reduxStore } from \"./src/redux\";\nimport BGService from \"./src/services/backGroundServices\";\nimport { getData, storeData } from \"./src/services/db/storage\";\nimport { logger } from \"./src/util/logger\";\n\n//LogBox.ignoreAllLogs(true)\n\n//TODO LogBox.ignoreAllLogs(true);\n\n//EXP: Create the client as outlined in the setup guide\nconst client = new ApolloClient({\n  uri: \"http://192.168.1.6\",\n  cache: new InMemoryCache(),\n});\n\nexport default function App() {\n  const log = new logger(\"MAIN ACTIVITY\")\n  const [appLoading, setAppLoading] = useState(true);\n  const [appCTX, setappCTX] = useState<any>(undefined);\n  const bgService = useMemo(() => new BGService({ interval: 6000, log: new logger(\"bg service\", log) }), [])\n  const linking = {\n    prefixes: ['https://app.example.com', 'hueliteapp://'],\n    config: {\n      screens: {\n        getStarted: \"getstarted\"\n      }\n    }\n  };\n\n  const loadAppData = async () => {\n\n\n    //EXP: store dummy data in storage\n    //log(\"Dummy Data data ::  \" + JSON.stringify(HallRGBGroupDummyData));\n    //await storeData(\"deviceList\", HallRGBGroupDummyData);\n    //EXP: remove data from storage\n    //await storeData(\"deviceList\", null);//REMOVE\n    //await storeData(\"appCTX\", null);//REMOVE\n    const deviceList = await getData(\"deviceList\");\n    log.print(\"deviceList data ::  \" + JSON.stringify(deviceList));\n    if (deviceList)\n      reduxStore.store.dispatch(reduxStore.actions.deviceList.deviceListRedux({ deviceList }));\n\n    const _appCTX = await getData(\"appCTX\");\n    log.print(\"[APPCTX] >>\" + JSON.stringify(_appCTX))\n    if (_appCTX) {\n      log.print(\"appCTX is  \" + JSON.stringify(_appCTX));\n      setappCTX(_appCTX)\n      reduxStore.store.dispatch(reduxStore.actions.appCTX.appCtxSagaAction({ data: _appCTX, saveToDB: false /*, log */ }));\n    }\n    else\n      setappCTX({})\n    setTimeout(async () => {\n      await SplashScreen.hideAsync();\n      setTimeout(async () => {\n        const deletedDeviceList = await getData(\"deletedDeviceList\")\n        if (deletedDeviceList)\n          reduxStore.store.dispatch(reduxStore.actions.deviceList.deletedDeviceListRedux({ deletedDeviceList }))\n\n      }, 5000);\n      bgService.startInterval()\n      setAppLoading(false);\n    }, 100);\n  }\n\n  useEffect(() => {\n    try {\n      SplashScreen.preventAutoHideAsync();\n    } catch (e) { }\n    loadAppData();\n    return () => {\n      bgService.clearInterval()\n    }\n  }, [])\n\n\n\n  if (appLoading) return <AppLoading />;\n  return (\n    <ApolloProvider client={client}>\n      <Provider store={reduxStore.store}>\n        <NavigationContainer /* linking={linking}  */ fallback={<Text>Loading...</Text>}>\n          {/*  <BackgroundService /> */}\n          <SafeAreaProvider>\n            <ActionSheetProvider>\n              <Application />\n            </ActionSheetProvider>\n          </SafeAreaProvider>\n          <StatusBar style=\"light\"/*  hidden={true} */ />\n        </NavigationContainer>\n      </Provider>\n    </ApolloProvider>\n  );\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/HUElite_App_Expo/expo-service-worker.js', { scope: '/HUElite_App_Expo/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/splash-icon.642f417a.png\";","module.exports = __webpack_public_path__ + \"static/media/background.76e3813d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.0b297109.png\";","module.exports = __webpack_public_path__ + \"static/media/colorPicker.116187dc.png\";","module.exports = __webpack_public_path__ + \"static/media/preset.696f2cd2.png\";","module.exports = __webpack_public_path__ + \"static/media/setting.97214bba.png\";","module.exports = __webpack_public_path__ + \"static/media/aurora.d7429eea.png\";","module.exports = __webpack_public_path__ + \"static/media/autumn.c72bcc06.png\";","module.exports = __webpack_public_path__ + \"static/media/deepocean.0aee9a72.png\";","module.exports = __webpack_public_path__ + \"static/media/spring1.f58006c7.png\";","module.exports = __webpack_public_path__ + \"static/media/sunrise.a239aa8e.png\";","module.exports = __webpack_public_path__ + \"static/media/sunset.8780ce1b.png\";","module.exports = __webpack_public_path__ + \"static/media/winter.cdc1f980.png\";","module.exports = __webpack_public_path__ + \"static/media/testIMG.922f6a75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/usageMeter.42872b19.png\";"],"sourceRoot":""}