{"version":3,"sources":["src/@universals/globals/timer/types.ts","src/@universals/globals/timer/helper.ts","src/@universals/globals/device/gql.ts","src/@universals/helper/color.ts","src/@universals/globals/user/userGqlFieldsWithNoDevices.ts","src/@universals/globals/globalTypes.ts","src/@universals/globals/user/index.ts","src/@universals/globals/user/helper.ts","src/@universals/globals/user/gql.ts","src/@universals/globals/device/index.ts","src/@universals/globals/device/helper.ts","src/@universals/globals/device/api/index.ts","assets/icons/icon-no-bg.png","src/redux/ReduxConstant.ts","src/redux/sagas/sagaBaseWorkers.ts","src/util/logger/index.ts","src/services/db/storage.tsx","src/redux/deviceListReducer/reducer/index.ts","src/redux/sagas/helper.ts","src/redux/deviceListReducer/saga/deviceList.ts","src/util/Color.tsx","src/redux/deviceListReducer/saga/color.saga.ts","src/redux/deviceListReducer/saga/index.ts","src/redux/deviceListReducer/index.ts","src/@universals/universals/venderConf.ts","src/@universals/helper/util.ts","src/@universals/index.ts","src/services/api/baseErrors.ts","src/services/api/v1/device/auth.api.ts","src/services/api/baseRequest.ts","src/services/api/v1/device/scan.api.ts","src/services/api/v1/device/pair.api.ts","src/services/api/v1/device/saveWiFiConfig.api.ts","src/services/api/v1/cloud/httpApolloQuery.ts","src/services/api/v1/cloud/device/deviceTimersQuery.ts","src/services/api/baseAxios.ts","src/services/api/v1/cloud/device/deviceQueryWithMac.ts","src/services/api/v1/cloud/device/deviceAddMutation.ts","src/services/api/v1/cloud/device/deviceUpdateMutation.ts","src/services/api/v1/cloud/user/userQuery.ts","src/services/api/v1/cloud/user/login.api.ts","src/services/api/v1/cloud/user/signup.api.ts","src/services/api/v1/cloud/user/userUpdate.api.ts","src/services/api/v1/cloud/user/userDevicesUpdate.ts","src/services/api/index.ts","src/services/backGroundServices/webSocket.tsx","src/util/DateTimeUtil.tsx","src/util/app.operator/device.operator.ts","src/util/app.operator/user.operator.ts","src/components/common/Alert.ts","src/util/app.operator/index.ts","src/redux/helperSideEffect/reducers/HBReducer.ts","src/redux/helperSideEffect/saga/bgServiceSaga.ts","src/redux/helperSideEffect/reducers/AppCTXReducer.ts","src/redux/helperSideEffect/saga/appCTXSagas.ts","src/redux/helperSideEffect/saga/index.ts","src/redux/helperSideEffect/index.ts","src/redux/sagas/index.ts","src/redux/rootReducer.ts","src/redux/index.ts","src/redux/ReduxStore.ts","src/components/common/styles/colors.ts","src/components/common/styles/Text.ts","src/components/common/styles/commonStyles.ts","src/components/common/styles/spacing.ts","src/components/common/styles/index.ts","src/components/common/buttons/RectButtonCustom.tsx","src/components/common/containers/SafeAreaWithAnimatedVerticalScrollView.tsx","src/components/screens/appConfig/index.tsx","src/components/common/BrightnessSlider_optmizedForWeb.tsx","src/components/screens/dashboard/deviceCard/index.tsx","src/components/screens/dashboard/Header.tsx","src/components/common/modal/index.ts","src/components/screens/dashboard/index.tsx","src/components/screens/devicePage/DevicePageHeader.tsx","src/components/common/ColorPickerPin_optimizedForWeb.tsx","src/components/screens/devicePage/devicePageNavigator/colorPickerScreen/index.tsx","src/components/common/ColorPicker.tsx","src/components/screens/devicePage/devicePageNavigator/colorPickerScreen/colorPickerSection.tsx","src/components/common/Modes/index.tsx","src/components/common/NewSelector.tsx","src/components/common/Timer/NewTimerDialog.tsx","src/util/UUID_utils.tsx","src/components/common/Timer/index.tsx","src/theme/colors/highlightColors.tsx","src/components/screens/devicePage/devicePageNavigator/modesScreen/index.tsx","src/components/common/text/textField.tsx","src/components/screens/devicePage/devicePageNavigator/settingScreen/index.tsx","src/components/screens/devicePage/index.tsx","src/components/screens/onboarding/WelcomeScreen.tsx","src/components/screens/pairing/PairingConnectorScreen1/index.tsx","src/services/webApi/webHooks.ts","src/components/screens/pairing/PairingConnectorScreen2/index.tsx","src/services/webApi/pairAPI_Hook.ts","src/components/screens/pairing/PairingConnectorScreen3/index.tsx","src/components/screens/pairing/index.tsx","src/components/screens/userProfile/userForms/loginForm.tsx","src/components/screens/userProfile/userForms/signupForm.tsx","src/components/screens/userProfile/userForms/userUpdateForm.tsx","src/components/screens/userProfile/userForms/index.tsx","src/components/screens/userProfile/index.tsx","src/routers/MainRouter.tsx","src/Application.tsx","src/services/backGroundServices/index.ts","App.tsx","web-build/register-service-worker.js","assets/icons/splash-icon.png","assets/images/background.jpg","src/components/common/modal/WebModal.tsx","assets/images/1.png","assets/images/colorPicker.png","assets/icons/preset.png","assets/icons/setting.png","assets/images/presetImages/scenes/aurora.png","assets/images/presetImages/scenes/autumn.png","assets/images/presetImages/scenes/deepocean.png","assets/images/presetImages/scenes/spring1.png","assets/images/presetImages/scenes/sunrise.png","assets/images/presetImages/scenes/sunset.png","assets/images/presetImages/scenes/winter.png","assets/images/onboarding/OB_3.png","assets/images/onboarding/OB_4.png","assets/images/onboarding/OB_2.png","assets/images/onboarding/OB_1.png","assets/images/testIMG.jpg","assets/images/usageMeter.png"],"names":["TIMER_EVENT_TYPE_e","TIMER_DAYTIME_e","TIMER_STATUS_e","getBit","bitIndex","bitHolderNumber","b","t","setBit","convertTimersStringToObj","timersString","log","print","timersObject","JSON","parse","length","stringify","newTimersObject","map","timer","index","H","tempDAYS","daysIndex","DAYS","error","converLocalTimerObjectToBackendString","timers","newTimers","daysInt","forEach","day","Device_fields_compactUserWithNoDevices","HUE_User_fields_no_devices","Device_fields_noUser","getDeviceTimer_query","getDeviceWithMac_query","userUpdateDevicesMutationString","connect","createNewDevice_mutation","updateDevice_mutation","getHsvFromString","hsvString","hsvStringSplitArray","split","hsv","h","s","v","element","parseInt","console","convert_user_backendToLocal","user","localTimeStamp","ts","convert_user_localToBackend","id","HUE_User_fields","HUE_User_queryWithEmail_","User_queryWithId","HUE_User_createMutation_","HUE_User_authenticateMutation_","HUE_User_updateMutation_","convert_Devices_backendToLocal","devices","socket","device","d_index","convert_Device_backendToLocal","temp_hsv","temp_timers","convert_Device_LocalToBackend","newDevice","IP","Hostname","deviceName","Mac","convert_Device_LocalToBackend_forUpdateMutation","_DEVICE_WIFI_STATE_e","_DEVICE_WIFI_API_ERRORS_e","module","exports","_reduxConstant","printType","_getBaseAction","type","props","_getWorker","_props","baseAction","worker","_baseWorker","call","callable","shouldTakeLatest","_baseWatcher","takeLatest","takeEvery","storeData","key","value","a","async","AsyncStorage","setItem","warn","getData","getItem","jsonValue","saveAppCTX","Promise","initialState","deviceList","deletedDevices","_reducer","state","action","DEVICELIST_REDUX","DELETED_DEVICELIST_REDUX","deletedDeviceList","isDbState","_actions","deviceListRedux","deletedDeviceListRedux","_delay","ms","res","setTimeout","logger","prefix","_log","printAll","printable","addStack","removeStack","substring","lastIndexOf","getPrefix","_print","canPrint","printPretty","_printPretty","printDeviceList","cprint","item","includes","toUpperCase","temp","this","DEVICELIST_SAGA","containersWorker","saveToDB","put","_deviceListReduxAction","undefined","_________deviceListDB_action","_deviceListSaga_watcher","_deviceListSaga_action","DEVICE_SAGA","select","deviceReducer","devicelist","find","_device","push","_deviceSaga_watcher","_deviceSaga_action","DEVICELIST_DB_SAGA","containersDBWorker","_deviceListDB_watcher","convertHSVToRgb","r","g","i","f","p","q","Math","max","min","round","floor","convertHSVToRgbShortRange","_convertRGBToHex","_r","toString","_g","_b","convertRGBToHex","COLOR_UPDATE_SAGA","deviceMac","gestureState","beforeUpdate","newDeviceState","onActionComplete","HBReducer","HBSocketList","_deviceList","all","tempdevice","tempCol","send","State","END","preDeviceState","Date","now","newDeviceList","_colorSaga_watcher","_colorSaga_action","_saga","deviceListSaga","deviceSaga","colorSaga","_reducerActions","venderConf","venderPrefix","ValidateEmail","email","test","alert","UNIVERSALS","axiosBaseErrors_e","authApiErrors_e","timeoutError","errCode","TIMEOUT","networkError","NETWORK_ERR","unknownRouteError","UNKNOWN_ROUTE","checkForHttpErrors","err","message","indexOf","errMsg","response","status","REQUEST_FAILED","data","defaultRequest","resolveData","resolve","reject","Axios","request","method","url","address","path","body","headers","params","timeout","config","then","RES","ERR","NO_DATA","catch","tempError","ScanApiErrors_e","v1","AUTH_API_UNHANDLED","queryResponse","pairApiErrors_e","_params","URLSearchParams","append","SCAN_API_UNHANDLED","saveWifiConfigApiErrors_e","ssid","pass","PAIR_API_UNHANDLED","apolloErrors_e","SAVE_WIFI_CONFIG_API_UNHANDLED","deviceQueryApiErrors_e","fun","query","variables","processErrors","errors","extensions","code","APOLLO_BAD_QUERY","Array","tempErr","QUERY_FAILED","APOLLO_UNHANDLED","deviceQueryWithMacApiErrors_e","makeHttpQuery","GLOBALS","HueDevice","DEVICE_QUERY_API_UNHANDLED","createdeviceMutationApiErrors_e","allHueDevices","DEVICE_QUERY_NO_DEVICES_FOUND","updateDeviceMutationApiErrors_e","userID","CREATE_DEVICE_MUTATION_API_DUPLICATE_MAC_ERROR","createHueDevice","CREATE_DEVICE_MUTATION_API__UNHANDLED","userQueryApiErrors_e","updateHueDevice","UPDATE_DEVICE_MUTATION_API__UNHANDLED","loginApiErrors_e","User","USER_FETCH_API_UNHANDLED","signupApiErrors_e","password","LOGIN_API_INCORRECT_PASSWORD","LOGIN_API_UNKNOWN_EMAIL","authenticateUserWithPassword","LOGIN_API_UNHANDLED","userUpdateApiErrors_e","userName","SIGNUP_API_PASSWORD_TOO_SHORT","SIGNUP_API_PASSWORD_NOT_STRONG","SIGNUP_API_EMAIL_ALREADY_REGISTERED","createUser","SIGNUP_API_UNHANDLED","userDevicesUpdateApiErrors_e","_var","USER_UPDATE_API_PASSWORD_EASY","USER_UPDATE_API_PASSWORD_TOO_SHORT","USER_UPDATE_API_ID_INCORRECT_OR_NOT_PROVIDED","updateUser","USER_UPDATE_API_UNHANDLED","deviceID","USER_DEVICES_UPDATE_API_UNHANDLED","API","ID","random","getWebSocket","ipAddr","onOpen","onMsg","onErr","onClose","wsUrl","WebSocket","ws","onopen","e","onerror","onmessage","m","onclose","getCurrentTimeStampInSeconds","getTimeDiffNowInMs","timeStamp","loginValidationError_e","beforeUpdateDeviceSideEffect","add_updateDevices","newDevices","cloudState","requireReduxUpdate","reduxStore","store","getState","newDevice_index","localStateDevice","localStateDeviceIndex","findIndex","preState","filter","splice","deviceMatchFromDeletedDeviceList","dispatch","actions","devicesFoundInCloudState","removeDevice","__foo","colorUpdate","deviceOperation","cmd","Platform","OS","heading","_","__","Alert","logoutFunction","onLogout","appCTX","userSagaAction","HBSocketClear","signupValidationError_e","loginFunction","onLoginFailed","onValidateDataFailed","onLoginSuccess","util","LOGIN_VALIDATION_EMAIL_REQUIRED","LOGIN_VALIDATION_PASSWORD_REQUIRED","cloudAPI","loginAPI","userStoreUpdateFunction","deviceOperator","FBLoginValidationError_e","signupFunction","onSignupFailed","onSignupSuccess","SIGNUP_VALIDATION_EMAIL_INVALID","SIGNUP_VALIDATION_USERNAME_REQUIRED","SIGNUP_VALIDATION_USERNAME_TOO_SHORT","SIGNUP_VALIDATION_PASSWORD_INVALID","signupAPI","updateValidationError_e","fbLoginFunction","Facebook","appId","permissions","fbProps","fetch","token","json","fbRes","fbEmail","fbName","name","Error","onFbLoginSuccess","localUserState","appCTXReducer","latestUserState","updateFunction","onUpdateFailed","onUpdateSuccess","UPDATE_VALIDATION_ID_REQUIRED","UPDATE_VALIDATION_USERNAME_INVALID","UPDATE_VALIDATION_NEW_PASSWORD_TOO_SHORT","UPDATE_VALIDATION_NOTHING_TO_UPDATE","userUpdateAPI","appOperator","logoutRes","loginRes","signupRes","updateRes","fbLoginRes","HBDevieclist_msgSent","HBDevieclist_msgRec","HB_DEVICELIST_REDUX","HBDeviceList","HB_DEVICELIST_MSG_SENT","deviceFound","newList","lastMsgSentTs","HB_DEVICELIST_MSG_REC","_deviceFound","_newList","lastMsgRecTs","HBDeviceList_msgRecType","HB_SOCKET_LIST","newItem","__newList","reduxConstant","HB_SOCKET_LIST_CLEAR","HBList","HBMsgSent","HBMsgRec","HBSocket","BG_SERVICE_SAGA","iteration","performSideEffects","socketContainer","handleDeviceInMapLoop","localSocketContainer","api","deviceAPI","authAPI","msg","bgServiceWatcher","bgServiceSagaAction","userQuery","userRes","localDeletedDeviceList","userDeviceUpdateMutation","updateUserDevicesRes","list","updateDeviceMutation","updateApiRes","deviceQueryWithMac","containsDevice","createDeviceMutation","createDeviceApiRes","welcomeScreenStatus","quickActions","USER_REDUX","__state","APPCTX_REDUX","userRedux","appCTXRedux","APPCTX_DB_SAGA","appCtxDbWorker","appCtxDBWatcher","appCtxDBAction","APPCTX_SAGA","appCtxSagaWorker","appCtxSagaWatcher","appCtxSagaAction","USER_SAGA","appCtx","newappCtx","userSagaWatcher","appCTX_actions","HBReducer_actions","rootSaga","deviceReducerSaga","bgServiceSaga","require","combineReducers","deviceListInitailState","appCtxInitailState","HBInitailState","rootReducer","deviceListAction","helperSideEffectActions","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","_configureReduxStore","textColors","primary","secondary","tertiary","warning","feather","StyleSheet","create","primaryTextColors","color","secondaryTextColor","tertiaryTextColor","warningText","textFeather","common","_headingCommonStyles","marginHorizontal","fontWeight","H1","fontSize","H2","H3","H4","H5","H6","H7","round50","height","width","borderRadius","shadow","backgroundColor","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","absoluteFill","position","top","left","Text","commonStyles","spacing","themeColors","NewRectButton","buttonStyle","textStyle","text","onPress","useReanimated","View","style","STYLES","_styles","buttonContainer","innerbutton","textAlign","TouchableOpacity","NewRectButtonWithChildren","innerCompStyle","children","overflow","marginVertical","display","justifyContent","SafeAreaView","Animated","ScrollView","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","AppConfigScreen","navigation","paddingHorizontal","canGoBack","pop","Ionicons","paddingRight","paddingBottom","paddingTop","marginTop","size","Icon","FontAwesome","replace","MaterialIcons","paddingVertical","Image","opacity","source","MenuHeading","flexDirection","borderBottomColor","borderBottomWidth","MenuItem","Dimensions","get","initBrValue","bgColor","pinState","useValue","UNDETERMINED","useState","sliderWidth","setSliderWidth","ref","useRef","offset","offsetX","clamp","BR","multiply","divide","useCode","ACTIVE","updateColor","useEffect","current","offsetWidth","alignSelf","marginBottom","ReText","concat","zIndex","LinearGradient","start","x","y","end","colors","BrightnessSlider","gestureHandler","event","nativeEvent","translationX","temp1state","block","set","cond","eq","add","useNativeDriver","onGestureEvent","onHandlerStateChange","sliderHeight","transform","translateX","borderWidth","borderColor","Component","DeviceCard","setToBeDeletedDevice","rgb2","rgb1","hex1","hex2","showActionSheetWithOptions","useActionSheet","styles","container","activeOpacity","navigate","flex","right","paddingLeft","options","cancelButtonIndex","destructiveButtonIndex","showSeparators","Entypo","margin","MaterialCommunityIcons","brightnessSliderContainer","marginLeft","AntDesign","horizontal","Heading","subHeading","primaryColor","Child","SimpleLineIcons","activateKeepAwake","QuickActionBlock","marginRight","padding","Modal","default","Dashboard","route","useSelector","scrollViewRef","state_deleteDeviceModal","set_state_deleteDeviceModal","deviceListContainer","animationType","transparent","visible","ScreenName","navigatorMenu","bottom","DevicePageHeader","nameContainer","brightnessNumber","backButton","viewTypeEnum","ColorPickerPin","canvasWidth","CENTER","canvas2Polar","vec","polar2Canvas","theta","PI","radius","sqrt","l","hue","modulo","saturation","transX","transY","_state","pow","ColorPickerPin_copy","translate","surface","ColorPicker","setCanvasWidth","ColorPickerSection","DeviceColorPickerScreen","DEVICE_COLOR_PICKER_SCREEN","view","hsv2color","headBackgroundColor","section2","header_container","header_AnimatedView","minHeight","flexWrap","hex","borderTopLeftRadius","borderTopRightRadius","modes","img","Modes","useDispatch","FlatList","keyExtractor","renderItem","NewSelector","initValue","_rowHeight","_width","maxVal","setIndex","headingText","scrollContainer","button","numberContainer","rotate","daysSelectorArray","hrs","_data","val","mins","daytimeSelectorData","NewTimerDialog","timerInEditor","setTimerInEditor","hrIndex","setHrIndex","minIndex","setMinIndex","dtIndex","setDtIndex","setTimers","ON","etIndex","setEtIndex","days","setDays","ET","DT","onShow","deviceTimersQuery","timersObj","Feather","middleContainerCommonView","OFF","once","daily","newDaysArray","_item","_index","newTimer","UNI","c","M","STATUS","ONCE","REPEAT","timerFound","newTimersObj","Timer","deviceFromStore","timerFromProp","timerBlockConatiner","borderLeftColor","borderLeftWidth","AM","weekDaysConatiner","weekDayBlock","borderTopColor","borderTopWidth","borderRightColor","borderRightWidth","deleteTimerObj","deleteTimerObjIndex","DeviceModesScreen","placeholder","highlightColor","setValue","TextInput","onChangeText","DeviceSettingScreen","setName","tempDevice","Stack","createStackNavigator","Navigator","initialRouteName","screenOptions","headerShown","cardStyleInterpolator","CardStyleInterpolators","forHorizontalIOS","cardStyle","Screen","component","initialParams","slides","subText","assest","WelcomeScreen","slideIndex","setSlideIndex","onNext","onSkip","Header","borderBottomLeftRadius","borderBottomRightRadius","Footer","PairingConnectorScreen1","interval","setInterval","clearInterval","getCurrentTimeInSeconds","minWidth","Linking","canOpenURL","openURL","animation","autoPlay","loop","useScanApiHook","autoStart","setData","loading","load","scanAPI","pairing_state_e","deviceNames","PairingConnectorScreen2","Wifi","setWifi","setDeviceName","onScroll","onScrollEvent","selected","networks","Vibration","vibrate","validateNewDeviceData","opID","validateDeviceName","cancelable","sameDeviceNameFound","__device","onInteraction","newContainerList","reset","routes","conatiner","headerContainer","headerContainerText","placeholderTextColor","numColumns","ssidSelectorContainer","refreshButton","refreshButton_textCon","selectorList","snapToInterval","decelerationRate","bounces","scrollEventThrottle","positionY","interpolate","inputRange","outputRange","scale","scaleX","scaleY","pairButton","skipButton","usePairApiHook","IP_ADD","_onMsg","IDLE","pairStatus","setPairStatus","setSocket","getSocket","result","PAIR_READY","_socket","WIFI_STATE","deviceApi","DEVICE_WL_CONNECT_FAILED","PAIR_WRONG_PASSWORD","DEVICE_WL_NO_SSID_AVAIL","PAIR_NO_SSID","DEVICE_WL_CONNECTED","PAIR_SUCCESS","PAIR_UNKNOWN_ERROR","pairAPI","PAIR_REQUEST_SUCCESS_N_CONNECTING","saveWiFiConfigAPI","SAVE_CONFIG_SUCCESS","SAVE_CONFIG_ERROR","groupNames","PairingConnectorScreen3","setPass","groupName","setGroupName","pair","hitSaveAPI","card","secureTextEntry","Button1_Container","Button1","Button1_Text","goBackButton","BGLayer_layout1","BGLayer_layout1_TextInput","BGLayer_layout2","Button2_Container","Button2","Button2_Text","pairingRouter","LoginHeader","setHeaderView","setPassword","setEmail","maxWidth","autoCompleteType","SignUpHeader","setUserName","UserUpdateForm","oldPassword","setOldPassword","userPageView","setUserPageView","UserScreen","contentView","footer","CustomTextField","MainRouter","initialScreen","UserProfileScreen","DevicePage","Application","runner","_dispatchBgSagaAction","timerFun","startInterval","client","ApolloClient","uri","cache","InMemoryCache","App","appLoading","setAppLoading","setappCTX","bgService","useMemo","BGService","SplashScreen","_appCTX","loadAppData","NavigationContainer","fallback","StatusBar","navigator","window","addEventListener","serviceWorker","register","scope","info","appRoot","document","getElementById","insertAdjacentHTML","modalRoot","InnerModal","el","createElement","appendChild","setState","removeChild","ReactDOM","createPortal","transition"],"mappings":"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","file":"static/js/app.490b6a09.chunk.js","sourcesContent":["export enum TIMER_EVENT_TYPE_e {\r\n    ON,\r\n    OFF\r\n}\r\n\r\nexport enum TIMER_DAYTIME_e {\r\n    AM,\r\n    PM\r\n}\r\n\r\nexport enum TIMER_STATUS_e {\r\n    INACTIVE,\r\n    ONCE,\r\n    REPEAT\r\n}\r\n\r\nexport type TIMER_DAYS_t = [boolean, boolean, boolean, boolean, boolean, boolean, boolean]\r\n\r\n/** @description >- Client side Local representation of timer Object */\r\nexport interface TIMER_t {\r\n    id: string,\r\n    H: number,\r\n    M: number,\r\n    DT: TIMER_DAYTIME_e,\r\n    ET: TIMER_EVENT_TYPE_e,\r\n    STATUS: TIMER_STATUS_e,\r\n    DAYS: TIMER_DAYS_t,\r\n}\r\n\r\n\r\nexport const getBit = (bitIndex: number, bitHolderNumber: number) => {\r\n    let b = false;\r\n    if (bitIndex >= 0) {\r\n        let t = 1;\r\n        let nt = bitHolderNumber >> (bitIndex);\r\n        t = nt & t;\r\n        if (t > 0)\r\n            b = true;\r\n    }\r\n    return b;\r\n}\r\n\r\nexport const setBit = (bitIndex: number, bitHolderNumber: number, b: boolean) => {\r\n    if (b) {\r\n        let t = 1;\r\n        t = t << bitIndex;\r\n        bitHolderNumber = bitHolderNumber | t;\r\n    }\r\n    return bitHolderNumber\r\n};","import { logger } from \"../../../util/logger\"\r\nimport { TIMER_t } from \"./types\"\r\n\r\n\r\n\r\n\r\n/*\r\n'########:'##::::'##:'########::::::'######::'########:'########:::::::::'##:::::'#######::'########::::::::'##:\r\n... ##..:: ###::'###: ##.... ##::::'##... ##:... ##..:: ##.... ##::::::::. ##:::'##.... ##: ##.... ##::::::: ##:\r\n::: ##:::: ####'####: ##:::: ##:::: ##:::..::::: ##:::: ##:::: ##:'#####::. ##:: ##:::: ##: ##:::: ##::::::: ##:\r\n::: ##:::: ## ### ##: ########:::::. ######::::: ##:::: ########::.....::::. ##: ##:::: ##: ########:::::::: ##:\r\n::: ##:::: ##. #: ##: ##.. ##:::::::..... ##:::: ##:::: ##.. ##:::'#####::: ##:: ##:::: ##: ##.... ##:'##::: ##:\r\n::: ##:::: ##:.:: ##: ##::. ##:::::'##::: ##:::: ##:::: ##::. ##::.....::: ##::: ##:::: ##: ##:::: ##: ##::: ##:\r\n::: ##:::: ##:::: ##: ##:::. ##::::. ######::::: ##:::: ##:::. ##:::::::: ##::::. #######:: ########::. ######::\r\n:::..:::::..:::::..::..:::::..::::::......::::::..:::::..:::::..:::::::::..::::::.......:::........::::......:::\r\n*/\r\n\r\n\r\ninterface convertTimersStringToObj_props {\r\n    timersString?: string\r\n    log?: logger\r\n}\r\ntype convertTimersStringToObj_t = (props: convertTimersStringToObj_props) => TIMER_t[] | undefined\r\nexport const convertTimersStringToObj: convertTimersStringToObj_t = ({ timersString, log }) => {\r\n    log?.print(\"timersString to convert = \" + timersString)\r\n    if (timersString) {\r\n        try {\r\n            let timersObject: (Omit<TIMER_t, \"DAYS\"> & { DAYS: number })[] = JSON.parse(timersString)\r\n            if (timersObject && timersObject.length) {\r\n                log?.print(\"timer array size is \" + timersObject.length)\r\n                log?.print(JSON.stringify(timersObject, null, 2))\r\n                const newTimersObject = timersObject.map((timer, index) => {\r\n                    log?.print(\"timer \" + index + \" HR is \" + timer.H)\r\n                    let tempDAYS: [boolean, boolean, boolean, boolean, boolean, boolean, boolean,] = [false, false, false, false, false, false, false]\r\n                    for (let daysIndex = 0; daysIndex < 7; daysIndex++) {\r\n                        tempDAYS[daysIndex] = getBit(daysIndex, timer.DAYS)\r\n                    }\r\n                    let tempTimer: TIMER_t = { ...timer, DAYS: tempDAYS }\r\n                    return tempTimer\r\n                });\r\n                log?.print(JSON.stringify(newTimersObject, null, 2))\r\n                return newTimersObject\r\n            } else {\r\n                log?.print(\"timers array parsing failed\")\r\n            }\r\n        } catch (error) {\r\n            log?.print(\"error >> \" + error)\r\n            //console.log(error)\r\n        }\r\n    }\r\n    return undefined\r\n}\r\n\r\n\r\n/*\r\n'########:'##::::'##:'########::::::'#######::'########::::::::'##::::::::'##:::::'######::'########:'########::\r\n... ##..:: ###::'###: ##.... ##::::'##.... ##: ##.... ##::::::: ##::::::::. ##:::'##... ##:... ##..:: ##.... ##:\r\n::: ##:::: ####'####: ##:::: ##:::: ##:::: ##: ##:::: ##::::::: ##:'#####::. ##:: ##:::..::::: ##:::: ##:::: ##:\r\n::: ##:::: ## ### ##: ########::::: ##:::: ##: ########:::::::: ##:.....::::. ##:. ######::::: ##:::: ########::\r\n::: ##:::: ##. #: ##: ##.. ##:::::: ##:::: ##: ##.... ##:'##::: ##:'#####::: ##:::..... ##:::: ##:::: ##.. ##:::\r\n::: ##:::: ##:.:: ##: ##::. ##::::: ##:::: ##: ##:::: ##: ##::: ##:.....::: ##:::'##::: ##:::: ##:::: ##::. ##::\r\n::: ##:::: ##:::: ##: ##:::. ##::::. #######:: ########::. ######::::::::: ##::::. ######::::: ##:::: ##:::. ##:\r\n:::..:::::..:::::..::..:::::..::::::.......:::........::::......::::::::::..::::::......::::::..:::::..:::::..::\r\n*/\r\n\r\n\r\n\r\ninterface converLocalTimerObjectToBackendString_props {\r\n    timers: TIMER_t[]\r\n    log?: logger\r\n}\r\ntype converLocalTimerObjectToBackendString_t = (props: converLocalTimerObjectToBackendString_props) => string | undefined\r\nexport const converLocalTimerObjectToBackendString: converLocalTimerObjectToBackendString_t = ({ timers, log }) => {\r\n    let newTimers = timers.map((timer) => {\r\n        return {\r\n            ...timer, DAYS: (() => {\r\n                let daysInt = 0\r\n                timer.DAYS.forEach((day, index) => {\r\n                    log?.print(\"before - index is \" + index + \" number is \" + daysInt)\r\n                    daysInt = setBit(index, daysInt, day)\r\n                    log?.print(\"after - index is \" + index + \" number is \" + daysInt)\r\n                });\r\n                return daysInt\r\n            })()\r\n        }\r\n    })\r\n    return JSON.stringify(newTimers)\r\n}\r\n\r\n\r\nconst getBit = (bitIndex: number, bitHolderNumber: number) => {\r\n    let b = false;\r\n    if (bitIndex >= 0) {\r\n        let t = 1;\r\n        let nt = bitHolderNumber >> (bitIndex);\r\n        t = nt & t;\r\n        if (t > 0)\r\n            b = true;\r\n    }\r\n    return b;\r\n}\r\n\r\nconst setBit = (bitIndex: number, bitHolderNumber: number, b: boolean) => {\r\n    if (b) {\r\n        let t = 1;\r\n        t = t << bitIndex;\r\n        bitHolderNumber = bitHolderNumber | t;\r\n    }\r\n    return bitHolderNumber\r\n};","import { HUE_User_fields_no_devices } from \"../user/userGqlFieldsWithNoDevices\"\r\n\r\n\r\n\r\nexport const Device_fields_compactUserWithNoDevices = `id\r\nHostname\r\ndeviceName\r\nMac\r\nIP\r\nssid\r\nhsv\r\ngroupName\r\nlastState\r\ntimers\r\nts\r\nuser{\r\n    ${HUE_User_fields_no_devices}\r\n}`\r\n\r\n\r\n\r\nexport const Device_fields_noUser = `id\r\nHostname\r\ndeviceName\r\nMac\r\nIP\r\nssid\r\nhsv\r\ngroupName\r\nlastState\r\ntimers\r\nts`\r\n\r\n\r\nexport const getDeviceTimer_query = `query($id:ID!){\r\n    HueDevice(where:{id:$id}){\r\n      id\r\n      timers\r\n      ts\r\n    }\r\n  }`\r\n\r\nexport const getDeviceWithMac_query = `query($Mac: String!) {\r\n    allHueDevices(where: { Mac: $Mac }, first: 1) {\r\n    ${Device_fields_noUser}\r\n    }\r\n  }`\r\n\r\n\r\nexport const userUpdateDevicesMutationString = (connect?: boolean) => `mutation(\r\n  $id:ID!\r\n  $deviceID:ID!\r\n){\r\n  updateUser(\r\n    id:$id\r\n    data:{\r\n      devices:{${connect ? \"connect\" : \"disconnect\"}:{id:$deviceID}}\r\n    }\r\n  ){\r\n    id\r\n    devices{\r\n      id\r\n      Mac\r\n      user{\r\n        id\r\n      }\r\n    }\r\n  }\r\n}`\r\n\r\nexport const createNewDevice_mutation = `mutation(\r\n    $userID:ID!\r\n    $Mac:String!,\r\n    $deviceName:String,\r\n    $Hostname:String,\r\n    $IP:String\r\n    $ssid:String\r\n    $hsv:String\r\n    $groupName:String\r\n    $lastState:String\r\n    $timers:String\r\n  ){\r\n    createHueDevice(data:{\r\n      Mac:$Mac,\r\n      deviceName:$deviceName,\r\n      Hostname:$Hostname,\r\n      IP:$IP\r\n      ssid:$ssid\r\n      hsv:$hsv\r\n      groupName:$groupName\r\n      lastState:$lastState\r\n      timers:$timers\r\n      user:{connect:{id:$userID}}\r\n    }){\r\n    ${Device_fields_noUser}\r\n    }\r\n  }`\r\n\r\n\r\nexport const updateDevice_mutation = `mutation(\r\n  $id:ID!,\r\n  $deviceName:String,\r\n\t$IP:String\r\n\t$ssid:String\r\n\t$hsv:String\r\n\t$groupName:String\r\n\t$lastState:String\r\n\t$timers:String\r\n  $ts:Int\r\n){\r\n  updateHueDevice(\r\n    id:$id,\r\n    data:{\r\n    deviceName:$deviceName,\r\n\t\tIP:$IP\r\n\t\tssid:$ssid\r\n\t\thsv:$hsv\r\n\t\tgroupName:$groupName\r\n\t\tlastState:$lastState\r\n\t\ttimers:$timers\r\n    ts:$ts\r\n  }){\r\n   ${Device_fields_noUser}\r\n  }\r\n}`","\r\n\r\n\r\n\r\n/*\r\n:'######::'########:'########::'####:'##::: ##::'######::::::::::'##::::'##::::'##::'######::'##::::'##:::::'#######::'########::::::::'##:'########::'######::'########:\r\n'##... ##:... ##..:: ##.... ##:. ##:: ###:: ##:'##... ##:::::::::. ##::: ##:::: ##:'##... ##: ##:::: ##::::'##.... ##: ##.... ##::::::: ##: ##.....::'##... ##:... ##..::\r\n ##:::..::::: ##:::: ##:::: ##:: ##:: ####: ##: ##:::..:::'#####::. ##:: ##:::: ##: ##:::..:: ##:::: ##:::: ##:::: ##: ##:::: ##::::::: ##: ##::::::: ##:::..::::: ##::::\r\n. ######::::: ##:::: ########::: ##:: ## ## ##: ##::'####:.....::::. ##: #########:. ######:: ##:::: ##:::: ##:::: ##: ########:::::::: ##: ######::: ##:::::::::: ##::::\r\n:..... ##:::: ##:::: ##.. ##:::: ##:: ##. ####: ##::: ##::'#####::: ##:: ##.... ##::..... ##:. ##:: ##::::: ##:::: ##: ##.... ##:'##::: ##: ##...:::: ##:::::::::: ##::::\r\n'##::: ##:::: ##:::: ##::. ##::: ##:: ##:. ###: ##::: ##::.....::: ##::: ##:::: ##:'##::: ##::. ## ##:::::: ##:::: ##: ##:::: ##: ##::: ##: ##::::::: ##::: ##:::: ##::::\r\n. ######::::: ##:::: ##:::. ##:'####: ##::. ##:. ######:::::::::: ##:::: ##:::: ##:. ######::::. ###:::::::. #######:: ########::. ######:: ########:. ######::::: ##::::\r\n:......::::::..:::::..:::::..::....::..::::..:::......:::::::::::..:::::..:::::..:::......::::::...:::::::::.......:::........::::......:::........:::......::::::..:::::\r\n*/\r\n\r\nimport { logger } from \"../../util/logger\";\r\n\r\n\r\ninterface getHsvFromString_props {\r\n    hsvString: string\r\n    log?: logger\r\n}\r\ntype getHsvFromString_t = (props: getHsvFromString_props) => { h: number, s: number, v: number } | undefined\r\nexport const getHsvFromString: getHsvFromString_t = ({ hsvString, log }) => {\r\n    const hsvStringSplitArray = hsvString.split(\"-\")\r\n    const hsv = { h: 0, s: 0, v: 0 }\r\n    if (hsvStringSplitArray.length == 3) {\r\n        hsvStringSplitArray.forEach((element, index) => {\r\n            log?.print(\"int at index \" + index + \" is \" + parseInt(element))\r\n        });\r\n        hsv.h = parseInt(hsvStringSplitArray[0])\r\n        hsv.s = parseInt(hsvStringSplitArray[1])\r\n        hsv.v = parseInt(hsvStringSplitArray[2])\r\n        return hsv\r\n    } else {\r\n        console.log(\"invalid hsv string\")\r\n    }\r\n    return undefined\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n'########:'########::'######::'########:::::'######:::'#######::'########::'########:\r\n... ##..:: ##.....::'##... ##:... ##..:::::'##... ##:'##.... ##: ##.... ##: ##.....::\r\n::: ##:::: ##::::::: ##:::..::::: ##::::::: ##:::..:: ##:::: ##: ##:::: ##: ##:::::::\r\n::: ##:::: ######:::. ######::::: ##::::::: ##::::::: ##:::: ##: ##:::: ##: ######:::\r\n::: ##:::: ##...:::::..... ##:::: ##::::::: ##::::::: ##:::: ##: ##:::: ##: ##...::::\r\n::: ##:::: ##:::::::'##::: ##:::: ##::::::: ##::: ##: ##:::: ##: ##:::: ##: ##:::::::\r\n::: ##:::: ########:. ######::::: ##:::::::. ######::. #######:: ########:: ########:\r\n:::..:::::........:::......::::::..:::::::::......::::.......:::........:::........::\r\n*/\r\n\r\n/* {\r\n    (() => {\r\n        console.log(\"test code begin\")\r\n        let hsv = getHsvFromString({ hsvString: \"0-100-110\" })\r\n        if (hsv) {\r\n            console.log(\"h is \" + hsv?.h + \", s is \" + hsv?.s + \", v is \" + hsv?.v)\r\n        } else {\r\n            console.log(\"could not convert string to hsv\")\r\n        }\r\n    })()\r\n} */\r\n\r\n/* {\r\n    (() => {\r\n        //const timersString = \"[{\\\"H\\\":\\\"11\\\",\\\"M\\\":\\\"30\\\",\\\"DT\\\":0,\\\"DAYS\\\":1234,\\\"ET\\\":0,\\\"STATUS\\\":1234}, {\\\"H\\\":\\\"12\\\",\\\"M\\\":\\\"30\\\",\\\"DT\\\":0,\\\"DAYS\\\":1234,\\\"ET\\\":0,\\\"STATUS\\\":1234}]\"\r\n        //let timers = convertTimersStringToObj({ timersString })\r\n        let daysNumber = 0\r\n        for (let index = 0; index < 7; index++) {\r\n            daysNumber = setBit(index, daysNumber, true)\r\n            console.log(\"number now is \" + daysNumber)\r\n        }\r\n    })()\r\n} */","/**\r\n * @description gql `userFields` wit no devices children\r\n * \r\n * @imp this module is exported from here to break the import cycle between `../user/gql.ts` and `../device/gql.ts` \r\n */\r\nexport const HUE_User_fields_no_devices = `id\r\nuserName\r\nemail\r\nts`","export * from \"./user\"\r\nexport * from \"./device\"\r\nexport * from \"./timer\"\r\n\r\n\r\n\r\nexport interface err_i { errCode: \"UNKNOWN_ERR\" | \"NO_USER\" | \"USER_CREATION_FAILED\" | \"DUPLICATE_EMAIL\" | \"PASSWORD_MIN_LENGTH\", errMsg: string, error: any }","export * from \"./types\"\r\nexport * from \"./helper\"\r\nexport * from \"./gql\"\r\n","import UNIVERSALS from \"../..\";\r\n\r\ntype convert_user_backendToLocal_t = (props: { user: UNIVERSALS.GLOBALS.User_t }) => UNIVERSALS.GLOBALS.USER_t\r\nexport const convert_user_backendToLocal: convert_user_backendToLocal_t = ({ user }) => {\r\n    return {\r\n        ...user,\r\n        localTimeStamp: user.ts\r\n    }\r\n}\r\n\r\n\r\n\r\ntype convert_user_localToBackend_t = (props: { user: UNIVERSALS.GLOBALS.USER_t }) => UNIVERSALS.GLOBALS.User_t\r\nexport const convert_user_localToBackend: convert_user_localToBackend_t = ({ user }) => {\r\n    return {\r\n        ...user,\r\n        id: user.id ? user.id : \"\",\r\n        ts: user.localTimeStamp\r\n    }\r\n}","import { Device_fields_noUser } from \"../device/gql\"\r\nimport { HUE_User_fields_no_devices } from \"./userGqlFieldsWithNoDevices\"\r\n\r\nexport const HUE_User_fields = `id\r\nuserName\r\nemail\r\nts\r\ndevices{\r\n  ${Device_fields_noUser}\r\n}`\r\n\r\n/** \r\n * @param email email id to filter user\r\n * \r\n * @description find first user matching email\r\n * \r\n * @returns USER` object WithDeviceList if found else empty array\r\n */\r\nexport const HUE_User_queryWithEmail_ = (`query(\r\n$email:String!\r\n){\r\nallUsers(where:{email:$email}, first:1){\r\n  ${HUE_User_fields}\r\n}\r\n}`)\r\n\r\n\r\nexport const User_queryWithId = `query(\r\n  $id:ID!\r\n){\r\n  User(where:{id:$id}){\r\n    ${HUE_User_fields}\r\n\t}\r\n}`\r\n\r\n/**\r\n * @param userName \r\n * @param email `isUnique` `isRequired`\r\n * @param password `min length 8` `isRequired` for user providing email. not available for temp User\r\n * \r\n * @description mutation query for adding new user\r\n * \r\n * @returns USER` object WithDeviceList if found else empty array\r\n */\r\nexport const HUE_User_createMutation_ = (`mutation(\r\n  $userName:String,\r\n  $email:String!,\r\n  $password:String\r\n){\r\n  createUser(data:{\r\n    userName:$userName,\r\n    email:$email,\r\n    password:$password\r\n  }){\r\n    ${HUE_User_fields_no_devices}\r\n  }\r\n}`)\r\n\r\n\r\n/**\r\n * @param email\r\n * @param password\r\n * \r\n * @returns `HUE_User_t` with devices\r\n */\r\nexport const HUE_User_authenticateMutation_ = (`mutation(\r\n  $email:String!,\r\n  $password:String!\r\n){\r\n  authenticateUserWithPassword(email:$email, password:$password){\r\n    item{\r\n      ${HUE_User_fields}\r\n    }\r\n  }\r\n}`)\r\n\r\nexport const HUE_User_updateMutation_ = (`mutation($id:ID!, $password:String, $userName:String){\r\n  updateUser(id:$id, data:{\r\n    password:$password,\r\n    userName:$userName\r\n  }){\r\n    ${HUE_User_fields}\r\n  }\r\n}`)","export * from \"./types\"\r\nexport * from \"./gql\"\r\nexport * from \"./helper\"\r\nimport * as deviceApi from \"./api\"\r\n\r\nexport { deviceApi }","import { DEVICE_t, Device_t } from \"../globalTypes\"\r\nimport { logger } from \"../../../util/logger\"\r\nimport { convertTimersStringToObj, converLocalTimerObjectToBackendString } from \"../timer\"\r\nimport { getHsvFromString } from \"../../helper/color\"\r\n\r\ntype convert_Devices_backendToLocal_t = (props: { devices: Device_t[], socket?: any, log?: logger }) => DEVICE_t[]\r\n//@ts-ignore\r\nexport const convert_Devices_backendToLocal: convert_Devices_backendToLocal_t = ({ devices, socket = undefined, log }) => {\r\n    return devices.map((device, d_index) => {\r\n        return convert_Device_backendToLocal({ device })\r\n    })\r\n}\r\n\r\ntype convert_Device_backendToLocal_t = (props: { device: Device_t, log?: logger }) => DEVICE_t\r\nexport const convert_Device_backendToLocal: convert_Device_backendToLocal_t = ({ device, log }) => {\r\n    let temp_hsv = getHsvFromString({ hsvString: device.hsv })\r\n    let temp_timers = convertTimersStringToObj({ timersString: device.timers })\r\n    return {\r\n        ...device,\r\n        hsv: temp_hsv ? temp_hsv : { h: 0, s: 100, v: 100 },\r\n        timers: temp_timers ? temp_timers : [],\r\n        localTimeStamp: device.ts\r\n    }\r\n}\r\n\r\ntype convert_Device_LocalToBackend_t = (props: { device: DEVICE_t, log?: logger }) => Device_t\r\nexport const convert_Device_LocalToBackend: convert_Device_LocalToBackend_t = ({ device, log }) => {\r\n    const newDevice: Device_t = {\r\n        id: device.id ? device.id : \"\",\r\n        hsv: device.hsv.h + \"-\" + device.hsv.s + \"-\" + device.hsv.v,\r\n        IP: device.IP,\r\n        Hostname: device.Hostname,\r\n        deviceName: device.deviceName,\r\n        Mac: device.Mac,\r\n        ts: device.localTimeStamp\r\n    }\r\n    if (device.timers)\r\n        newDevice.timers = converLocalTimerObjectToBackendString({ timers: device.timers })\r\n    return newDevice\r\n}\r\n\r\ntype convert_Device_LocalToBackend_returnNoId_t = (props: { device: DEVICE_t, log?: logger }) => Omit<Device_t, \"id\">\r\nexport const convert_Device_LocalToBackend_forUpdateMutation: convert_Device_LocalToBackend_returnNoId_t = ({ device, log }) => {\r\n    //@ts-ignore\r\n    const newDevice: Omit<Device_t, \"id\"> = {\r\n        hsv: device.hsv.h + \"-\" + device.hsv.s + \"-\" + device.hsv.v,\r\n        IP: device.IP,\r\n        deviceName: device.deviceName,\r\n        ts: device.localTimeStamp\r\n    }\r\n    if (device.timers)\r\n        newDevice.timers = converLocalTimerObjectToBackendString({ timers: device.timers })\r\n    return newDevice\r\n}","export enum _DEVICE_WIFI_STATE_e {\r\n    DEVICE_WL_NO_SHIELD = 255,   // for compatibility with WiFi Shield library\r\n    DEVICE_WL_IDLE_STATUS = 0,\r\n    DEVICE_WL_NO_SSID_AVAIL = 1,\r\n    DEVICE_WL_SCAN_COMPLETED = 2,\r\n    DEVICE_WL_CONNECTED = 3,\r\n    DEVICE_WL_CONNECT_FAILED = 4,\r\n    DEVICE_WL_CONNECTION_LOST = 5,\r\n    DEVICE_WL_DISCONNECTED = 6\r\n}\r\n\r\n\r\n\r\nexport enum _DEVICE_WIFI_API_ERRORS_e {\r\n    ERR_WIFI_UNABLE_CONNECT_TO_SSID = \"ERR-041\", //wifi unable to connect to SSID\r\n    ERR_WIFI_ALREADY_PAIRED_STATE = \"ERR-042\",   //wifi cannot connect to another wifi, as already paired\r\n    ERR_WIFI_BUSY_IN_PAIRING = \"ERR-043\",        //wifi cannot connect to another wifi, busy pairing\r\n    ERR_WIFI_PAIRING_UNEXPECTED = \"ERR-044\",     //wifi cannot connect to another wifi, unexpected error\r\n    ERR_WIFI_PAIRING_TIMEOUT = \"ERR-045\",     //wifi connection timeout\r\n    ERR_WIFI_PAIRING_PASS_INCORRECT = \"ERR-046\", //wifi password incorrect\r\n    ERR_WIFI_SSID_INVALID = \"ERR-047\",    //wifi SSID not found\r\n    ERR_WIFI_CNF_NOT_SAVED = \"ERR-048\"          //wifi SSID not found\r\n}","module.exports = __webpack_public_path__ + \"static/media/icon-no-bg.45a53ee9.png\";","export enum _reduxConstant {\r\n  DEVICELIST_REDUX = \"ACT_00\",\r\n  DELETED_DEVICELIST_REDUX = \"ACT_00_1\",\r\n  DEVICELIST_SAGA = \"ACT_01\",\r\n  DEVICE_SAGA = \"ACT_02\",\r\n  DEVICELIST_DB_SAGA = \"ACT_03\",\r\n  APPCTX_REDUX = \"ACT_04\",\r\n  APPCTX_SAGA = \"ACT_050-\",\r\n  APPCTX_DB_SAGA = \"ACT_055\",\r\n  USER_REDUX = \"ACT_06-0\",\r\n  USER_SAGA = \"ACT_6-1\",\r\n  BG_SERVICE_SAGA = \"ACT_07\",\r\n  HB_DEVICELIST_REDUX = \"ACT_08\",\r\n  HB_DEVICELIST_MSG_SENT = \"ACT_09\",\r\n  HB_DEVICELIST_MSG_REC = \"ACT_10\",\r\n  HB_SOCKET_LIST = \"ACT_11\",\r\n  HB_SOCKET_LIST_CLEAR = \"ACT_12\",\r\n  COLOR_UPDATE_SAGA = \"ACT_13\",\r\n}","import { call, CallEffect, PutEffect, takeEvery, takeLatest } from \"redux-saga/effects\";\r\nimport { _reduxConstant } from \"../ReduxConstant\";\r\n\r\n\r\nexport interface __baseAction_Props<R> {\r\n    props: R\r\n}\r\ntype _getBaseAction_t<R> = (props: R) => __baseAction_Props<R> & { type: _reduxConstant }\r\nexport const _getBaseAction: <R>(type: _reduxConstant) => _getBaseAction_t<R> = (type) => {\r\n    //console.log(\"[get base action]\")\r\n    return (props) => {\r\n        //console.log(\"[base action called]\" + JSON.stringify(props))\r\n        return {\r\n            type,\r\n            props,\r\n        } as const;\r\n    }\r\n\r\n}\r\n\r\ninterface _getWorker_t<T> {\r\n    type: _reduxConstant\r\n    callable: (props: T) => any\r\n    shouldTakeLatest?: boolean\r\n}\r\n/**\r\n * @param type redux action type \r\n * @param callable generator function to be called upon action is dispatched\r\n * @optional `shouldTakeLatest` tale latest if true, `defaut false`, take Every in default case\r\n * \r\n * @returns \r\n *  - `watcher` yet to be registered saga watcher\r\n *  - `actionCaller` action caller for perticular watcher\r\n */\r\nexport const _getWorker: <R>(_props: _getWorker_t<R>) => [any, _getBaseAction_t<R>] = <R>(_props: _getWorker_t<R>) => {\r\n    //console.log(\"[GET WORKER]\")\r\n\r\n    const baseAction = _getBaseAction<R>(_props.type)\r\n\r\n    const worker = function* _baseWorker(props: __baseAction_Props<R>) {\r\n        //console.log(\"[BASE WORKER] >> \" + JSON.stringify(props))\r\n        if (props?.props)\r\n            yield call(_props.callable, props.props)\r\n    }\r\n\r\n    let watcher\r\n    if (_props.shouldTakeLatest)\r\n        watcher = function* _baseWatcher() {\r\n            //console.log(\"[BASE WATCHER] takeLatest\")\r\n            //@ts-ignore\r\n            yield takeLatest(_props.type, worker);\r\n        }\r\n    else\r\n        watcher = function* _baseWatcher() {\r\n            //console.log(\"[BASE WORKER] takeEvery\")\r\n            //@ts-ignore\r\n            yield takeEvery(_props.type, worker);\r\n        }\r\n\r\n\r\n    return [\r\n        watcher,\r\n        baseAction\r\n    ]\r\n}","import UNIVERSALS from \"../../@universals\";\r\nimport { getSafeDeviceList } from \"../deviceListUtil\";\r\n\r\n/** @deprecated */\r\nexport type logFun_t = (s: string) => void;\r\n\r\nexport enum printType {\r\n    CONTEXT,\r\n    IMPMSG,\r\n    MSG,\r\n    ERR,\r\n}\r\n\r\n\r\nexport class logger {\r\n    prefix: string\r\n    printAll = false\r\n    printable = [\r\n        //\"MAIN ACTIVITY\", /* App.ts */\r\n        //\"BG SERVICE\",\r\n        //\"DEVICE MODES SCREEN\", /* device modes screen in device page */\r\n        //\"DEVICE COLOR PICKER\",/* DEVICE COLOR PICKER PAGE */\r\n        //\"DASHBOARD\",/* DAHSBOARD SCREEN */\r\n        //\"LOGIN/SIGNUP\", /* LOGIN/SIGNUP screen */\r\n        //\"TEST FUNCTION\", /* testfunction prints */\r\n        //\"USER PROFILE\",\r\n        //\"APP SETTING\",\r\n        //\"PAIRING_SCREEN\",\r\n        \"SOCKET TEST\"\r\n    ]\r\n    /**\r\n     * \r\n     * @param prefix Class Prefix\r\n     */\r\n    constructor(prefix?: string, _log?: logger) {\r\n        let temp = (_log ? _log?.getPrefix() : \"\")\r\n        this.prefix = temp + \" [[ \" + prefix?.toUpperCase() + \" ]]\"\r\n    }\r\n\r\n    /** @deprecated */\r\n    addStack = (s: string) => {\r\n        this.prefix += \" | [\" + s + \"]\"\r\n    }\r\n    /** @deprecated */\r\n    removeStack = () => {\r\n        this.prefix = this.prefix.substring(0, this.prefix.lastIndexOf('|') - 1)\r\n    }\r\n\r\n    /** return class prefix --without bracket */\r\n    getPrefix = () => {\r\n        return this.prefix ? this.prefix : \"\"\r\n    }\r\n\r\n    /**\r\n     * @description print without prefix\r\n     */\r\n    _print = (s: string, type?: printType) => {\r\n        if (this.canPrint())\r\n            console.log(\" \" + s + \" \")\r\n        return this\r\n    }\r\n\r\n    print = (s: string, type?: printType) => {\r\n        if (this.canPrint())\r\n            console.log(\" \" + this.prefix + \" >> \" + s + \" \")\r\n        return this\r\n    }\r\n\r\n    printPretty = (s: string) => {\r\n        if (this.canPrint())\r\n            this.print(JSON.stringify(s, null, 2))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * @description print without prefix\r\n     */\r\n    _printPretty = (s: object | undefined) => {\r\n        if (this.canPrint() && s)\r\n            console.log(\" \" + JSON.stringify(s, null, 2) + \" \")\r\n        return this\r\n    }\r\n\r\n    /** @deprecated */\r\n    printDeviceList = (deviceList?: UNIVERSALS.GLOBALS.DEVICE_t[],) => {\r\n        /*   if (!deviceList)\r\n              deviceList = reduxStore.store.getState().deviceReducer.deviceList\r\n          console.log(this.owner + \" >> \" + JSON.stringify(getSafeDeviceList(deviceList), null, 2)) */\r\n    }\r\n\r\n    canPrint = () => {\r\n        if (this.printAll)\r\n            return true\r\n        let cprint = false\r\n        this.printable.forEach(item => {\r\n            if (this.prefix.includes(item.toUpperCase()))\r\n                cprint = true\r\n        });\r\n        return cprint\r\n    }\r\n}\r\n\r\n\r\nexport const logFun: (S: string, _log?: logFun_t, initial?: boolean) => logFun_t = (S, _log, initial) => {\r\n    let log: logFun_t\r\n    if (initial)\r\n        log = (s) => { console.log(\"[\" + S.toUpperCase() + \"] \" + s) }\r\n    else\r\n        log = (s) => { _log && _log(\"|\" + S.toUpperCase() + \"| \" + s) }\r\n    return log\r\n}","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\n/**\r\n *\r\n * @param {* key_<String> >> dataKey} key\r\n * @param {* value_<Object> >> dataSet} value\r\n */\r\nexport const storeData = async (key: \"appCTX\" | \"deviceList\" | \"deletedDeviceList\", value: Object) => {\r\n  //console.log(\"SAVING DATA >> \" + JSON.stringify(value))\r\n  try {\r\n    await AsyncStorage.setItem(key, JSON.stringify(value));\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param {* key_<String> >> dataKey for the dataSet to be resolved} key\r\n *\r\n * @returns {* null:: in case dataSet doesn't exists}\r\n * @returns {* Object: if data exists}\r\n */\r\nexport const getData = async (key: \"appCTX\" | \"deviceList\" | \"deletedDeviceList\") => {\r\n  try {\r\n    const jsonValue = await AsyncStorage.getItem(key);\r\n    return jsonValue != null ? JSON.parse(jsonValue) : null;\r\n  } catch (e) {\r\n    console.warn(e);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const saveAppCTX = (props: any) => {\r\n  console.log(\"appCTX data to save => \" + JSON.stringify(props));\r\n  new Promise(() => {\r\n    storeData(\"appCTX\", props);\r\n  });\r\n};\r\n","import { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _getBaseAction, __baseAction_Props } from \"../../sagas/sagaBaseWorkers\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport { getData, storeData } from \"../../../services/db/storage\";\r\n\r\n\r\nexport interface _reducer_i {\r\n  deviceList: UNIVERSALS.GLOBALS.DEVICE_t[]\r\n  deletedDevices: UNIVERSALS.GLOBALS.DEVICE_t[]\r\n}\r\n\r\nexport const initialState: _reducer_i = {\r\n  deviceList: [],\r\n  deletedDevices: []\r\n};\r\n\r\nexport const _reducer = (\r\n  state: _reducer_i = initialState,\r\n  action: _actionReturnTypes\r\n) => {\r\n  switch (action.type) {\r\n\r\n    case _reduxConstant.DEVICELIST_REDUX:\r\n      action.props.log?.print(\"updating new newDeviceList to store >> \" + JSON.stringify(action.props.deviceList))\r\n      return Object.assign({}, state, { deviceList: action.props.deviceList.length ? [...action.props.deviceList] : [] })\r\n      break;\r\n\r\n    case _reduxConstant.DELETED_DEVICELIST_REDUX:\r\n      action.props.log?.print(\"updating DELETED DeviceList to store >> \" + JSON.stringify(action.props.deletedDeviceList))\r\n      if (!action.props.isDbState)\r\n        storeData(\"deletedDeviceList\", action.props.deletedDeviceList)\r\n      return Object.assign({}, state, { deletedDevices: action.props.deletedDeviceList.length ? [...action.props.deletedDeviceList] : [] })\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n/************************************************************************************************************************* \r\n * /// container Redux Actions\r\n *************************************************************************************************************************/\r\ninterface _deviceListReduxAction_Props {\r\n  deviceList: UNIVERSALS.GLOBALS.DEVICE_t[];\r\n  log?: logger\r\n}\r\ninterface _deletedDeviceListReduxAction_Props {\r\n  deletedDeviceList: UNIVERSALS.GLOBALS.DEVICE_t[];\r\n  isDbState?: boolean\r\n  log?: logger\r\n}\r\nexport const _actions = {\r\n  deviceListRedux: _getBaseAction<_deviceListReduxAction_Props>(_reduxConstant.DEVICELIST_REDUX),\r\n  deletedDeviceListRedux: _getBaseAction<_deletedDeviceListReduxAction_Props>(_reduxConstant.DELETED_DEVICELIST_REDUX)\r\n}\r\n\r\nexport type _actionReturnTypes =\r\n  | __baseAction_Props<_deviceListReduxAction_Props> & {\r\n    type: _reduxConstant.DEVICELIST_REDUX\r\n  }\r\n  | __baseAction_Props<_deletedDeviceListReduxAction_Props> & {\r\n    type: _reduxConstant.DELETED_DEVICELIST_REDUX\r\n  }\r\n","export const _delay = (ms: number) => new Promise((res) => setTimeout(res, ms));\r\n","import { put, call, select } from \"redux-saga/effects\";\r\nimport { _delay } from \"../../sagas/helper\";\r\nimport { storeData } from \"../../../services/db/storage\";\r\nimport { _getWorker } from '../../sagas/sagaBaseWorkers'\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _actions as _deviceListReduxAction } from \"../reducer\"\r\nimport { _appState } from \"../../rootReducer\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\n\r\n\r\n/*\r\n'########::'########:'##::::'##:'####::'######::'########:'##:::::::'####::'######::'########::::'##::::'##:'########::'########:::::'###::::'########:'########:::::'######:::::'###:::::'######::::::'###::::\r\n ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....:: ##:::::::. ##::'##... ##:... ##..::::: ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....:::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##::::::: ##:::::::: ##:: ##:::..::::: ##::::::: ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######::: ##:::::::: ##::. ######::::: ##::::::: ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######::::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...:::: ##:::::::: ##:::..... ##:::: ##::::::: ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::::::..... ##: #########: ##::: ##:: #########:\r\n ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##::::::: ##:::::::: ##::'##::: ##:::: ##::::::: ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##::::::::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n ########:: ########:::. ###::::'####:. ######:: ########: ########:'####:. ######::::: ##:::::::. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n........:::........:::::...:::::....:::......:::........::........::....:::......::::::..:::::::::.......:::..:::::::::........:::..:::::..:::::..:::::........::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\n\r\ninterface _deviceListSagaAction_Props {\r\n    deviceList: UNIVERSALS.GLOBALS.DEVICE_t[]\r\n    saveToDB?: boolean\r\n    log?: logger\r\n}\r\n/** \r\n * `_deviceListSaga_watcher`\r\n *              - @param saveToDB?: `default - true` wetaher to save to local database or not\r\n *              - @param log?: logger\r\n * `_deviceListSaga_action`\r\n */\r\nconst [_deviceListSaga_watcher, _deviceListSaga_action] = _getWorker<_deviceListSagaAction_Props>({\r\n    type: _reduxConstant.DEVICELIST_SAGA,\r\n    callable: function* containersWorker({ deviceList, saveToDB = true, log }) {\r\n        log?.print(\"newDeviceList >> \" + JSON.stringify(deviceList))\r\n        yield put(_deviceListReduxAction.deviceListRedux({ deviceList, log: log ? new logger(\"DEVICELIST-REDUX-REDUCER\", log) : undefined }));\r\n        if (saveToDB)\r\n            yield put(_________deviceListDB_action({ deviceList, log }));\r\n    }\r\n})\r\n\r\n/*\r\n:'######::'####:'##::: ##::'######:::'##:::::::'########::::'########::'########:'##::::'##:'####::'######::'########::::'##::::'##:'########::'########:::::'###::::'########:'########:::::'######:::::'###:::::'######::::::'###::::\r\n'##... ##:. ##:: ###:: ##:'##... ##:: ##::::::: ##.....::::: ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....::::: ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....:::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n ##:::..::: ##:: ####: ##: ##:::..::: ##::::::: ##:::::::::: ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##:::::::::: ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n. ######::: ##:: ## ## ##: ##::'####: ##::::::: ######:::::: ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######:::::: ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######::::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n:..... ##:: ##:: ##. ####: ##::: ##:: ##::::::: ##...::::::: ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...::::::: ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::::::..... ##: #########: ##::: ##:: #########:\r\n'##::: ##:: ##:: ##:. ###: ##::: ##:: ##::::::: ##:::::::::: ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##:::::::::: ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##::::::::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n. ######::'####: ##::. ##:. ######::: ########: ########:::: ########:: ########:::. ###::::'####:. ######:: ########::::. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n:......:::....::..::::..:::......::::........::........:::::........:::........:::::...:::::....:::......:::........::::::.......:::..:::::::::........:::..:::::..:::::..:::::........::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\n\r\n/** \r\n * @param device\r\n * @param saveToDB `default true` wetaher to save to local database or not\r\n * @param log?: logger\r\n */\r\ninterface _deviceSagaAction_props {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t\r\n    saveToDB?: boolean // `boolean` default `true` if needs to be saved to DB \r\n    log?: logger\r\n}\r\nconst [_deviceSaga_watcher, _deviceSaga_action] = _getWorker<_deviceSagaAction_props>({\r\n    type: _reduxConstant.DEVICE_SAGA,\r\n    callable: function* containersWorker({ device, saveToDB = true, log }) {\r\n        log?.print(\"updaing list > \" + JSON.stringify(device))\r\n        let devicelist: UNIVERSALS.GLOBALS.DEVICE_t[] = yield select((state: _appState) => state.deviceReducer.deviceList)\r\n        let preDevice = devicelist.find(item => item.Mac == device.Mac)\r\n        if (preDevice) {\r\n            log?.print(\"updating device\")\r\n            devicelist = devicelist.map(_device => {\r\n                if (_device.Mac == device.Mac) {\r\n                    return device\r\n                }\r\n                return _device\r\n            })\r\n        }\r\n        else {\r\n            log?.print(\"adding device as new\")\r\n            devicelist.push(device)\r\n        }\r\n        yield put(_deviceListReduxAction.deviceListRedux({ deviceList: devicelist, log }));\r\n        if (saveToDB)\r\n            yield put(_________deviceListDB_action({ deviceList: devicelist, log }));\r\n    }\r\n})\r\n\r\n\r\n/*\r\n'########::'########:'##::::'##:'####::'######::'########:'##:::::::'####::'######::'########::::'########::'########::::::'######:::::'###:::::'######::::::'###::::\r\n ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....:: ##:::::::. ##::'##... ##:... ##..::::: ##.... ##: ##.... ##::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##::::::: ##:::::::: ##:: ##:::..::::: ##::::::: ##:::: ##: ##:::: ##:::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######::: ##:::::::: ##::. ######::::: ##::::::: ##:::: ##: ########:::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...:::: ##:::::::: ##:::..... ##:::: ##::::::: ##:::: ##: ##.... ##:::::..... ##: #########: ##::: ##:: #########:\r\n ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##::::::: ##:::::::: ##::'##::: ##:::: ##::::::: ##:::: ##: ##:::: ##::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n ########:: ########:::. ###::::'####:. ######:: ########: ########:'####:. ######::::: ##::::::: ########:: ########:::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n........:::........:::::...:::::....:::......:::........::........::....:::......::::::..::::::::........:::........:::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\n\r\n\r\nconst [_deviceListDB_watcher, _________deviceListDB_action] = _getWorker<_deviceListSagaAction_Props>({\r\n    type: _reduxConstant.DEVICELIST_DB_SAGA,\r\n    callable: function* containersDBWorker({ deviceList, log }) {\r\n        log?.print(\"DEVICE DB SAGA WORKER\")\r\n        yield call(_delay, 1000);\r\n        log?.print(\"now storing containers to DB >> \" + JSON.stringify(deviceList))\r\n        yield storeData(\"deviceList\", deviceList);\r\n    }\r\n})\r\n\r\n\r\n\r\nexport { _deviceListSaga_watcher, _deviceListSaga_action, _deviceSaga_watcher, _deviceSaga_action, _deviceListDB_watcher }","/**\r\n * @deprecated\r\n * @param h \r\n * @param s \r\n * @param v \r\n * \r\n * @returns [R, G, B] ranging 1-255\r\n */\r\nconst convertHSVToRgb: (h: number, s: number, v: number) => [number, number, number] = (\r\n  h,\r\n  s,\r\n  v\r\n) => {\r\n  var r, g, b;\r\n  var i;\r\n  var f, p, q, t;\r\n\r\n  // Make sure our arguments stay in-range\r\n  h = Math.max(0, Math.min(360, h));\r\n  s = Math.max(0, Math.min(100, s));\r\n  v = Math.max(0, Math.min(100, v));\r\n\r\n  // We accept saturation and value arguments from 0 to 100 because that's\r\n  // how Photoshop represents those values. Internally, however, the\r\n  // saturation and value are calculated from a range of 0 to 1. We make\r\n  // That conversion here.\r\n  s /= 100;\r\n  v /= 100;\r\n\r\n  if (s == 0) {\r\n    // Achromatic (grey)\r\n    r = g = b = v;\r\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n  }\r\n\r\n  h /= 60; // sector 0 to 5\r\n  i = Math.floor(h);\r\n  f = h - i; // factorial part of h\r\n  p = v * (1 - s);\r\n  q = v * (1 - s * f);\r\n  t = v * (1 - s * (1 - f));\r\n\r\n  switch (i) {\r\n    case 0:\r\n      r = v;\r\n      g = t;\r\n      b = p;\r\n      break;\r\n\r\n    case 1:\r\n      r = q;\r\n      g = v;\r\n      b = p;\r\n      break;\r\n\r\n    case 2:\r\n      r = p;\r\n      g = v;\r\n      b = t;\r\n      break;\r\n\r\n    case 3:\r\n      r = p;\r\n      g = q;\r\n      b = v;\r\n      break;\r\n\r\n    case 4:\r\n      r = t;\r\n      g = p;\r\n      b = v;\r\n      break;\r\n\r\n    default:\r\n      // case 5:\r\n      r = v;\r\n      g = p;\r\n      b = q;\r\n  }\r\n\r\n  return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\r\n};\r\n\r\n/**\r\n * \r\n * @param h \r\n * @param s \r\n * @param v \r\n * \r\n * @returns [R, G, B] ranging 1-100\r\n */\r\nconst convertHSVToRgbShortRange: (h: number, s: number, v: number) => [number, number, number] = (\r\n  h,\r\n  s,\r\n  v\r\n) => {\r\n  var r, g, b;\r\n  var i;\r\n  var f, p, q, t;\r\n\r\n  // Make sure our arguments stay in-range\r\n  h = Math.max(0, Math.min(360, h));\r\n  s = Math.max(0, Math.min(100, s));\r\n  v = Math.max(0, Math.min(100, v));\r\n\r\n  // We accept saturation and value arguments from 0 to 100 because that's\r\n  // how Photoshop represents those values. Internally, however, the\r\n  // saturation and value are calculated from a range of 0 to 1. We make\r\n  // That conversion here.\r\n  s /= 100;\r\n  v /= 100;\r\n\r\n  if (s == 0) {\r\n    // Achromatic (grey)\r\n    r = g = b = v;\r\n    return [Math.round(r * 100), Math.round(g * 100), Math.round(b * 100)];\r\n  }\r\n\r\n  h /= 60; // sector 0 to 5\r\n  i = Math.floor(h);\r\n  f = h - i; // factorial part of h\r\n  p = v * (1 - s);\r\n  q = v * (1 - s * f);\r\n  t = v * (1 - s * (1 - f));\r\n\r\n  switch (i) {\r\n    case 0:\r\n      r = v;\r\n      g = t;\r\n      b = p;\r\n      break;\r\n\r\n    case 1:\r\n      r = q;\r\n      g = v;\r\n      b = p;\r\n      break;\r\n\r\n    case 2:\r\n      r = p;\r\n      g = v;\r\n      b = t;\r\n      break;\r\n\r\n    case 3:\r\n      r = p;\r\n      g = q;\r\n      b = v;\r\n      break;\r\n\r\n    case 4:\r\n      r = t;\r\n      g = p;\r\n      b = v;\r\n      break;\r\n\r\n    default:\r\n      // case 5:\r\n      r = v;\r\n      g = p;\r\n      b = q;\r\n  }\r\n\r\n  return [Math.round(r * 100), Math.round(g * 100), Math.round(b * 100)];\r\n};\r\n\r\n/** \r\n * @deprecated\r\n */\r\nconst _convertRGBToHex: (r: number, g: number, b: number) => string = (\r\n  r,\r\n  g,\r\n  b\r\n) => {\r\n  var _r = r.toString(16);\r\n  var _g = g.toString(16);\r\n  var _b = b.toString(16);\r\n\r\n  if (_r.length == 1) _r = \"0\" + r;\r\n  if (_g.length == 1) _g = \"0\" + g;\r\n  if (_b.length == 1) _b = \"0\" + b;\r\n\r\n  return \"#\" + _r + _g + _b;\r\n};\r\n\r\nconst convertRGBToHex: (hsv: [number, number, number]) => string = (hsv) => {\r\n  var _r = hsv[0].toString(16);\r\n  var _g = hsv[1].toString(16);\r\n  var _b = hsv[2].toString(16);\r\n\r\n  if (_r.length == 1) _r = \"0\" + _r;\r\n  if (_g.length == 1) _g = \"0\" + _g;\r\n  if (_b.length == 1) _b = \"0\" + _b;\r\n\r\n  return \"#\" + _r + _g + _b;\r\n};\r\n\r\nexport { convertHSVToRgb, _convertRGBToHex, convertHSVToRgbShortRange, convertRGBToHex };\r\n","import { State } from \"react-native-gesture-handler\";\r\nimport { put, select } from \"redux-saga/effects\";\r\nimport { convertHSVToRgbShortRange, convertRGBToHex } from \"../../../util/Color\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { _appState } from \"../../rootReducer\";\r\nimport { HBSocketList_t } from \"../../helperSideEffect/reducers/HBReducer\";\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _delay } from \"../../sagas/helper\";\r\nimport { _getWorker } from '../../sagas/sagaBaseWorkers';\r\nimport { _deviceListSaga_action } from \"./deviceList\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\n\r\ninterface beforeUpdateProps {\r\n    /** previous state of the device */\r\n    preDeviceState: UNIVERSALS.GLOBALS.DEVICE_t,\r\n    /** update state of the device, in this case with updated color/hsv code */\r\n    newDeviceState: UNIVERSALS.GLOBALS.DEVICE_t\r\n}\r\ninterface onActionCompleted_props {\r\n    newDeviceList: UNIVERSALS.GLOBALS.DEVICE_t[]\r\n}\r\nexport interface _colorAction_Props {\r\n    deviceMac: string[]\r\n    hsv: { h?: number, s?: number, v?: number }\r\n    gestureState: number\r\n    beforeUpdate?: ({ preDeviceState, newDeviceState }: beforeUpdateProps) => UNIVERSALS.GLOBALS.DEVICE_t\r\n    onActionComplete?: ({ newDeviceList }: onActionCompleted_props) => void\r\n    log?: logger\r\n}\r\n\r\nconst [_colorSaga_watcher, _colorSaga_action] = _getWorker<_colorAction_Props>({\r\n    type: _reduxConstant.COLOR_UPDATE_SAGA,\r\n    shouldTakeLatest: true,\r\n    callable: function* containersWorker({\r\n        deviceMac,\r\n        hsv: { h, s, v },\r\n        gestureState,\r\n        beforeUpdate = ({ newDeviceState }) => { return newDeviceState },\r\n        onActionComplete,\r\n        log }) {\r\n        log = log ? new logger(\"COLOR SAGA\", log) : undefined\r\n        const list: { Mac: string, socket: WebSocket | null }[] = []\r\n        let _deviceList: HBSocketList_t[] = yield select((state: _appState) => state.HBReducer.HBSocketList)\r\n        let devicelist: UNIVERSALS.GLOBALS.DEVICE_t[] = yield select((state: _appState) => state.deviceReducer.deviceList)\r\n        const newDeviceList = yield Promise.all(devicelist.map(async device => {\r\n            if (deviceMac.includes(device.Mac)) {/* check weather this device is present in requested deviceMac array */\r\n                h = h != undefined ? h : device.hsv.h\r\n                s = s != undefined ? s : device.hsv.s\r\n                v = v != undefined ? v : device.hsv.v\r\n                let tempdevice = _deviceList.find(item => item.Mac == device.Mac)\r\n                if (tempdevice?.socket) {/* if device has socket than send the color live */\r\n                    log?.print(\"sending color to device \" + h + \" \" + s + \" \" + v)\r\n                    //@ts-ignore\r\n                    let tempCol = convertRGBToHex(convertHSVToRgbShortRange(h, s, v))\r\n                    tempdevice.socket.send(tempCol)\r\n                } else if (gestureState == State.END && !tempdevice?.socket) {/* if device has no socket than send the color over mqtt only upon gestureState end */\r\n                    log?.print(\"device has no socket \")\r\n                    // - [ ] send code via mqtt\r\n                }\r\n                return beforeUpdate({ preDeviceState: device, newDeviceState: { ...device, hsv: { h, s, v }, localTimeStamp: Math.floor(Date.now() / 1000) } })\r\n            }\r\n            return device\r\n        }))\r\n        yield _delay(500)/* wait for the gesture to end befire sending  */\r\n        log?.print(\"[COLOR SAGA] Gesture has ended >> sending Redux Data Update\")\r\n        log?.print(JSON.stringify(newDeviceList, null, 2))\r\n        if (onActionComplete)\r\n            onActionComplete({ newDeviceList })\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\nexport { _colorSaga_watcher, _colorSaga_action };\r\n\r\n\r\n\r\n\r\n\r\n","import { all } from \"redux-saga/effects\";\r\nimport { _deviceSaga_watcher, _deviceSaga_action, _deviceListSaga_watcher, _deviceListDB_watcher, _deviceListSaga_action, } from \"./deviceList\";\r\nimport { _colorSaga_action, _colorSaga_watcher/* , _brSaga_action, _brSaga_watcher */ } from \"./color.saga\"\r\n\r\nexport default function* _saga() {\r\n    yield all([\r\n        _deviceListSaga_watcher(),\r\n        _deviceSaga_watcher(),\r\n        _deviceListDB_watcher(),\r\n        _colorSaga_watcher(),\r\n    ]);\r\n}\r\n\r\n//export const _actions = { _containerSaga_action, _containerSagaDb_action }\r\n\r\nexport const _actions = { deviceListSaga: _deviceListSaga_action, deviceSaga: _deviceSaga_action, colorSaga: _colorSaga_action } ","import { initialState, _actionReturnTypes as ___actionReturnTypes, _actions as _reducerActions, _reducer } from \"./reducer\"\r\nimport _saga, { _actions as _sagaActions } from \"./saga\"\r\n\r\nexport { _reducer, _saga, initialState }\r\nexport const _actions = { deviceList: { ..._sagaActions, ..._reducerActions } }\r\n\r\n\r\n","const vender = \"HUElite\"\r\n//const vender: string = \"BDE\"\r\n\r\n\r\nexport const venderConf = {\r\n    venderPrefix: vender == \"HUElite\"\r\n        ? \"HUE\"\r\n        : vender == \"BDE\"\r\n            ? \"BDE\"\r\n            : \"\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const ValidateEmail = ({ email }: { email: string }) => {\r\n    if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\r\n        return (true)\r\n    }\r\n    alert(\"You have entered an invalid email address!\")\r\n    return (false)\r\n}","import * as UNIVERSALS from \"./combineExport\"\r\n\r\nexport default UNIVERSALS","import { logger } from \"../../util/logger\"\r\n\r\nexport const errMsgSuffix = \"We are constantly working on improvements and bugfixes in our products. You can report the issue on HUElite website for faster moving of things\"\r\n\r\nexport enum axiosBaseErrors_e {\r\n    BASE_ERROR_UNHANDLED = \"BASE_ERROR_UNHANDLED\",\r\n    REQUEST_FAILED = \"REQUEST_FAILED\",\r\n    UNKNOWN_ROUTE = \"UNKNOWN_ROUTE\",\r\n    TIMEOUT = \"NETWORK TIMEOUT\",\r\n    NETWORK_ERR = \"NETWORK_ERR\",\r\n    NO_DATA = \"NO_DATA\",\r\n    MISSING_PARAM = \"MISSING_PARAM\",\r\n    PAIR_RESPONSE_WIFI_BUSY = \"PAIR_RESPONSE_WIFI_BUSY\",\r\n    SAVE_WIFI_CONFIG_API_RESPONSE_COULD_NOT_SAVE = \"SAVE_WIFI_CONFIG_API_RESPONSE_COULD_NOT_SAVE\",\r\n}\r\n\r\nexport interface baseError<ERR_TYPE, ERR_CODE> {\r\n    errCode: ERR_CODE\r\n    error?: ERR_TYPE\r\n    errMsg?: string\r\n    status?: number\r\n    data?: any\r\n}\r\n\r\nconst timeoutError: baseError<any, axiosBaseErrors_e> = {\r\n    errCode: axiosBaseErrors_e.TIMEOUT\r\n}\r\n\r\nexport const networkError: baseError<any, axiosBaseErrors_e> = {\r\n    errCode: axiosBaseErrors_e.NETWORK_ERR\r\n}\r\n\r\nexport const unknownRouteError: baseError<any, axiosBaseErrors_e> = {\r\n    errCode: axiosBaseErrors_e.UNKNOWN_ROUTE\r\n}\r\n\r\n//export type baseError = timeoutError_i | unknownError_i | networkError_i\r\n\r\n\r\n\r\nexport const checkForHttpErrors: <T, R>(err: any, log?: logger) => baseError<T, R> = (err, log) => {\r\n    log?.print(\"base error check\" + JSON.stringify(err, null, 2))\r\n    if (err?.message.indexOf(\"timeout\") > -1)\r\n        return { ...timeoutError, errMsg: err?.message }\r\n    else if (err?.message.indexOf(\"Network Error\") > -1)\r\n        return { ...networkError, errMsg: err?.message }\r\n    else if (err?.message.indexOf(\"ECONNREFUSED\") > -1)\r\n        return { ...networkError, errMsg: err?.message }\r\n    else if (err?.response?.status == 404)\r\n        return { ...unknownRouteError, /* data: err?.response?.data, */ status: err?.response?.status }\r\n    else if (err?.response)/* measure for graphql query base errors */\r\n        return { errCode: axiosBaseErrors_e.REQUEST_FAILED, error: err?.response?.data, status: err?.response?.status }\r\n    return err\r\n}","import Axios from \"axios\"\r\nimport { logger } from \"../../../../util/logger\"\r\nimport { serverURL } from \"../../baseAxios\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../baseErrors\"\r\nimport { defaultRequest } from \"../../baseRequest\"\r\n\r\nexport enum authApiErrors_e {\r\n    AUTH_API_UNHANDLED = \"AUTH_API_UNHANDLED\"\r\n}\r\n\r\n\r\nexport interface authApiErrors_i {\r\n    testError?: any\r\n}\r\n\r\ninterface authApiRes_i {\r\n    Mac: string\r\n    Hostname: string\r\n}\r\n\r\nexport interface authApiReturnType {\r\n    RES?: authApiRes_i\r\n    ERR?: baseError<authApiErrors_i, authApiErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\n/**\r\n * @description\r\n */\r\ninterface authApiProps_i {\r\n    IP: string\r\n    log?: logger\r\n}\r\ntype fun_t = (props: authApiProps_i) => Promise<authApiReturnType>\r\n\r\nexport const v1: fun_t =\r\n    async ({\r\n        IP,\r\n        log,\r\n        ...props\r\n    }: authApiProps_i) => {\r\n        var queryResponse = await defaultRequest<authApiRes_i, authApiErrors_i, authApiReturnType>({\r\n            method: \"get\",\r\n            address: 'http://' + IP,\r\n            path: \"/auth\",\r\n            resolveData: ({ RES, ERR }) => {\r\n                if (ERR) {\r\n                    log?.print(\"ERR - resolve Data\" + JSON.stringify(ERR, null, 2))\r\n                }\r\n                if (RES?.Mac && RES.Hostname) {\r\n                    log?.print(\"RES - resolve Data \" + IP + \" \" + JSON.stringify(RES, null, 2))\r\n                    return { RES }\r\n                }\r\n                return { ERR: { errCode: authApiErrors_e.AUTH_API_UNHANDLED } }\r\n            },\r\n            log: log ? new logger(\"base request\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        return queryResponse\r\n    }\r\n\r\n","import Axios from \"axios\";\r\nimport { logger } from \"../../util/logger\";\r\nimport { axiosBaseErrors_e, baseError, checkForHttpErrors } from \"./baseErrors\";\r\n\r\n\r\ninterface baseResponse_t<res, err> {\r\n    RES?: res,\r\n    ERR?: baseError<err, axiosBaseErrors_e>\r\n}\r\n/**\r\n * Default request t\r\n * @template res \r\n * @template err \r\n */\r\nexport interface defaultRequest_t<res, err, resolveReturn_t> {\r\n    address: string,\r\n    path: string,\r\n    method: \"get\" | \"post\" | \"delete\" | \"put\"\r\n    body?: any,\r\n    config?: {\r\n        timeout?: number,\r\n    },\r\n    headers?: {},\r\n    params?: any,\r\n    resolveData?: (s: baseResponse_t<res, err>) => resolveReturn_t\r\n    log?: logger\r\n}\r\n\r\n/**\r\n * ## templates\r\n * @template res response type expected from base request\r\n * @template err possible error returns from base request if no base errors are found\r\n * @template resolveReturn_t return type of the `resolveData` function\r\n * \r\n * ## parameters\r\n * @param address \r\n * @param path\r\n * @param method: \"get\" | \"post\" | \"delete\" | \"put\"\r\n * @param body?: any,\r\n * @param config?: { timeout?: number },\r\n * @param headers?: {},\r\n * @param params?: Object,\r\n * @param resolveData?: (s: baseResponse_t<res, err>) => resolveReturn_t `default` `(s) => { return s }`,\r\n * @param log?: logger\r\n * } \r\n */\r\nexport const defaultRequest = <res, err, resolveReturn_t>({\r\n    resolveData = (s: any) => { return s },\r\n    log,\r\n    ...props\r\n}: defaultRequest_t<res, err, resolveReturn_t>) => new Promise<baseResponse_t<res, err>>(async (resolve, reject) => {\r\n    await Axios.request<res>({\r\n        method: props.method,\r\n        url: props.address + props.path,\r\n        data: props.body,\r\n        headers: props.headers,\r\n        params: props.params,\r\n        timeout: props?.config?.timeout ? props.config.timeout : 5000,\r\n    }).then(({ data }) => {\r\n        if (data) {\r\n            log?.print(\"[][] response data : \" + JSON.stringify(data, null, 2))\r\n            return resolve(resolveData({ RES: data }))\r\n        }\r\n        return reject({ ERR: { errCode: axiosBaseErrors_e.NO_DATA, data } })\r\n    }).catch((error) => {\r\n        log?.print(\"[][] error : \" + error)\r\n        let tempError = checkForHttpErrors<err, axiosBaseErrors_e>(error, log ? new logger(\"base http error checker\", log) : undefined)\r\n        if (tempError.errCode)\r\n            reject({ ERR: tempError })\r\n        return reject(resolveData({ ERR: { errCode: axiosBaseErrors_e.REQUEST_FAILED, error: error } }))\r\n    });\r\n})\r\n","//import { URLSearchParams } from \"url\"\r\nimport { logger } from \"../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../baseErrors\"\r\nimport { defaultRequest } from \"../../baseRequest\"\r\n\r\nexport enum ScanApiErrors_e {\r\n    SCAN_API_WAIT_UNTIL_SCANNING = \"SCANAPI : CURRENTLY SCANNING\",\r\n    SCAN_API_NO_NETWORK_FOUND = \"SCANAPI : NO NETWORK FOUND\",\r\n    SCAN_API_UNHANDLED = \"ScanAPI_UNHANDLED\"\r\n}\r\n\r\n\r\nexport interface ScanApiErrors_i {\r\n    testError?: any\r\n}\r\ninterface network_i {\r\n    rssi: any,\r\n    \"ssid\": string,\r\n    \"bssid\": string,\r\n    \"channel\": any,\r\n    \"secure\": any,\r\n    \"hidden\": boolean\r\n}\r\ninterface ScanApiRes_i {\r\n    status: number // - [ ] make an enum for scanAPi status codes\r\n    networks?: network_i[]\r\n}\r\n\r\nexport interface ScanApiReturnType {\r\n    RES?: ScanApiRes_i\r\n    ERR?: baseError<ScanApiErrors_i, ScanApiErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\n/**\r\n * @description\r\n */\r\ninterface ScanApiProps_i {\r\n    IP: string\r\n    log?: logger\r\n    /** resolve  */\r\n}\r\ntype fun_t = (props: ScanApiProps_i) => Promise<ScanApiReturnType>\r\n\r\nexport const v1: fun_t =\r\n    async ({\r\n        IP,\r\n        log,\r\n        ...props\r\n    }: ScanApiProps_i) => {\r\n        const _params = new URLSearchParams()\r\n        _params.append(\"config\", \"wifi_scan\")\r\n        log?.print(\"params \" + _params)\r\n        var queryResponse = await defaultRequest<ScanApiRes_i, ScanApiErrors_i, ScanApiReturnType>({\r\n            method: \"post\",\r\n            address: 'http://' + IP,\r\n            path: \"/config\",\r\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            body: _params,\r\n            resolveData: ({ RES, ERR }) => {\r\n                if (ERR) {\r\n                    log?.print(\"ERR - resolve Data\" + JSON.stringify(ERR, null, 2))\r\n                }\r\n                if (RES) {\r\n                    log?.print(\"RES - resolve Data\" + JSON.stringify(RES, null, 2))\r\n                    return { RES }\r\n                }\r\n                return { ERR: { errCode: ScanApiErrors_e.SCAN_API_UNHANDLED } }\r\n            },\r\n            log: log ? new logger(\"base request\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        return queryResponse\r\n    }\r\n\r\n\r\n/* (\r\n    async () => {\r\n        const log = new logger(\"test function\")\r\n        log.print(\"test function for device api\")\r\n        const res = await fun({\r\n            IP: \"192.168.1.72\",\r\n            log: new logger(\"scan api\", log)\r\n        })\r\n        log.print(\"response --> \" + JSON.stringify(res, null, 2))\r\n    }\r\n)() */\r\n\r\n","import UNIVERSALS from \"../../../../@universals\"\r\nimport { logger } from \"../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../baseErrors\"\r\nimport { defaultRequest } from \"../../baseRequest\"\r\n\r\nexport enum pairApiErrors_e {\r\n    PAIR_API_UNHANDLED = \"PAIR_API_UNHANDLED\"\r\n}\r\n\r\n\r\nexport type pairApiErrors_i = UNIVERSALS.GLOBALS.deviceApi._DEVICE_WIFI_API_ERRORS_e\r\n\r\nexport interface pairApiRes_i {\r\n    Mac: string\r\n    WIFI_STATE: UNIVERSALS.GLOBALS.deviceApi._DEVICE_WIFI_STATE_e\r\n    IP?: string\r\n    ssid?: string\r\n}\r\n\r\nexport interface pairApiReturnType {\r\n    RES?: pairApiRes_i\r\n    ERR?: baseError<pairApiErrors_i, pairApiErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\n/**\r\n * @description\r\n */\r\ninterface pairApiProps_i {\r\n    IP: string\r\n    ssid: string\r\n    pass: string\r\n    log?: logger\r\n}\r\ntype fun_t = (props: pairApiProps_i) => Promise<pairApiReturnType>\r\n\r\nexport const v1: fun_t =\r\n    async ({\r\n        IP,\r\n        ssid,\r\n        pass,\r\n        log,\r\n        ...props\r\n    }: pairApiProps_i) => {\r\n        const _params = new URLSearchParams()\r\n        _params.append(\"config\", \"wifi_connect\")\r\n        _params.append(\"ssid\", ssid)\r\n        _params.append(\"pass\", pass)\r\n        log?.print(\"params \" + _params)\r\n        var queryResponse = await defaultRequest<pairApiRes_i, pairApiErrors_i, pairApiReturnType>({\r\n            method: \"post\",\r\n            address: 'http://' + IP,\r\n            path: \"/config\",\r\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            body: _params,\r\n            config: {\r\n                timeout: 5000\r\n            },\r\n            resolveData: ({ RES, ERR }) => {\r\n                if (ERR) {\r\n                    log?.print(\"ERR - resolve Data\" + JSON.stringify(ERR, null, 2))\r\n                }\r\n                if (RES && RES.Mac) {\r\n                    log?.print(\"RES - resolve Data\" + JSON.stringify(RES, null, 2))\r\n                    return { RES }\r\n                }\r\n                return { ERR: { errCode: pairApiErrors_e.PAIR_API_UNHANDLED } }\r\n            },\r\n            log: log ? new logger(\"base request\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        return queryResponse\r\n    }\r\n\r\n\r\n\r\n/* (async () => {\r\n    const log = new logger(\"test function\")\r\n    const res = await v1({ IP: \"192.168.4.1\", ssid: \"Homelink\", pass: \"Ioplmkjnb@1\", log })\r\n    if (res.RES)\r\n        log.print(\"RES ****----- \" + JSON.stringify(res.RES, null, 2))\r\n    else\r\n        log.print(\"ERR ****----- \" + JSON.stringify(res.ERR, null, 2))\r\n})() */","import { logger } from \"../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../baseErrors\"\r\nimport { defaultRequest } from \"../../baseRequest\"\r\n\r\nexport enum saveWifiConfigApiErrors_e {\r\n    SAVE_WIFI_CONFIG_API_UNHANDLED = \"SAVE_WIFI_CONFIG_API_UNHANDLED\"\r\n}\r\n\r\n\r\nexport type saveWifiConfigApiErrors_i = \"ERR-048\"\r\n\r\ntype saveWifiConfigApiRes_i = \"RES-551\"\r\n\r\nexport interface saveWifiConfigApiReturnType {\r\n    RES?: saveWifiConfigApiRes_i\r\n    ERR?: baseError<saveWifiConfigApiErrors_i, saveWifiConfigApiErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\n/**\r\n * @description\r\n */\r\ninterface saveWifiConfigApiProps_i {\r\n    IP: string\r\n    log?: logger\r\n}\r\ntype fun_t =\r\n    (props: saveWifiConfigApiProps_i)\r\n        => Promise<saveWifiConfigApiReturnType>\r\n\r\nexport const v1: fun_t =\r\n    async ({\r\n        IP,\r\n        log,\r\n        ...props\r\n    }: saveWifiConfigApiProps_i) => {\r\n        const _params = new URLSearchParams()\r\n        _params.append(\"config\", \"save_wifi_cnf\")\r\n        log?.print(\"params \" + _params)\r\n        var queryResponse = await defaultRequest<saveWifiConfigApiRes_i, saveWifiConfigApiErrors_i, saveWifiConfigApiReturnType>({\r\n            method: \"post\",\r\n            address: 'http://' + IP,\r\n            path: \"/config\",\r\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            body: _params,\r\n            config: {\r\n                timeout: 5000\r\n            },\r\n            resolveData: ({ RES, ERR }) => {\r\n                if (ERR) {\r\n                    log?.print(\"ERR - resolve Data\" + JSON.stringify(ERR, null, 2))\r\n                }\r\n                if (RES) {\r\n                    log?.print(\"RES - resolve Data\" + JSON.stringify(RES, null, 2))\r\n                    return { RES }\r\n                }\r\n                return { ERR: { errCode: saveWifiConfigApiErrors_e.SAVE_WIFI_CONFIG_API_UNHANDLED } }\r\n            },\r\n            log: log ? new logger(\"base request\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        return queryResponse\r\n    }\r\n\r\n\r\n","import { logger } from \"../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError, errMsgSuffix } from \"../../baseErrors\"\r\nimport { defaultRequest, defaultRequest_t } from \"../../baseRequest\"\r\nimport { serverURL } from \"../../baseAxios\"\r\n\r\nexport enum apolloErrors_e {\r\n    /** response came but no data was received */\r\n    APOLLO_QUERY_FAILED = \"APOLLO_QUERY_FAILED\",\r\n    /** incorrect query string */\r\n    APOLLO_BAD_QUERY = \"APOLLO_BAD_QUERY\",\r\n    APOLLO_UNHANDLED = \"APOLLO_UNHANDLED\",\r\n\r\n}\r\n\r\n\r\nexport interface baseApolloErrors_i {\r\n    /**  only exists if query failed and response has be received */\r\n    errors?: [{\r\n        message?: string\r\n        extensions?: {\r\n            code?: \"GRAPHQL_PARSE_FAILED\" | \"INTERNAL_SERVER_ERROR\"\r\n        }\r\n    }]\r\n}\r\n\r\ninterface baseApolloRes_i<res, err> extends baseApolloErrors_i {\r\n    /** successfull query response can be found in `data` object */\r\n    data?: res\r\n}\r\n\r\nexport interface baseApolloQuery_returnType<res, err> {\r\n    RES?: res\r\n    ERR?: baseError<err, apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\n/**\r\n * @description fiew fields are omitted as they are set to default in the baseApolloRequest \r\n *              and thus control to modify the values is not passed to lower level methods\r\n *      - `path` & `address` as path & address both are default in case apollo query post request\r\n */\r\ninterface baseApolloQuery_i<res, err, queryVariables, resolveReturn_t> extends Omit<Omit<Omit<Omit<defaultRequest_t<\"\", \"\", \"\">, \"path\">, \"address\">, \"method\">, \"resolveData\"> {\r\n    query: string\r\n    variables: queryVariables\r\n    log?: logger\r\n    /** resolve  */\r\n    resolveData?: (s: baseApolloQuery_returnType<res, err>) => resolveReturn_t\r\n}\r\ntype fun_t = <res, err, queryVariables, resolveReturn_t>\r\n    (props: baseApolloQuery_i<res, err, queryVariables, resolveReturn_t>)\r\n    => Promise<baseApolloQuery_returnType<res, err>>\r\n\r\nconst fun: fun_t =\r\n    async <res, err, queryVariables, resolveReturn_t>({\r\n        resolveData = (s: any) => { return s },\r\n        log,\r\n        ...props\r\n    }: baseApolloQuery_i<res, err, queryVariables, resolveReturn_t>) => {\r\n        var queryResponse = await defaultRequest<res & baseApolloRes_i<res, err>, err & baseApolloErrors_i, baseApolloQuery_returnType<baseApolloRes_i<res, err>, baseApolloErrors_i>>({\r\n            method: \"post\",\r\n            address: serverURL,\r\n            path: \"/admin/api\",\r\n            body: {\r\n                query: props.query,\r\n                variables: props.variables,\r\n            },\r\n            config: props.config,\r\n            /**\r\n             * @param \r\n             * - `RES` with data, `ERR` with error\r\n             * - `possible error entries` - RES.errors[0] || ERR.error.errors[0]\r\n             * @dataManuplation \r\n             * - `ERR.error ==> ERR.error.errors[0]`<br>\r\n             *   - `ERR.error.errors[0]` : [ { message :string, extensions:string } ]\r\n             *   - `ERR.error`{ message :string, extensions:string }`\r\n             */\r\n            resolveData: ({ RES, ERR }) => {\r\n\r\n                /**\r\n                 * @description\r\n                 *      checks for specific errors\r\n                 * @errorHandled\r\n                 * - `BAD_QUERY` - apollo query string syntax not correct\r\n                 * \r\n                 * @returns\r\n                 * to end the resolveData callback chain return resolved error object other than undefined\r\n                 * - `undefined` continue to the next resolveData call\r\n                 * - `errors : any` return errors[0] \r\n                 * \r\n                 */\r\n                const processErrors = (error: baseApolloErrors_i) => {\r\n                    log?.print(\"checking Local errors\")\r\n                    if (error && error.errors) {\r\n                        if (error.errors[0].extensions?.code == \"GRAPHQL_PARSE_FAILED\") {\r\n                            log?.print(\"BAD query error found\")\r\n                            return { ERR: { errCode: apolloErrors_e.APOLLO_BAD_QUERY } }\r\n                        }\r\n                    }\r\n                    return undefined\r\n                }\r\n\r\n                if (RES) {\r\n                    log?.print(\"RES - resolve Data\" + JSON.stringify(RES))\r\n                    if (RES?.errors instanceof Array) {\r\n                        log?.print(\"RES - errors object exists in 'RES' object\" + JSON.stringify(RES, null, 2))\r\n                        let tempErr = processErrors(RES)\r\n                        if (tempErr != undefined) {\r\n                            log?.print(\"RES - error found breaking chain\" + JSON.stringify(RES.errors, null, 2))\r\n                            return tempErr\r\n                        } else {\r\n                            log?.print(\"RES - sending data to next function in chain to be resolved\")\r\n                            //@ts-ignore\r\n                            return resolveData({ ERR: { errCode: apolloErrors_e.QUERY_FAILED, error: RES.errors[0] } })\r\n                        }\r\n                    }\r\n                    if (RES?.data)\r\n                        return resolveData({ RES: RES.data })\r\n                }\r\n                if (ERR) {\r\n                    log?.print(\"ERR - resolve Data\" + JSON.stringify(ERR))\r\n                    if (ERR?.error?.errors instanceof Array) {\r\n                        log?.print(\"ERR - errors object in ERR exists\" + JSON.stringify(ERR, null, 2))\r\n                        let tempErr = processErrors(ERR.error)\r\n                        if (tempErr != undefined) {\r\n                            log?.print(\"ERR - BadQuery error found breaking resolveData change\" + JSON.stringify(ERR.error.errors, null, 2))\r\n                            return tempErr\r\n                        } else {\r\n                            log?.print(\"ERR - No error found at this level. sendind data to be resolved to next function in chain with failed query error\")\r\n                            //@ts-ignore\r\n                            return resolveData({ ERR: { errCode: apolloErrors_e.QUERY_FAILED, error: ERR.error.errors[0] } })\r\n                        }\r\n                    }\r\n                    log?.print(\"ERR - sending error to next level\")\r\n                    return resolveData({ ERR })\r\n                }\r\n                return { ERR: { errCode: apolloErrors_e.APOLLO_UNHANDLED } }\r\n            },\r\n            log: log ? new logger(\"base request\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        return queryResponse\r\n    }\r\n\r\n\r\nexport default fun\r\n","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nenum deviceQueryApiErrors_e {\r\n    DEVICE_QUERY_API_INVALID_ID = \"DEVICE_QUERY_API : INVALID_ID\",\r\n    DEVICE_QUERY_API_UNHANDLED = \"DEVICE_QUERY_API : UNHANDLED\",\r\n}\r\n\r\ninterface response_i {\r\n    HueDevice?: {\r\n        id: string,\r\n        timers?: string\r\n    }\r\n}\r\n\r\ninterface error_i {\r\n    /**\r\n    * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n    */\r\n    message?: string\r\n    extensions?: {\r\n        code?: string\r\n    }\r\n}\r\n\r\nexport interface _deviceTimerQueryAPi_returnType {\r\n    RES?: {\r\n        id: string\r\n        timers?: string\r\n        ts?: number\r\n    }\r\n    ERR?: baseError<error_i, deviceQueryApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    id: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_deviceTimerQueryAPi_returnType> = async ({ id, log }: fun_t) => {\r\n\r\n    interface variables_i {\r\n        id: string\r\n    }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _deviceTimerQueryAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.getDeviceTimer_query,\r\n        variables: {\r\n            id\r\n        },\r\n        resolveData: (props) => {\r\n            //log?.print(\"resolve DATA\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR?.error) {\r\n                log?.print(\"ERR - deviceTimerQuery \" + JSON.stringify(props.ERR.error, null, 2))\r\n                if (props.ERR.error.message) {\r\n\r\n                }\r\n            }\r\n            else if (props.RES && props.RES.HueDevice?.id) {\r\n                log?.print(\"RES - deviceTimerQuery  \" + JSON.stringify(props.RES.HueDevice, null, 2))\r\n                return { RES: props.RES.HueDevice }\r\n            }\r\n            return { ERR: { errCode: deviceQueryApiErrors_e.DEVICE_QUERY_API_UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///device query test\r\n/* const test = async () => {\r\n    const log = new logger(\"TEST FUNCTION\")\r\n    log.print(\"---------\")\r\n    const _res = await v1({\r\n        id: \"5fef7e9162933b1ec4176861\",\r\n        log: log ? new logger(\"deviceTimersQuerypAPI\", log) : undefined\r\n    }).then((res: any) => res).catch((err: any) => err)\r\n\r\n    log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n} */","//export const serverURL = \"https://www.huelite.in/backend\"\r\nexport const serverURL = \"http://192.168.1.6:4000/backend\"\r\n//export const serverURL = \"http://223.190.29.65:4000/backend\" /** local PC */","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nexport enum deviceQueryWithMacApiErrors_e {\r\n    DEVICE_QUERY_API_INVALID_ID = \"DEVICE_QUERY_API : INVALID_ID\",\r\n    DEVICE_QUERY_API_UNHANDLED = \"DEVICE_QUERY_API : UNHANDLED\",\r\n    DEVICE_QUERY_NO_DEVICES_FOUND = \"DEVICE_QUERY_API : NO_DEVICE_FOUND\",\r\n}\r\n\r\ninterface response_i {\r\n    allHueDevices?: UNIVERSALS.GLOBALS.Device_t[]\r\n}\r\n\r\ninterface error_i {\r\n    /**\r\n    * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n    */\r\n    message?: string\r\n    extensions?: {\r\n        code?: string\r\n    }\r\n}\r\n\r\ninterface _deviceQueryAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.Device_t\r\n    ERR?: baseError<error_i, deviceQueryWithMacApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_deviceQueryAPi_returnType> = async ({ device, log }: fun_t) => {\r\n\r\n    interface variables_i {\r\n        Mac: string\r\n    }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _deviceQueryAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.getDeviceWithMac_query,\r\n        variables: {\r\n            Mac: device.Mac\r\n        },\r\n        resolveData: (props) => {\r\n            //log?.print(\"resolve DATA\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR?.error) {\r\n                log?.print(\"ERR - deviceTimerQuery \" + JSON.stringify(props.ERR.error, null, 2))\r\n                if (props.ERR.error.message) {\r\n\r\n                }\r\n            }\r\n            else if (props.RES?.allHueDevices?.length) {\r\n                log?.print(\"RES - deviceTimerQuery  \" + JSON.stringify(props.RES.allHueDevices[0], null, 2))\r\n                return { RES: props.RES.allHueDevices[0] }\r\n            }\r\n            else if (props.RES?.allHueDevices?.length == 0) {\r\n                log?.print(\"ERR - NO_DEVICE_FOUND response received but no deices are found\")\r\n                return { ERR: { errCode: deviceQueryWithMacApiErrors_e.DEVICE_QUERY_NO_DEVICES_FOUND } }\r\n            }\r\n            return { ERR: { errCode: deviceQueryWithMacApiErrors_e.DEVICE_QUERY_API_UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///device query test\r\n/* const test = async () => {\r\n    const log = new logger(\"TEST FUNCTION\")\r\n    log.print(\"---------\")\r\n    const _res = await v1({\r\n        id: \"5fef7e9162933b1ec4176861\",\r\n        log: log ? new logger(\"deviceTimersQuerypAPI\", log) : undefined\r\n    }).then((res: any) => res).catch((err: any) => err)\r\n\r\n    log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n} */","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nenum createdeviceMutationApiErrors_e {\r\n    CREATE_DEVICE_MUTATION_API__UNHANDLED = \"CREATE_DEVICE_API : UNHANDLED\",\r\n    CREATE_DEVICE_MUTATION_API_DUPLICATE_MAC_ERROR = \"CREATE_DEVICE_API : DUPLICATE MAC\",\r\n}\r\n\r\ninterface response_i {\r\n    createHueDevice?: UNIVERSALS.GLOBALS.Device_t\r\n}\r\n\r\ninterface error_i {\r\n    /**\r\n    * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n    */\r\n    message?: \"E11000 duplicate key error collection: huelite.hue_devices index: Mac_1 dup key:\"\r\n    extensions?: {\r\n        code?: string\r\n    }\r\n}\r\n\r\ninterface _createDeviceMutationAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.Device_t\r\n    ERR?: baseError<error_i, createdeviceMutationApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t\r\n    userID: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_createDeviceMutationAPi_returnType> = async ({ device, userID, log }: fun_t) => {\r\n\r\n    interface variables_i extends UNIVERSALS.GLOBALS.Device_t { userID: string }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _createDeviceMutationAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.createNewDevice_mutation,\r\n        variables: { ...UNIVERSALS.GLOBALS.convert_Device_LocalToBackend({ device }), userID },\r\n        resolveData: (props) => {\r\n            //log?.print(\"resolve DATA\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR?.error) {\r\n                log?.print(\"ERR - createDevice \" + JSON.stringify(props.ERR.error, null, 2))\r\n                if (props.ERR.error.message == \"E11000 duplicate key error collection: huelite.hue_devices index: Mac_1 dup key:\") {\r\n                    return { ERR: { errCode: createdeviceMutationApiErrors_e.CREATE_DEVICE_MUTATION_API_DUPLICATE_MAC_ERROR, errMsg: props.ERR.error.message } }\r\n                }\r\n            }\r\n            else if (props.RES?.createHueDevice) {\r\n                log?.print(\"RES - createDevice  \" + JSON.stringify(props.RES, null, 2))\r\n                return { RES: props.RES.createHueDevice }\r\n            }\r\n            return { ERR: { errCode: createdeviceMutationApiErrors_e.CREATE_DEVICE_MUTATION_API__UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///device query test\r\n/* const test = async () => {\r\n    const log = new logger(\"TEST FUNCTION\")\r\n    log.print(\"---------\")\r\n    const _res = await v1({\r\n        id: \"5fef7e9162933b1ec4176861\",\r\n        log: log ? new logger(\"deviceTimersQuerypAPI\", log) : undefined\r\n    }).then((res: any) => res).catch((err: any) => err)\r\n\r\n    log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n} */","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nenum updateDeviceMutationApiErrors_e {\r\n    UPDATE_DEVICE_MUTATION_API__UNHANDLED = \"UPDATE_DEVICE_API : UNHANDLED\",\r\n    UPDATE_DEVICE_MUTATION_API_OUTDATED_TIMESTAMP = \"UPDATE_DEVICE_API : OUTDATED TIMESTAMP\",\r\n}\r\n\r\ninterface response_i {\r\n    updateHueDevice?: UNIVERSALS.GLOBALS.Device_t\r\n}\r\n\r\ninterface error_i {\r\n    /**\r\n    * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n    */\r\n    message?: string\r\n    extensions?: {\r\n        code?: string\r\n    }\r\n}\r\n\r\ninterface _updateDeviceMutationAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.Device_t\r\n    ERR?: baseError<error_i, updateDeviceMutationApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    device: Omit<UNIVERSALS.GLOBALS.DEVICE_t, \"id\"> & { id: string }\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_updateDeviceMutationAPi_returnType> = async ({ device, log }: fun_t) => {\r\n\r\n    interface variables_i {\r\n        id: string\r\n        hsv?: string,\r\n        IP?: string,\r\n        deviceName?: string,\r\n        ts: number\r\n    }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _updateDeviceMutationAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.updateDevice_mutation,\r\n        variables: {\r\n            id: device.id,\r\n            ...UNIVERSALS.GLOBALS.convert_Device_LocalToBackend_forUpdateMutation({ device })\r\n        },\r\n        resolveData: (props) => {\r\n            //log?.print(\"resolve DATA\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR?.error) {\r\n                log?.print(\"ERR - updateDevice \" + JSON.stringify(props.ERR.error, null, 2))\r\n            }\r\n            // - [ ] error check for outdated local timestamp\r\n            else if (props.RES?.updateHueDevice) {\r\n                log?.print(\"RES - updateDevice--  \" + JSON.stringify(props.RES, null, 2))\r\n                return { RES: props.RES.updateHueDevice }\r\n            }\r\n            return { ERR: { errCode: updateDeviceMutationApiErrors_e.UPDATE_DEVICE_MUTATION_API__UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///device query test\r\n/* const test = async () => {\r\n    const log = new logger(\"TEST FUNCTION\")\r\n    log.print(\"---------\")\r\n    const _res = await v1({\r\n        id: \"5fef7e9162933b1ec4176861\",\r\n        log: log ? new logger(\"deviceTimersQuerypAPI\", log) : undefined\r\n    }).then((res: any) => res).catch((err: any) => err)\r\n\r\n    log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n} */","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nexport enum userQueryApiErrors_e {\r\n    USER_FETCH_API_UNKNOWN_EMAIL = \"USER_FETCH_API_UNKNOWN_EMAIL\",\r\n    USER_FETCH_API_INCORRECT_PASSWORD = \"USER_FETCH_API_INCORRECT_PASSWORD\",\r\n    USER_FETCH_API_UNHANDLED = \"USER_FETCH_API_UNHANDLED\",\r\n}\r\n\r\ninterface response_i {\r\n    User: UNIVERSALS.GLOBALS.User_t\r\n}\r\n\r\nexport interface error_i {\r\n    /**\r\n     * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n     */\r\n    extensions?: \"INTERNAL_SERVER_ERROR\"\r\n    message?: string\r\n}\r\n\r\nexport interface _userQueryAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.User_t\r\n    ERR?: baseError<error_i, userQueryApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface v1_props {\r\n    id: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: v1_props) => Promise<_userQueryAPi_returnType> = async ({\r\n    id,\r\n    log }: v1_props) => {\r\n\r\n    interface variables_i {\r\n        id: string\r\n    }\r\n    var response = await makeHttpQuery<response_i, error_i, variables_i, _userQueryAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.User_queryWithId,\r\n        variables: { id },\r\n        resolveData: (props) => {\r\n            log?.print(\"userQueryAPI resolve DATA \" + JSON.stringify(props, null, 2))\r\n            if (props.RES?.User.id) {\r\n                return { RES: props.RES.User }\r\n            }\r\n            return { ERR: { errCode: userQueryApiErrors_e.USER_FETCH_API_UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(response, null, 2))\r\n    return response\r\n}\r\n\r\n\r\n///userQueryAPITest\r\n/* {\r\n    (async () => {\r\n        const log = new logger(\"login test function\")\r\n        const _res = await fun({\r\n            email: \"iamlive24@gmail.com\",\r\n            password: \"Ioplmkjnb@1\",\r\n            log: log ? new logger(\"loginAPI\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n    })()\r\n} */\r\n","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nexport enum loginApiErrors_e {\r\n    LOGIN_API_UNKNOWN_EMAIL = \"LOGIN_API_UNKNOWN_EMAIL\",\r\n    LOGIN_API_INCORRECT_PASSWORD = \"LOGIN_API_INCORRECT_PASSWORD\",\r\n    LOGIN_API_UNHANDLED = \"LOGIN_API_UNHANDLED\",\r\n}\r\n\r\ninterface response_i {\r\n    authenticateUserWithPassword: {\r\n        item: UNIVERSALS.GLOBALS.User_t\r\n    }\r\n}\r\n\r\nexport interface error_i {\r\n    /**\r\n     * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n     */\r\n    extensions?: \"INTERNAL_SERVER_ERROR\"\r\n    message?: \"[passwordAuth:secret:mismatch] The password provided is incorrect\"\r\n    | \"[passwordAuth:identity:notFound] The email provided didn't identify any undefined\"\r\n}\r\n\r\nexport interface _loginAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.User_t\r\n    ERR?: baseError<error_i, loginApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface v1_props {\r\n    email: string\r\n    password: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: v1_props) => Promise<_loginAPi_returnType> = async ({\r\n    email,\r\n    password,\r\n    log }: v1_props) => {\r\n\r\n    interface variables_i {\r\n        email: string\r\n        password: string\r\n    }\r\n    var response = await makeHttpQuery<response_i, error_i, variables_i, _loginAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.HUE_User_authenticateMutation_,\r\n        variables: {\r\n            email,\r\n            password\r\n        },\r\n        resolveData:\r\n            /**\r\n             * # resolveData\r\n             * ### description\r\n             * check if desired dataset exists than send the data to next level resolved else filter for errors. if eror\r\n             * is recognised than send specific error else send curent level unhandled as ERR object\r\n             * \r\n             * ## changelog\r\n             * \r\n             * ## featureList\r\n             *  \r\n             * ### responseHandling\r\n             * ##### description\r\n             *      if present then send the data to next resolver else check \r\n             *      for possible errors else send current level unhandled error\r\n             * \r\n             * \r\n             * ### errorHandling\r\n             * - [ ] NO Data/unknown/undefined error\r\n             * - [ ] INTERNAL_SERVER_ERROR\r\n             * - [ ] TODO incorrect password\r\n             * - [ ] incorrect email\r\n             */\r\n            (props) => {\r\n                log?.print(\"loginAPI resolve DATA \" + JSON.stringify(props, null, 2))\r\n                if (props.ERR?.error?.message == \"[passwordAuth:secret:mismatch] The password provided is incorrect\") {\r\n                    log?.print(\"Its an password incorrect\")\r\n                    return { ERR: { errCode: loginApiErrors_e.LOGIN_API_INCORRECT_PASSWORD, errMsg: props.ERR.error.message } }\r\n                }\r\n                if (props.ERR?.error?.message == \"[passwordAuth:identity:notFound] The email provided didn't identify any undefined\") {\r\n                    log?.print(\"Its an incorrect email\")\r\n                    return { ERR: { errCode: loginApiErrors_e.LOGIN_API_UNKNOWN_EMAIL, errMsg: props.ERR.error.message + \" You can consider signingUp with the provided email\" } }\r\n                }\r\n                if (props.RES?.authenticateUserWithPassword?.item?.id) {\r\n                    log?.print(\"user authinticated successfully\")\r\n                    return { RES: props.RES.authenticateUserWithPassword.item }\r\n                }\r\n                return { ERR: { errCode: loginApiErrors_e.LOGIN_API_UNHANDLED } }\r\n            },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(response, null, 2))\r\n    return response\r\n}\r\n\r\n\r\n///loginAPITest\r\n/* {\r\n    (async () => {\r\n        const log = new logger(\"login test function\")\r\n        const _res = await fun({\r\n            email: \"iamlive24@gmail.com\",\r\n            password: \"Ioplmkjnb@1\",\r\n            log: log ? new logger(\"loginAPI\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n        log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n    })()\r\n} */\r\n","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nenum signupApiErrors_e {\r\n    SIGNUP_API_EMAIL_ALREADY_REGISTERED = \"SIGNUP_API_ALREADY_REGISTERED\",\r\n    SIGNUP_API_PASSWORD_TOO_SHORT = \"SIGNUP_API_PASSWORD_TOO_SHORT\",\r\n    SIGNUP_API_PASSWORD_NOT_STRONG = \"SIGNUP_API_PASSWORD_NOT_STRONG\",\r\n    SIGNUP_API_INVALID_EMAIL = \"SIGNUP_API_INVALID_EMAIL\",\r\n    SIGNUP_API_UNHANDLED = \"SIGNUP_API_UNHANDLED\"\r\n}\r\n\r\ninterface response_i {\r\n    createUser?: UNIVERSALS.GLOBALS.User_t\r\n}\r\n\r\ninterface error_i {\r\n    /**\r\n    * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n    */\r\n    message?: string\r\n    extensions?: {\r\n        code?: string\r\n    }\r\n}\r\n\r\nexport interface _signupAPi_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.User_t\r\n    ERR?: baseError<error_i, signupApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    userName: string\r\n    email: string\r\n    password: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_signupAPi_returnType> = async ({ email, password, userName, log }: fun_t) => {\r\n\r\n    interface variables_i {\r\n        userName: string\r\n        email: string\r\n        password: string\r\n    }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _signupAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.HUE_User_createMutation_,\r\n        variables: {\r\n            email,\r\n            password,\r\n            userName,\r\n        },\r\n        resolveData: (props) => {\r\n            //log?.print(\"resolve DATA\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR?.error) {\r\n                log?.print(\"ERR - resolve DATA error object \" + JSON.stringify(props.ERR.error, null, 2))\r\n                if (props.ERR.error.message) {\r\n                    if (props.ERR.error.message == \"[password:minLength:user:password] Value must be at least 8 characters long.\") {\r\n                        return { ERR: { errCode: signupApiErrors_e.SIGNUP_API_PASSWORD_TOO_SHORT, errMsg: props.ERR.error.message } }\r\n                    }\r\n                    else if (props.ERR.error.message == \"[password:rejectCommon:user:password] Common and frequently-used passwords are not allowed.\") {\r\n                        return { ERR: { errCode: signupApiErrors_e.SIGNUP_API_PASSWORD_NOT_STRONG, errMsg: props.ERR.error.message } }\r\n                    }\r\n                    /**\r\n                     * @imp - this section has to checked in last as the filter string could be assosiated with other errors too, especially in case of multiple errors \r\n                     */\r\n                    else if (props.ERR.error.message?.indexOf(\"E11000 duplicate key error collection: huelite.users\") >= -1) {\r\n                        return { ERR: { errCode: signupApiErrors_e.SIGNUP_API_EMAIL_ALREADY_REGISTERED, errMsg: props.ERR.error.message } }\r\n                    }\r\n                }\r\n            }\r\n            else if (props.RES && props.RES.createUser?.id) {\r\n                log?.print(\"resolve Data user created successfully\" + JSON.stringify(props.RES.createUser, null, 2))\r\n                return { RES: props.RES.createUser }\r\n            }\r\n            return { ERR: { errCode: signupApiErrors_e.SIGNUP_API_UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///loginAPITest\r\n/* {\r\n    (async () => {\r\n        const log = new logger(\"signup test function\")\r\n        const _res = await fun({\r\n            email: \"ijgjhvhj@gmail.com\",\r\n            password: \"Ioplmkjnb@1\",\r\n            userName: \"testUser\",\r\n            log: log ? new logger(\"signupAPI\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n\r\n        log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n    })()\r\n} */","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nenum userUpdateApiErrors_e {\r\n    USER_UPDATE_API_PASSWORD_TOO_SHORT = \"USER_UPDATE_API_PASSWORD_TOO_SHORT\",\r\n    USER_UPDATE_API_PASSWORD_EASY = \"USER_UPDATE_API_PASSWORD_EASY\",\r\n    USER_UPDATE_API_EMAIL_ALREADY_REGISTERED = \"USER_UPDATE_API_PASSWORD_EASY\",\r\n    USER_UPDATE_API_ID_INCORRECT_OR_NOT_PROVIDED = \"USER_UPDATE_API_ID_INCORRECT_OR_NOT_PROVIDED\",\r\n    USER_UPDATE_API_UNHANDLED = \"USER_UPDATE_API_UNHANDLED\",\r\n}\r\n\r\ninterface response_i {\r\n    updateUser: Omit<UNIVERSALS.GLOBALS.User_t, \"devices\">\r\n}\r\n\r\ninterface error_i {\r\n    message?: \"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\"\r\n    | \"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\"\r\n    | \"[password:rejectCommon:user:password] Common and frequently-used passwords are not allowed.\"\r\n    | \"[password:minLength:user:password] Value must be at least 8 characters long.\"\r\n    extensions: {\r\n        code: \"INTERNAL_SERVER_ERROR\",\r\n    }\r\n}\r\n\r\nexport interface _userUpdate_returnType {\r\n    RES?: UNIVERSALS.GLOBALS.User_t\r\n    ERR?: baseError<error_i, userUpdateApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    id: string\r\n    userName?: string\r\n    password?: string\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_userUpdate_returnType> = async ({ id, userName, password, log }: fun_t) => {\r\n\r\n    interface variables_i {\r\n        id: string\r\n        userName?: string\r\n        password?: string\r\n    }\r\n    let _var: variables_i = { id: id }\r\n    if (password)\r\n        _var = { ..._var, password }\r\n    if (userName)\r\n        _var = { ..._var, userName }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _userUpdate_returnType>({\r\n        query: UNIVERSALS.GLOBALS.HUE_User_updateMutation_,\r\n        variables: _var,\r\n        resolveData: (props) => {\r\n            log?.print(\"resolve data\" + JSON.stringify(props, null, 2))\r\n            if (props.ERR) {\r\n                log?.print(\"resolve data Error exists \" + JSON.stringify(props.ERR, null, 2))\r\n                if (props.ERR.error?.message == \"[password:rejectCommon:user:password] Common and frequently-used passwords are not allowed.\") {\r\n                    return { ERR: { errCode: userUpdateApiErrors_e.USER_UPDATE_API_PASSWORD_EASY, errMsg: props.ERR.error.message } }\r\n                }\r\n                if (props.ERR.error?.message == \"[password:minLength:user:password] Value must be at least 8 characters long.\") {\r\n                    return { ERR: { errCode: userUpdateApiErrors_e.USER_UPDATE_API_PASSWORD_TOO_SHORT, errMsg: props.ERR.error.message } }\r\n                }\r\n                if (props.ERR.error?.message == \"Variable \\\"$id\\\" of required type \\\"ID!\\\" was not provided.\" || props.ERR.error?.message == \"Argument passed in must be a single String of 12 bytes or a string of 24 hex characters\") {\r\n                    return { ERR: { errCode: userUpdateApiErrors_e.USER_UPDATE_API_ID_INCORRECT_OR_NOT_PROVIDED, errMsg: props.ERR.error.message } }\r\n                }\r\n            }\r\n            else if (props.RES?.updateUser?.id) {\r\n                log?.print(\"resolve data user update successfully \" + JSON.stringify(props.RES.updateUser, null, 2))\r\n                return { RES: props.RES.updateUser }\r\n            }\r\n            return { ERR: { errCode: userUpdateApiErrors_e.USER_UPDATE_API_UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n\r\n\r\n///update API test\r\n/* {\r\n    (async () => {\r\n        const log = new logger(\"update test function\")\r\n        const _res = await fun({\r\n            id: \"5fea01e45760e019bcf516db\",\r\n            //id: \"\",\r\n            password: \"password\",\r\n            userName: \"testUser temp\",\r\n            log: log ? new logger(\"updateAPI\", log) : undefined\r\n        }).then(res => res).catch(err => err)\r\n\r\n        log.print(\"res----\" + JSON.stringify(_res, null, 2))\r\n    })()\r\n} */","import UNIVERSALS from \"../../../../../@universals\"\r\nimport { logger } from \"../../../../../util/logger\"\r\nimport { axiosBaseErrors_e, baseError } from \"../../../baseErrors\"\r\nimport makeHttpQuery, { apolloErrors_e } from \"../httpApolloQuery\"\r\n\r\n\r\nenum userDevicesUpdateApiErrors_e {\r\n    USER_DEVICES_UPDATE_API_UNHANDLED = \"USER_DEVICES_UPDATE_API : UNHANDLED\"\r\n}\r\n\r\ninterface response_i {\r\n    updateUser: {\r\n        id: string\r\n        devices: {\r\n            id: string\r\n            Mac: string\r\n            user: {\r\n                id: string\r\n            }\r\n        }[]\r\n    }\r\n}\r\n\r\ninterface error_i {\r\n    /**\r\n    * @imp errors to be checked in listing order based on priority top`max` to bottom`min`\r\n    */\r\n    message?: string\r\n    extensions?: {\r\n        code?: string\r\n    }\r\n}\r\n\r\ninterface _userDevicesUpdateAPi_returnType {\r\n    RES?: response_i\r\n    ERR?: baseError<error_i, userDevicesUpdateApiErrors_e | apolloErrors_e | axiosBaseErrors_e>\r\n}\r\n\r\ninterface fun_t {\r\n    id: string\r\n    deviceID: string\r\n    connect?: boolean\r\n    log?: logger\r\n}\r\nexport const v1: (props: fun_t) => Promise<_userDevicesUpdateAPi_returnType> = async ({ id, deviceID, connect, log }: fun_t) => {\r\n\r\n    interface variables_i {\r\n        id: string\r\n        deviceID: string\r\n    }\r\n    var res = await makeHttpQuery<response_i, error_i, variables_i, _userDevicesUpdateAPi_returnType>({\r\n        query: UNIVERSALS.GLOBALS.userUpdateDevicesMutationString(connect),\r\n        variables: {\r\n            id,\r\n            deviceID\r\n        },\r\n        resolveData: (props) => {\r\n            //log?.print(\"resolve DATA\" + JSON.stringify(props, null, 2))\r\n            if (props.RES?.updateUser)\r\n                return props\r\n            return { ERR: { errCode: userDevicesUpdateApiErrors_e.USER_DEVICES_UPDATE_API_UNHANDLED } }\r\n        },\r\n        //log: log ? new logger(\"base apollo request\", log) : undefined\r\n    }).then(res => res).catch(err => err)\r\n    log?.print(\"response__>>\" + JSON.stringify(res, null, 2))\r\n    return res\r\n}\r\n\r\n","import * as API from \"./v1\";\r\n\r\n\r\nexport const apiClass = new class {\r\n    IP: string | undefined\r\n    ID = \"API-\" + Math.floor(Math.random() * 10001);\r\n    constructor(IP?: string) {\r\n        console.log(\">>>>api class constructor>>>>\" + this.ID)\r\n        this.IP = IP\r\n    }\r\n}\r\n\r\nexport default API\r\n","\r\nexport interface deviceSocketHBResponse {\r\n  MAC?: string;\r\n  WIFI_STATUS?: \"WL_TIMEOUT\" | \"WL_CONNECTED\" | \"WL_DISCONNECTED\" | \"WL_SCAN_COMPLETED\" | \"WL_CONNECT_FAILED\" | \"WL_IDLE_STATUS\" | \"WL_CONNECTION_LOST\" | \"WL_NO_SSID_AVAIL\" | \"UNKNOWN\";\r\n  PAIR_STATUS?: boolean;\r\n  IP?: string;\r\n  DEVICE?: string;\r\n  BUILD_VERSION?: string;\r\n}\r\n\r\ninterface webSocketProps {\r\n  (_props: {\r\n    ipAddr: string\r\n    onOpen?: (s: any) => void\r\n    onMsg: (s: any) => void\r\n    onErr?: (s: any) => void\r\n    onClose?: (s: any) => void\r\n  }): Promise<WebSocket | null>;\r\n}\r\nconst getWebSocket: webSocketProps = async ({\r\n  ipAddr,\r\n  onOpen,\r\n  onMsg,\r\n  onErr,\r\n  onClose,\r\n}) => {\r\n  let wsUrl = `ws://${ipAddr}/ws`;\r\n  try {\r\n    let ws = await new WebSocket(wsUrl);\r\n\r\n    ws.onopen = (e) => {\r\n      if (ws) {\r\n        try {\r\n          ws.send(\"Connected\");\r\n        } catch (e) {\r\n          console.error(\"errrrrrrrrrrrrrrrrrrrrr\" + e);\r\n        }\r\n        onOpen ? onOpen(e) : {}\r\n      }\r\n    };\r\n\r\n    ws.onerror = (e) => {\r\n      onErr ? onErr(e) : {}\r\n    };\r\n\r\n    ws.onmessage = (m) => {\r\n      onMsg(m.data);\r\n    };\r\n\r\n    ws.onclose = (e) => {\r\n      onClose ? onClose(e) : {}\r\n    }\r\n    if (ws)\r\n      return ws\r\n    else\r\n      return null\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { getWebSocket };\r\n\r\n","import moment from \"moment\";\r\n\r\n\r\n\r\n\r\n\r\nconst getCurrentTimeStampInSeconds = () => {\r\n  return Math.floor(Date.now() / 1000);\r\n};\r\n\r\ntype getTimeDiffNow_type = (timeStamp: number | undefined) => number;\r\nconst getTimeDiffNow: getTimeDiffNow_type = (timeStamp) => {\r\n  if (timeStamp) return Math.floor((getCurrentTimeStampInSeconds() - timeStamp) / 1000);\r\n  return 0;\r\n};\r\n\r\ntype getTimeDiffNowInMs_type = (timeStamp: number | undefined) => number;\r\nconst getTimeDiffNowInMs: getTimeDiffNowInMs_type = (timeStamp) => {\r\n  if (timeStamp) return Math.round(Date.now() - timeStamp);\r\n  return 0;\r\n};\r\n\r\nexport {\r\n  getCurrentTimeStampInSeconds,\r\n  getTimeDiffNow,\r\n  getTimeDiffNowInMs,\r\n};\r\n","import { State } from \"react-native-gesture-handler\"\r\nimport { log } from \"react-native-reanimated\"\r\nimport UNIVERSALS from \"../../@universals\"\r\nimport { reduxStore } from \"../../redux\"\r\nimport { _deviceListSaga_action } from \"../../redux/deviceListReducer/saga/deviceList\"\r\nimport { getCurrentTimeStampInSeconds } from \"../DateTimeUtil\"\r\nimport { logger } from \"../logger\"\r\n\r\n\r\n\r\n\r\ninterface beforeUpdateDevice_props {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t\r\n    preState?: UNIVERSALS.GLOBALS.DEVICE_t\r\n    deletedObject?: UNIVERSALS.GLOBALS.DEVICE_t\r\n}\r\ntype beforeUpdateDevice_t = (props: beforeUpdateDevice_props) => void\r\nconst beforeUpdateDeviceSideEffect: beforeUpdateDevice_t = async ({ device }) => { }\r\n\r\n\r\n\r\n/*\r\n'########::'########:'##::::'##:'####::'######::'########::::'##::::'##:'########::'########:::::'###::::'########:'########:\r\n ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....::::: ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....::\r\n ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##:::::::::: ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::\r\n ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######:::::: ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######:::\r\n ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...::::::: ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::\r\n ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##:::::::::: ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##:::::::\r\n ########:: ########:::. ###::::'####:. ######:: ########::::. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########:\r\n........:::........:::::...:::::....:::......:::........::::::.......:::..:::::::::........:::..:::::..:::::..:::::........::\r\n*/\r\n\r\ninterface add_updateDevices_props {\r\n    cmd: \"ADD_UPDATE_DEVICES\"\r\n    newDevices: UNIVERSALS.GLOBALS.DEVICE_t[]\r\n    /** weather or not coming devices are coming from cloud as user's all devices latest state */\r\n    cloudState?: boolean\r\n    log?: logger\r\n}\r\ninterface add_updateDevices_t { (props: add_updateDevices_props): UNIVERSALS.GLOBALS.DEVICE_t[] }\r\nconst add_updateDevices: add_updateDevices_t = ({ newDevices, cloudState, ...props }) => {\r\n    let requireReduxUpdate = false\r\n    let localDeviceList = reduxStore.store.getState().deviceReducer.deviceList\r\n    let newDeviceList = localDeviceList\r\n    newDevices.forEach((newDevice, newDevice_index) => {\r\n        let localStateDevice = newDeviceList.find(item => item.Mac == newDevice.Mac)\r\n        if (localStateDevice) {\r\n            let localStateDeviceIndex = newDeviceList.findIndex(item => item.Mac == newDevice.Mac)\r\n            props.log?.print(\"device found in local state\")\r\n            beforeUpdateDeviceSideEffect({ device: newDevice, preState: localStateDevice })\r\n            if (localStateDevice.localTimeStamp < newDevice.localTimeStamp\r\n                || (newDevice.ts && localStateDevice.localTimeStamp < newDevice.ts)\r\n            ) {\r\n                requireReduxUpdate = true\r\n                newDeviceList = newDeviceList.filter(item => item.Mac != newDevice.Mac)\r\n                newDeviceList.splice(localStateDeviceIndex, 0, newDevice)\r\n            } else if ((localStateDevice.ts && newDevice.ts && localStateDevice.ts != newDevice.ts)\r\n                || (!localStateDevice.ts && newDevice.ts)\r\n            ) {\r\n                requireReduxUpdate = true\r\n                beforeUpdateDeviceSideEffect({ device: { ...localStateDevice, ts: newDevice.ts }, preState: localStateDevice })\r\n                newDeviceList = newDeviceList.filter(item => item.Mac != newDevice.Mac)\r\n                newDeviceList.splice(localStateDeviceIndex, 0, newDevice)\r\n            }\r\n        } else {\r\n            props.log?.print(\"device not found in local state\")\r\n            /* check if device is present in deletedDeviceList */\r\n            let deviceMatchFromDeletedDeviceList = reduxStore.store.getState().deviceReducer.deletedDevices.find(item => item.Mac == newDevice.Mac)\r\n            if (deviceMatchFromDeletedDeviceList) {\r\n                props.log?.print(\"device found in deleted device list \")\r\n                //props.log?.print(\"device from deleted list\")._printPretty(deviceMatchFromDeletedDeviceList)\r\n                //props.log?.print(\"device from cloud\")._printPretty(newDevice)\r\n            }\r\n            if (deviceMatchFromDeletedDeviceList && deviceMatchFromDeletedDeviceList.localTimeStamp >= newDevice.localTimeStamp) {// IMP - only filter deletedDeviceList in case if its a cloudState comparision, generally user could be re-pairing the device after delete\r\n                /** \r\n                 * if device is present in deletedDeviceList and timeStamp\r\n                 * is latest compared to `newDevice.ts`, then in that case it is assumed\r\n                 * that the deviec delete is not yet updated to cloud and newDevice shouldn't\r\n                 * be added to list\r\n                 */\r\n                props.log?.print(\"not adding device \" + newDevice.Mac + \" to device list as it is deleted and not updated to cloud yet\")\r\n            }\r\n            else {\r\n                requireReduxUpdate = true\r\n                newDeviceList.push(newDevice)\r\n                props.log?.print(\"removing \" + newDevice.Mac + \" from deleted deviceList\")\r\n                reduxStore.store.dispatch(reduxStore.actions.deviceList.deletedDeviceListRedux({\r\n                    deletedDeviceList: reduxStore.store.getState().deviceReducer.deletedDevices.filter(item => item.Mac == newDevice.Mac)\r\n                }))\r\n                beforeUpdateDeviceSideEffect({ device: newDevice })\r\n            }\r\n        }\r\n    });\r\n    if (cloudState) {\r\n        newDeviceList = newDeviceList.filter(item => (!item.id || (() => {\r\n            let devicesFoundInCloudState = false\r\n            newDevices.forEach(element => {\r\n                if (element.Mac == item.Mac)\r\n                    devicesFoundInCloudState = true\r\n            });\r\n            if (devicesFoundInCloudState)\r\n                return true\r\n            props.log?.print(\"removing device mac \" + item.Mac)\r\n            requireReduxUpdate = true\r\n            return false\r\n        })()))\r\n        //props.log?.print(\"filtered device list \" + JSON.stringify(newDeviceList, null, 1))\r\n    }\r\n    if (requireReduxUpdate) {\r\n        props.log?.print(\"Sending Saga Action with new list is \" + JSON.stringify(newDeviceList, null, 2))\r\n        reduxStore.store.dispatch(reduxStore.actions.deviceList.deviceListSaga({\r\n            deviceList: newDeviceList,\r\n            log: props.log ? new logger(\"devicelist saga\", props.log) : undefined\r\n        }))\r\n    } else {\r\n        props.log?.print(\"update not required \")\r\n    }\r\n    return newDeviceList\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n'########::'########:'##::::'##::'#######::'##::::'##:'########::::'########::'########:'##::::'##:'####::'######::'########:\r\n ##.... ##: ##.....:: ###::'###:'##.... ##: ##:::: ##: ##.....::::: ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....::\r\n ##:::: ##: ##::::::: ####'####: ##:::: ##: ##:::: ##: ##:::::::::: ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##:::::::\r\n ########:: ######::: ## ### ##: ##:::: ##: ##:::: ##: ######:::::: ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######:::\r\n ##.. ##::: ##...:::: ##. #: ##: ##:::: ##:. ##:: ##:: ##...::::::: ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...::::\r\n ##::. ##:: ##::::::: ##:.:: ##: ##:::: ##::. ## ##::: ##:::::::::: ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##:::::::\r\n ##:::. ##: ########: ##:::: ##:. #######::::. ###:::: ########:::: ########:: ########:::. ###::::'####:. ######:: ########:\r\n..:::::..::........::..:::::..:::.......::::::...:::::........:::::........:::........:::::...:::::....:::......:::........::\r\n*/\r\n\r\n\r\ninterface removeDeviceProps {\r\n    cmd: \"REMOVE_DEVICE\"\r\n    Mac: string\r\n    log?: logger\r\n}\r\nconst removeDevice = (props: removeDeviceProps) => {\r\n    let device = reduxStore.store.getState().deviceReducer.deviceList.find(item => item.Mac == props.Mac)\r\n    if (device) {\r\n        let newDeviceList = reduxStore.store.getState().deviceReducer.deviceList.filter(device => device.Mac != props.Mac)\r\n        props.log?.print(\"device removed > sending saga update\")._print(JSON.stringify(newDeviceList, null, 2))\r\n        if (device.id) {/** if device is synced with cloud add device in the deleted deviceList so as to remove it from the cloud later from background service */\r\n            let __foo = reduxStore.store.getState().deviceReducer.deletedDevices\r\n            let deviceFromDeletedDeviceList = reduxStore.store.getState().deviceReducer.deletedDevices.find(item => item.Mac == props.Mac)\r\n            if (deviceFromDeletedDeviceList)\r\n                __foo = __foo.filter(item => item.Mac != props.Mac)\r\n            __foo.push({ ...device, localTimeStamp: getCurrentTimeStampInSeconds() })\r\n            reduxStore.store.dispatch(reduxStore.actions.deviceList.deletedDeviceListRedux({\r\n                deletedDeviceList: __foo\r\n            }))\r\n        }\r\n        reduxStore.store.dispatch(reduxStore.actions.deviceList.deviceListSaga({ deviceList: newDeviceList, log: props.log }))\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n:'######:::'#######::'##::::::::'#######::'########:::::'##::::'##:'########::'########:::::'###::::'########:'########:\r\n'##... ##:'##.... ##: ##:::::::'##.... ##: ##.... ##:::: ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....::\r\n ##:::..:: ##:::: ##: ##::::::: ##:::: ##: ##:::: ##:::: ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::\r\n ##::::::: ##:::: ##: ##::::::: ##:::: ##: ########::::: ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######:::\r\n ##::::::: ##:::: ##: ##::::::: ##:::: ##: ##.. ##:::::: ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::\r\n ##::: ##: ##:::: ##: ##::::::: ##:::: ##: ##::. ##::::: ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##:::::::\r\n. ######::. #######:: ########:. #######:: ##:::. ##::::. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########:\r\n:......::::.......:::........:::.......:::..:::::..::::::.......:::..:::::::::........:::..:::::..:::::..:::::........::\r\n*/\r\n\r\n\r\ninterface colorUpdate_props {\r\n    cmd: \"COLOR_UPDATE\"\r\n    deviceMac: string[]\r\n    hsv: { h?: number, s?: number, v?: number }\r\n    gestureState: State,\r\n    log?: logger\r\n}\r\n/** \r\n * ## featureRequest\r\n * - [ ] send the updated devicelist to devicelistAddUpdater\r\n */\r\nconst colorUpdate = ({ deviceMac, hsv: { h, s, v }, gestureState, log }: colorUpdate_props) => {\r\n    reduxStore.store.dispatch(\r\n        reduxStore.actions.deviceList.colorSaga({\r\n            deviceMac,\r\n            hsv: { h, s, v },\r\n            gestureState,\r\n            onActionComplete: ({ newDeviceList }) => {\r\n                reduxStore.store.dispatch(_deviceListSaga_action({ deviceList: newDeviceList, log }))\r\n            },\r\n            log\r\n        })\r\n    );\r\n}\r\n\r\n\r\n\r\n/*\r\n'########::'########:'##::::'##:'####::'######::'########:::::'#######::'########::'########:'########:::::'###::::'########::'#######::'########::\r\n ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....:::::'##.... ##: ##.... ##: ##.....:: ##.... ##:::'## ##:::... ##..::'##.... ##: ##.... ##:\r\n ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##:::::::::: ##:::: ##: ##:::: ##: ##::::::: ##:::: ##::'##:. ##::::: ##:::: ##:::: ##: ##:::: ##:\r\n ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######:::::: ##:::: ##: ########:: ######::: ########::'##:::. ##:::: ##:::: ##:::: ##: ########::\r\n ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...::::::: ##:::: ##: ##.....::: ##...:::: ##.. ##::: #########:::: ##:::: ##:::: ##: ##.. ##:::\r\n ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##:::::::::: ##:::: ##: ##:::::::: ##::::::: ##::. ##:: ##.... ##:::: ##:::: ##:::: ##: ##::. ##::\r\n ########:: ########:::. ###::::'####:. ######:: ########::::. #######:: ##:::::::: ########: ##:::. ##: ##:::: ##:::: ##::::. #######:: ##:::. ##:\r\n........:::........:::::...:::::....:::......:::........::::::.......:::..:::::::::........::..:::::..::..:::::..:::::..::::::.......:::..:::::..::\r\n*/\r\n\r\n\r\n\r\ntype containerListOperation_t = (props: add_updateDevices_props | removeDeviceProps | colorUpdate_props) => void\r\nconst deviceOperation: containerListOperation_t = async (props) => {\r\n    switch (props.cmd) {\r\n        case \"ADD_UPDATE_DEVICES\":\r\n            add_updateDevices(props)\r\n            break;\r\n\r\n\r\n        case \"REMOVE_DEVICE\":\r\n            removeDevice(props)\r\n            break;\r\n\r\n        case \"COLOR_UPDATE\":\r\n            props.log = props.log ? new logger(\"D's OP - color update\", props.log) : undefined\r\n            colorUpdate(props)\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return {}\r\n}\r\n\r\nexport default deviceOperation","import UNIVERSALS from \"../../@universals\";\r\nimport { reduxStore } from \"../../redux\";\r\nimport API from \"../../services/api\";\r\nimport { logger } from \"../logger\";\r\nimport deviceOperator from \"./device.operator\"\r\nimport * as Facebook from 'expo-facebook';\r\nimport Alert from \"../../components/common/Alert\"\r\n\r\n\r\n/*\r\n'##::::::::'#######:::'######::::'#######::'##::::'##:'########::::'########:'##::::'##:'##::: ##::'######::'########:'####::'#######::'##::: ##:\r\n ##:::::::'##.... ##:'##... ##::'##.... ##: ##:::: ##:... ##..::::: ##.....:: ##:::: ##: ###:: ##:'##... ##:... ##..::. ##::'##.... ##: ###:: ##:\r\n ##::::::: ##:::: ##: ##:::..::: ##:::: ##: ##:::: ##:::: ##::::::: ##::::::: ##:::: ##: ####: ##: ##:::..::::: ##::::: ##:: ##:::: ##: ####: ##:\r\n ##::::::: ##:::: ##: ##::'####: ##:::: ##: ##:::: ##:::: ##::::::: ######::: ##:::: ##: ## ## ##: ##:::::::::: ##::::: ##:: ##:::: ##: ## ## ##:\r\n ##::::::: ##:::: ##: ##::: ##:: ##:::: ##: ##:::: ##:::: ##::::::: ##...:::: ##:::: ##: ##. ####: ##:::::::::: ##::::: ##:: ##:::: ##: ##. ####:\r\n ##::::::: ##:::: ##: ##::: ##:: ##:::: ##: ##:::: ##:::: ##::::::: ##::::::: ##:::: ##: ##:. ###: ##::: ##:::: ##::::: ##:: ##:::: ##: ##:. ###:\r\n ########:. #######::. ######:::. #######::. #######::::: ##::::::: ##:::::::. #######:: ##::. ##:. ######::::: ##::::'####:. #######:: ##::. ##:\r\n........:::.......::::......:::::.......::::.......::::::..::::::::..:::::::::.......:::..::::..:::......::::::..:::::....:::.......:::..::::..::\r\n*/\r\n\r\ninterface logoutFunction_props {\r\n    cmd: \"LOGOUT\"\r\n    onLogout?: () => void\r\n}\r\n/**\r\n * \r\n * ## featureAddition\r\n * - [x] clear deviceList and reduxState upon logout\r\n */\r\nconst logoutFunction = ({ onLogout }: logoutFunction_props) => {\r\n    reduxStore.store.dispatch(reduxStore.actions.appCTX.userSagaAction({ user: undefined, saveToDB: true }))\r\n    reduxStore.store.dispatch(reduxStore.actions.deviceList.deviceListSaga({ deviceList: [], saveToDB: true }))\r\n    reduxStore.store.dispatch(reduxStore.actions.HBReducer.HBSocketClear({}))\r\n    if (onLogout)\r\n        onLogout()\r\n    return {}\r\n}\r\n\r\n/*\r\n'##::::::::'#######:::'######:::'####:'##::: ##::::'########:'##::::'##:'##::: ##::'######::'########:'####::'#######::'##::: ##:\r\n ##:::::::'##.... ##:'##... ##::. ##:: ###:: ##:::: ##.....:: ##:::: ##: ###:: ##:'##... ##:... ##..::. ##::'##.... ##: ###:: ##:\r\n ##::::::: ##:::: ##: ##:::..:::: ##:: ####: ##:::: ##::::::: ##:::: ##: ####: ##: ##:::..::::: ##::::: ##:: ##:::: ##: ####: ##:\r\n ##::::::: ##:::: ##: ##::'####:: ##:: ## ## ##:::: ######::: ##:::: ##: ## ## ##: ##:::::::::: ##::::: ##:: ##:::: ##: ## ## ##:\r\n ##::::::: ##:::: ##: ##::: ##::: ##:: ##. ####:::: ##...:::: ##:::: ##: ##. ####: ##:::::::::: ##::::: ##:: ##:::: ##: ##. ####:\r\n ##::::::: ##:::: ##: ##::: ##::: ##:: ##:. ###:::: ##::::::: ##:::: ##: ##:. ###: ##::: ##:::: ##::::: ##:: ##:::: ##: ##:. ###:\r\n ########:. #######::. ######:::'####: ##::. ##:::: ##:::::::. #######:: ##::. ##:. ######::::: ##::::'####:. #######:: ##::. ##:\r\n........:::.......::::......::::....::..::::..:::::..:::::::::.......:::..::::..:::......::::::..:::::....:::.......:::..::::..::\r\n*/\r\n\r\nenum loginValidationError_e {\r\n    LOGIN_VALIDATION_EMAIL_REQUIRED = \"LOGIN_VALIDATION : EMAIL REQUIRED\",\r\n    LOGIN_VALIDATION_EMAIL_INVALID = \"LOGIN_VALIDATION : EMAIL INVALID\",\r\n    LOGIN_VALIDATION_PASSWORD_REQUIRED = \"LOGIN_VALIDATION : PASSWORD REQUIRED\",\r\n    LOGIN_VALIDATION_PASSWORD_TOO_SHORT = \"LOGIN_VALIDATION : PASSWORD TOO SHORT\",\r\n}\r\ninterface loginFunction_props {\r\n    cmd: \"LOGIN\"\r\n    email: string\r\n    password: string\r\n    onLoginSuccess?: (user: UNIVERSALS.GLOBALS.USER_t) => void\r\n    onValidateDataFailed?: (props: API.baseError<any, loginValidationError_e>) => void\r\n    onLoginFailed?: (props: Pick<API.cloudAPI.user.loginAPI._loginAPi_returnType, \"ERR\"> | { ERR?: API.baseError<any, loginValidationError_e> }) => void\r\n    log?: logger\r\n}\r\ntype loginFunction_t = (props: loginFunction_props) => Promise<API.cloudAPI.user.loginAPI._loginAPi_returnType>\r\n/**\r\n * @description\r\n * - validates the input and return appropriate errors\r\n * - hit loginAPI\r\n * - update redux userState in case successfull response\r\n * - else return eoors as response\r\n */\r\nconst loginFunction: loginFunction_t = async ({\r\n    email,\r\n    password,\r\n    onLoginFailed,\r\n    onValidateDataFailed,\r\n    onLoginSuccess,\r\n    log\r\n}) => {\r\n    if (!email || !UNIVERSALS.util.ValidateEmail({ email })) {\r\n        log?.print(\"validation : email: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: loginValidationError_e.LOGIN_VALIDATION_EMAIL_REQUIRED, errMsg: \"Kindly, provide a valid email address\" }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onLoginFailed ? onLoginFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    } if (password && password.length < 8) {\r\n        log?.print(\"validation => username: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: loginValidationError_e.LOGIN_VALIDATION_PASSWORD_REQUIRED, errMsg: \"Kindly, provide a valid password\" }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onLoginFailed ? onLoginFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    const res = await API.cloudAPI.user.loginAPI.v1({\r\n        email,\r\n        password,\r\n        //log: log ? new logger(\"login API\", log) : undefined\r\n    })\r\n    if (res.RES?.id) {\r\n        log?.print(\"user found >>>> \" + JSON.stringify(res.RES, null, 2))\r\n        userStoreUpdateFunction({ user: UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES }) })\r\n        log?.print(\"device from cloud\" + JSON.stringify(res.RES.devices, null, 2))\r\n        log?.print(\"device converted to local\" + JSON.stringify(UNIVERSALS.GLOBALS.convert_Devices_backendToLocal({ devices: res.RES.devices ? res.RES.devices : [] }), null, 2))\r\n        deviceOperator({\r\n            cmd: \"ADD_UPDATE_DEVICES\",\r\n            newDevices: res.RES.devices ? UNIVERSALS.GLOBALS.convert_Devices_backendToLocal({ devices: res.RES.devices }) : [],\r\n            log: log ? new logger(\"device-operator add_update_devices\", log) : undefined\r\n        })\r\n        onLoginSuccess ? onLoginSuccess(UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES })) : {}\r\n        return res\r\n    }\r\n    else {\r\n        log?.print(\"ERR no user found >>>>-- \" + JSON.stringify(res, null, 2))\r\n        onLoginFailed ? onLoginFailed(res) : {}\r\n    }\r\n    return res\r\n}\r\n\r\n\r\n/*\r\n:'######::'####::'######:::'##::: ##:'##::::'##:'########:::::'########:'##::::'##:'##::: ##::'######::'########:'####::'#######::'##::: ##:\r\n'##... ##:. ##::'##... ##:: ###:: ##: ##:::: ##: ##.... ##:::: ##.....:: ##:::: ##: ###:: ##:'##... ##:... ##..::. ##::'##.... ##: ###:: ##:\r\n ##:::..::: ##:: ##:::..::: ####: ##: ##:::: ##: ##:::: ##:::: ##::::::: ##:::: ##: ####: ##: ##:::..::::: ##::::: ##:: ##:::: ##: ####: ##:\r\n. ######::: ##:: ##::'####: ## ## ##: ##:::: ##: ########::::: ######::: ##:::: ##: ## ## ##: ##:::::::::: ##::::: ##:: ##:::: ##: ## ## ##:\r\n:..... ##:: ##:: ##::: ##:: ##. ####: ##:::: ##: ##.....:::::: ##...:::: ##:::: ##: ##. ####: ##:::::::::: ##::::: ##:: ##:::: ##: ##. ####:\r\n'##::: ##:: ##:: ##::: ##:: ##:. ###: ##:::: ##: ##::::::::::: ##::::::: ##:::: ##: ##:. ###: ##::: ##:::: ##::::: ##:: ##:::: ##: ##:. ###:\r\n. ######::'####:. ######::: ##::. ##:. #######:: ##::::::::::: ##:::::::. #######:: ##::. ##:. ######::::: ##::::'####:. #######:: ##::. ##:\r\n:......:::....:::......::::..::::..:::.......:::..::::::::::::..:::::::::.......:::..::::..:::......::::::..:::::....:::.......:::..::::..::\r\n*/\r\n\r\nenum signupValidationError_e {\r\n    SIGNUP_VALIDATION_EMAIL_REQUIRED = \"SIGNUP_VALIDATION : EMAIL REQUIRED\",\r\n    SIGNUP_VALIDATION_EMAIL_INVALID = \"SIGNUP_VALIDATION : EMAIL INVALID\",\r\n    SIGNUP_VALIDATION_PASSWORD_MISMATCH = \"SIGNUP_VALIDATION : PASSWORD MISMATCH\",\r\n    SIGNUP_VALIDATION_PASSWORD_INVALID = \"SIGNUP_VALIDATION : PASSWORD INVALID\",\r\n    SIGNUP_VALIDATION_PASSWORD_TOO_SHORT = \"SIGNUP_VALIDATION : PASSWORD TOO SHORT\",\r\n    SIGNUP_VALIDATION_USERNAME_TOO_SHORT = \"SIGNUP_VALIDATION : USERNAME_TOO_SHORT\",\r\n    SIGNUP_VALIDATION_USERNAME_REQUIRED = \"SIGNUP_VALIDATION : USERNAME REQUIRED\",\r\n}\r\ninterface signupFunction_props {\r\n    cmd: \"SIGNUP\"\r\n    email: string\r\n    password: string\r\n    userName: string\r\n    onSignupSuccess?: (user: UNIVERSALS.GLOBALS.USER_t) => void\r\n    onValidateDataFailed?: (props: API.baseError<any, signupValidationError_e>) => void\r\n    onSignupFailed?: (props: Pick<API.cloudAPI.user.signupAPI._signupAPi_returnType, \"ERR\"> | { ERR?: API.baseError<any, signupValidationError_e> }) => void\r\n    log?: logger\r\n}\r\ntype signupFunction_t = (props: signupFunction_props) => Promise<API.cloudAPI.user.signupAPI._signupAPi_returnType>\r\n/**\r\n * @description\r\n * - validates the input and return appropriate errors\r\n * - hit signupAPI\r\n * - update redux userState in case successfull response\r\n * - else return eoors as response\r\n */\r\nconst signupFunction: signupFunction_t = async ({\r\n    email,\r\n    password,\r\n    userName,\r\n    onSignupFailed,\r\n    onValidateDataFailed,\r\n    onSignupSuccess,\r\n    log\r\n}) => {\r\n    if (!email || email.length < 6) {\r\n        log?.print(\"validation : email: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: signupValidationError_e.SIGNUP_VALIDATION_EMAIL_INVALID }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onSignupFailed ? onSignupFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    } else if (!userName) {\r\n        log?.print(\"validation : email: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: signupValidationError_e.SIGNUP_VALIDATION_USERNAME_REQUIRED }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onSignupFailed ? onSignupFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    } else if (userName.length < 6) {\r\n        log?.print(\"validation : email: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: signupValidationError_e.SIGNUP_VALIDATION_USERNAME_TOO_SHORT }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onSignupFailed ? onSignupFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    else if (!password || password.length < 8) {\r\n        log?.print(\"validation : email: \" + email + \", pass: \" + password)\r\n        const tempError = { errCode: signupValidationError_e.SIGNUP_VALIDATION_PASSWORD_INVALID }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onSignupFailed ? onSignupFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    const res = await API.cloudAPI.user.signupAPI.v1({\r\n        userName,\r\n        email,\r\n        password,\r\n        log: log ? new logger(\"signup API\", log) : undefined\r\n    })\r\n    log?.print(\"res >>>> \" + JSON.stringify(res, null, 2))\r\n    if (res.RES?.id) {\r\n        log?.print(\"user >>>> \" + JSON.stringify(res.RES, null, 2))\r\n        userStoreUpdateFunction({ user: UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES }) })\r\n        onSignupSuccess ? onSignupSuccess(UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES })) : {}\r\n        return res\r\n    }\r\n    else {\r\n        onSignupFailed ? onSignupFailed(res) : {}\r\n    }\r\n    return res\r\n}\r\n\r\n\r\n\r\n/*\r\n'########::::'###:::::'######::'########:'########:::'#######:::'#######::'##:::'##::::'##::::::::'#######:::'######:::'####:'##::: ##:\r\n ##.....::::'## ##:::'##... ##: ##.....:: ##.... ##:'##.... ##:'##.... ##: ##::'##::::: ##:::::::'##.... ##:'##... ##::. ##:: ###:: ##:\r\n ##::::::::'##:. ##:: ##:::..:: ##::::::: ##:::: ##: ##:::: ##: ##:::: ##: ##:'##:::::: ##::::::: ##:::: ##: ##:::..:::: ##:: ####: ##:\r\n ######:::'##:::. ##: ##::::::: ######::: ########:: ##:::: ##: ##:::: ##: #####::::::: ##::::::: ##:::: ##: ##::'####:: ##:: ## ## ##:\r\n ##...:::: #########: ##::::::: ##...:::: ##.... ##: ##:::: ##: ##:::: ##: ##. ##:::::: ##::::::: ##:::: ##: ##::: ##::: ##:: ##. ####:\r\n ##::::::: ##.... ##: ##::: ##: ##::::::: ##:::: ##: ##:::: ##: ##:::: ##: ##:. ##::::: ##::::::: ##:::: ##: ##::: ##::: ##:: ##:. ###:\r\n ##::::::: ##:::: ##:. ######:: ########: ########::. #######::. #######:: ##::. ##:::: ########:. #######::. ######:::'####: ##::. ##:\r\n..::::::::..:::::..:::......:::........::........::::.......::::.......:::..::::..:::::........:::.......::::......::::....::..::::..::\r\n*/\r\n\r\n\r\nenum FBLoginValidationError_e {\r\n    FB_LOGIN_VALIDATION_EMAIL_INVALID = \"FB_VALIDATION : EMAIL INVALID\",\r\n    FB_LOGIN_VALIDATION_USERNAME_INVALID = \"FB_VALIDATION : USERNAME INVALID\",\r\n}\r\ninterface fbLogin_props {\r\n    cmd: \"FB_LOGIN\"\r\n    onFbLoginSuccess?: (user: UNIVERSALS.GLOBALS.USER_t) => void\r\n    onValidateDataFailed?: (props: API.baseError<any, FBLoginValidationError_e>) => void\r\n    onFbLoginFailed?: (props: Pick<API.cloudAPI.user.signupAPI._signupAPi_returnType | API.cloudAPI.user.loginAPI._loginAPi_returnType, \"ERR\"> | { ERR?: API.baseError<any, FBLoginValidationError_e> }) => void\r\n    log?: logger\r\n}\r\ntype fbLoginFunction_t = (props: fbLogin_props) => Promise<API.cloudAPI.user.loginAPI._loginAPi_returnType | API.cloudAPI.user.signupAPI._signupAPi_returnType>\r\nconst fbLoginFunction: fbLoginFunction_t = async ({ log, ...props }) => {\r\n    try {\r\n        await Facebook.initializeAsync({ appId: \"366634227889659\" });\r\n        log?.print(\"facebook login initialized\");\r\n        const fbProps = await Facebook.logInWithReadPermissionsAsync({\r\n            permissions: [\"public_profile\", \"email\"],\r\n        });\r\n        if (fbProps.type === \"success\") {\r\n            // Get the user's name using Facebook's Graph API\r\n            const response = await fetch(`https://graph.facebook.com/me?fields=id,name,email&access_token=${fbProps.token}`);\r\n            log?.print('fb-auth response <<< ' + JSON.stringify(response));\r\n            let fbRes = await response.json()\r\n            let fbEmail = fbRes.email\r\n            let fbName = fbRes.name\r\n            if (fbEmail && fbName) {\r\n                log?.print(\"found email and username >> \")._print(fbEmail)._print(fbName)\r\n                loginFunction({\r\n                    cmd: \"LOGIN\",\r\n                    email: \"fb-\" + fbEmail,\r\n                    password: \"tempFbLoginPass@1\",\r\n                    onLoginFailed: ({ ERR }) => {\r\n                        log?.print(\"login failed at fbLoginFunction \")._printPretty(ERR)\r\n                        if (ERR?.errCode == API.cloudAPI.user.loginAPI.loginApiErrors_e.LOGIN_API_UNKNOWN_EMAIL) {\r\n                            signupFunction({\r\n                                cmd: \"SIGNUP\",\r\n                                email: \"fb-\" + fbEmail,\r\n                                password: \"tempFbLoginPass@1\",\r\n                                userName: fbName,\r\n                                onSignupSuccess: (res) => {\r\n                                    log?.print(\"signUp success at fbLogin\")._printPretty(res)\r\n                                    props.onFbLoginSuccess ? props.onFbLoginSuccess(res) : {}\r\n                                },\r\n                                onSignupFailed: (res) => {\r\n                                    log?.print(\"signUp failed at fbLogin\")._printPretty(res)\r\n                                    throw new Error(\"signup failed\");\r\n                                }\r\n                            })\r\n                        }\r\n                        else {\r\n                            throw new Error(\"loginFailed\");\r\n                        }\r\n                    },\r\n                    onLoginSuccess: (res) => {\r\n                        log?.print(\"loginSuccess at fbLogin\")._printPretty(res)\r\n                        props.onFbLoginSuccess ? props.onFbLoginSuccess(res) : {}\r\n                    }\r\n                })\r\n            } else {\r\n                log?.print(\"email and username not found\")\r\n                throw new Error(\"\");\r\n            }\r\n        } else {\r\n            log?.print('fb-auth initialize error >>> ');\r\n            throw new Error(\"fb-auth initialize error >>> \");\r\n        }\r\n    } catch ({ message }) {\r\n        log?.print('fb-auth error >>> ' + JSON.stringify(message));\r\n        Alert.alert(\"Facebook Login Error:\", \"you can try logging in with \" + (UNIVERSALS.venderConf.venderPrefix == \"HUE\" ? \"HUElite\" : UNIVERSALS.venderConf.venderPrefix) + \" ID\");\r\n    }\r\n    return {}\r\n}\r\n\r\n\r\n/*\r\n'##::::'##::'######::'########:'########::::::'######::'########::'#######::'########::'########::::'##::::'##:'########::'########:::::'###::::'########:'########:\r\n ##:::: ##:'##... ##: ##.....:: ##.... ##::::'##... ##:... ##..::'##.... ##: ##.... ##: ##.....::::: ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....::\r\n ##:::: ##: ##:::..:: ##::::::: ##:::: ##:::: ##:::..::::: ##:::: ##:::: ##: ##:::: ##: ##:::::::::: ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::\r\n ##:::: ##:. ######:: ######::: ########:::::. ######::::: ##:::: ##:::: ##: ########:: ######:::::: ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######:::\r\n ##:::: ##::..... ##: ##...:::: ##.. ##:::::::..... ##:::: ##:::: ##:::: ##: ##.. ##::: ##...::::::: ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::\r\n ##:::: ##:'##::: ##: ##::::::: ##::. ##:::::'##::: ##:::: ##:::: ##:::: ##: ##::. ##:: ##:::::::::: ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##:::::::\r\n. #######::. ######:: ########: ##:::. ##::::. ######::::: ##::::. #######:: ##:::. ##: ########::::. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########:\r\n:.......::::......:::........::..:::::..::::::......::::::..::::::.......:::..:::::..::........::::::.......:::..:::::::::........:::..:::::..:::::..:::::........::\r\n*/\r\n\r\n\r\n\r\n\r\ninterface userStoreUpdareFunction_props {\r\n    user: UNIVERSALS.GLOBALS.USER_t\r\n    log?: logger\r\n}\r\ntype userStoreUpdateFunction_t = (props: userStoreUpdareFunction_props) => void\r\nexport const userStoreUpdateFunction: userStoreUpdateFunction_t = async ({ user, log }) => {\r\n    const localUserState = reduxStore.store.getState().appCTXReducer.user\r\n    let latestUserState = user\r\n    if (localUserState && user.ts) {\r\n        if (localUserState.localTimeStamp > user.ts) {\r\n            latestUserState = localUserState\r\n            latestUserState.ts = user.ts\r\n        }\r\n        else if (user.ts > localUserState.localTimeStamp) {\r\n            latestUserState = user\r\n        }\r\n    }\r\n    if (latestUserState.localTimeStamp != localUserState?.localTimeStamp && latestUserState.ts != localUserState?.ts) {\r\n        reduxStore.store.dispatch(reduxStore.actions.appCTX.userSagaAction({ user: latestUserState, saveToDB: true }))\r\n    }\r\n}\r\n\r\n\r\n\r\n/*\r\n'##::::'##:'########::'########:::::'###::::'########:'########:::::::'###::::'########::'####:\r\n ##:::: ##: ##.... ##: ##.... ##:::'## ##:::... ##..:: ##.....:::::::'## ##::: ##.... ##:. ##::\r\n ##:::: ##: ##:::: ##: ##:::: ##::'##:. ##::::: ##:::: ##:::::::::::'##:. ##:: ##:::: ##:: ##::\r\n ##:::: ##: ########:: ##:::: ##:'##:::. ##:::: ##:::: ######::::::'##:::. ##: ########::: ##::\r\n ##:::: ##: ##.....::: ##:::: ##: #########:::: ##:::: ##...::::::: #########: ##.....:::: ##::\r\n ##:::: ##: ##:::::::: ##:::: ##: ##.... ##:::: ##:::: ##:::::::::: ##.... ##: ##::::::::: ##::\r\n. #######:: ##:::::::: ########:: ##:::: ##:::: ##:::: ########:::: ##:::: ##: ##::::::::'####:\r\n:.......:::..:::::::::........:::..:::::..:::::..:::::........:::::..:::::..::..:::::::::....::\r\n*/\r\n\r\n\r\n\r\nenum updateValidationError_e {\r\n    UPDATE_VALIDATION_USERNAME_INVALID = \"UPDATE_VALIDATION : USERNAME INVALID/TOO SHORT\",\r\n    UPDATE_VALIDATION_PASSWORD_MISMATCH = \"UPDATE_VALIDATION : NEW PASSWORD & RE-TYPE PASSWORD MISMATCH\",\r\n    UPDATE_VALIDATION_NEW_PASSWORD_TOO_SHORT = \"UPDATE_VALIDATION : NEW PASSWORD TOO SHORT\",\r\n    UPDATE_VALIDATION_ID_REQUIRED = \"UPDATE_VALIDATION : USERID IS REQUIRED\",\r\n    UPDATE_VALIDATION_NOTHING_TO_UPDATE = \"UPDATE_VALIDATION : NOTHING TO UPDATE\",\r\n}\r\ninterface updateFunction_props {\r\n    cmd: \"UPDATE\"\r\n    id: string\r\n    password: string\r\n    userName: string\r\n    onUpdateSuccess?: (user: UNIVERSALS.GLOBALS.USER_t) => void\r\n    onValidateDataFailed?: (props: API.baseError<any, updateValidationError_e>) => void\r\n    onUpdateFailed?: (props: Pick<API.cloudAPI.user.userUpdateAPI._userUpdate_returnType, \"ERR\"> | { ERR?: API.baseError<any, updateValidationError_e> }) => void\r\n    log?: logger\r\n}\r\ntype updateFunction_t = (props: updateFunction_props) => Promise<API.cloudAPI.user.userUpdateAPI._userUpdate_returnType>\r\nconst updateFunction: updateFunction_t = async ({\r\n    id,\r\n    password,\r\n    userName,\r\n    onUpdateFailed,\r\n    onValidateDataFailed,\r\n    onUpdateSuccess,\r\n    log\r\n}) => {\r\n    if (!id || id.length < 10) {\r\n        log?.print(\"validation => username: \" + userName + \", pass: \" + password)\r\n        const tempError = { errCode: updateValidationError_e.UPDATE_VALIDATION_ID_REQUIRED }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onUpdateFailed ? onUpdateFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    } else if (userName && userName.length < 6) {\r\n        log?.print(\"validation => username: \" + userName + \", pass: \" + password)\r\n        const tempError = { errCode: updateValidationError_e.UPDATE_VALIDATION_USERNAME_INVALID }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onUpdateFailed ? onUpdateFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    } else if (password && password.length < 8) {\r\n        log?.print(\"validation => username: \" + userName + \", pass: \" + password)\r\n        const tempError = { errCode: updateValidationError_e.UPDATE_VALIDATION_NEW_PASSWORD_TOO_SHORT }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onUpdateFailed ? onUpdateFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    else if (!password && !userName) {\r\n        log?.print(\"validation => username: \" + userName + \", pass: \" + password)\r\n        const tempError = { errCode: updateValidationError_e.UPDATE_VALIDATION_NOTHING_TO_UPDATE }\r\n        onValidateDataFailed ? onValidateDataFailed(tempError) : {}\r\n        onUpdateFailed ? onUpdateFailed({ ERR: tempError }) : {}\r\n        return {}\r\n    }\r\n    const res = await API.cloudAPI.user.userUpdateAPI.v1({\r\n        id,\r\n        userName,\r\n        password,\r\n        log: log ? new logger(\"signup API\", log) : undefined\r\n    })\r\n    log?.print(\"res >>>> \" + JSON.stringify(res, null, 2))\r\n    if (res.RES?.id) {\r\n        log?.print(\"user >>>> \" + JSON.stringify(res.RES, null, 2))\r\n        userStoreUpdateFunction({ user: UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES }) })\r\n        onUpdateSuccess ? onUpdateSuccess(UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: res.RES })) : {}\r\n        return res\r\n    }\r\n    else {\r\n        onUpdateFailed ? onUpdateFailed(res) : {}\r\n    }\r\n    return res\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n'##::::'##::'######::'########:'########::::::'#######::'########::'########:'########:::::'###::::'########:'####::'#######::'##::: ##:\r\n ##:::: ##:'##... ##: ##.....:: ##.... ##::::'##.... ##: ##.... ##: ##.....:: ##.... ##:::'## ##:::... ##..::. ##::'##.... ##: ###:: ##:\r\n ##:::: ##: ##:::..:: ##::::::: ##:::: ##:::: ##:::: ##: ##:::: ##: ##::::::: ##:::: ##::'##:. ##::::: ##::::: ##:: ##:::: ##: ####: ##:\r\n ##:::: ##:. ######:: ######::: ########::::: ##:::: ##: ########:: ######::: ########::'##:::. ##:::: ##::::: ##:: ##:::: ##: ## ## ##:\r\n ##:::: ##::..... ##: ##...:::: ##.. ##:::::: ##:::: ##: ##.....::: ##...:::: ##.. ##::: #########:::: ##::::: ##:: ##:::: ##: ##. ####:\r\n ##:::: ##:'##::: ##: ##::::::: ##::. ##::::: ##:::: ##: ##:::::::: ##::::::: ##::. ##:: ##.... ##:::: ##::::: ##:: ##:::: ##: ##:. ###:\r\n. #######::. ######:: ########: ##:::. ##::::. #######:: ##:::::::: ########: ##:::. ##: ##:::: ##:::: ##::::'####:. #######:: ##::. ##:\r\n:.......::::......:::........::..:::::..::::::.......:::..:::::::::........::..:::::..::..:::::..:::::..:::::....:::.......:::..::::..::\r\n*/\r\n\r\ntype containerListOperation_t = (props: logoutFunction_props | loginFunction_props | signupFunction_props | updateFunction_props | fbLogin_props) => Promise<{ RES?: UNIVERSALS.GLOBALS.USER_t, ERR?: API.baseError<any, any> }>\r\nconst userOperation: containerListOperation_t = async (props) => {\r\n    switch (props.cmd) {\r\n        case \"LOGOUT\":\r\n            let logoutRes = logoutFunction(props)\r\n            return logoutRes\r\n            break;\r\n\r\n        case \"LOGIN\":\r\n            let loginRes = await loginFunction(props)\r\n            return loginRes\r\n            break;\r\n\r\n        case \"SIGNUP\":\r\n            let signupRes = await signupFunction(props)\r\n            return signupRes\r\n            break;\r\n\r\n        case \"UPDATE\":\r\n            let updateRes = await updateFunction(props)\r\n            return updateRes\r\n            break\r\n\r\n        case \"FB_LOGIN\":\r\n            let fbLoginRes = await fbLoginFunction(props)\r\n            return fbLoginRes\r\n            break\r\n\r\n        default:\r\n            break;\r\n    }\r\n    return {}\r\n}\r\n\r\nexport default userOperation","import { Alert, Platform } from \"react-native\"\r\n\r\n\r\nexport default Platform.OS == \"web\" ? { alert: (heading: string, message: string, _?: any, __?: any) => { alert(message) } } : Alert","import user from \"./user.operator\"\r\nimport device from \"./device.operator\"\r\nimport { userStoreUpdateFunction } from \"./user.operator\"\r\n\r\n\r\nexport const appOperator = { user, device, userStoreUpdateFunction }","import { reduxConstant } from \"../..\";\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _getBaseAction, __baseAction_Props } from \"../../sagas/sagaBaseWorkers\";\r\n\r\ntype HBDeviceList_msgSentType = {\r\n  Mac: string;\r\n  lastMsgSentTs: number;\r\n};\r\n\r\ntype HBDeviceList_msgRecType = {\r\n  Mac: string;\r\n  lastMsgRecTs: number;\r\n};\r\n\r\nexport interface HBSocketList_t {\r\n  Mac: string\r\n  socket?: WebSocket\r\n  lastMsgSentTs?: number;\r\n  lastMsgRecTs?: number;\r\n  //hsv?: { h: number, s: number, v: number }\r\n}\r\n\r\nexport interface HBReducerReducerState_Prop {\r\n  HBSocketList: HBSocketList_t[]\r\n  HBDevieclist_msgSent: HBDeviceList_msgSentType[]\r\n  HBDevieclist_msgRec: HBDeviceList_msgRecType[]\r\n}\r\n\r\nexport const initialState: HBReducerReducerState_Prop = {\r\n  HBSocketList: [],\r\n  HBDevieclist_msgSent: [],\r\n  HBDevieclist_msgRec: [],\r\n};\r\n\r\nexport const HBReducer = (\r\n  state = initialState,\r\n  action: _actionReturnTypes\r\n) => {\r\n  switch (action.type) {\r\n    case _reduxConstant.HB_DEVICELIST_REDUX:\r\n      const data = Object.assign({}, state, {\r\n        HBDevieclist_msgSent: action.props.HBDeviceList.HBDevieclist_msgSent,\r\n        HBDevieclist_msgRec: action.props.HBDeviceList.HBDevieclist_msgRec\r\n      });\r\n      return data;\r\n\r\n    case _reduxConstant.HB_DEVICELIST_MSG_SENT:\r\n      let deviceFound = false\r\n      const newList = state.HBDevieclist_msgSent.map((item, index) => {\r\n        if (item.Mac == action.props.Mac) {\r\n          deviceFound = true\r\n          item.lastMsgSentTs = action.props.lastMsgSentTs\r\n        }\r\n        return item\r\n      })\r\n      if (!deviceFound) {\r\n        newList.push({ Mac: action.props.Mac, lastMsgSentTs: action.props.lastMsgSentTs })\r\n      }\r\n      return Object.assign({}, state, { HBDevieclist_msgSent: newList })\r\n      break;\r\n\r\n    case _reduxConstant.HB_DEVICELIST_MSG_REC:\r\n      let _deviceFound = false\r\n      const _newList = state.HBDevieclist_msgRec.map((item, index) => {\r\n        if (item.Mac == action.props.Mac) {\r\n          _deviceFound = true\r\n          item.lastMsgRecTs = action.props.lastMsgRecTs\r\n        }\r\n        return item\r\n      })\r\n      if (!_deviceFound) {\r\n        _newList.push({ Mac: action.props.Mac, lastMsgRecTs: action.props.lastMsgRecTs })\r\n      }\r\n      return Object.assign({}, state, { HBDeviceList_msgRecType: _newList })\r\n      break;\r\n\r\n    case _reduxConstant.HB_SOCKET_LIST:\r\n      let preState = state.HBSocketList.find(item => item.Mac == action.props.item.Mac)\r\n      let newItem = Object.assign({}, preState ? preState : {}, action.props.item)\r\n      let __newList = state.HBSocketList\r\n      if (preState)\r\n        __newList = state.HBSocketList.map((item, index) => {\r\n          if (item.Mac == action.props.item.Mac) {\r\n            return newItem\r\n          }\r\n          return item\r\n        })\r\n      else {\r\n        __newList.push(newItem)\r\n      }\r\n      return Object.assign({}, state, { HBSocketList: __newList })\r\n      break;\r\n\r\n    case reduxConstant.HB_SOCKET_LIST_CLEAR:\r\n      return Object.assign({}, state, { HBSocketList: [] })\r\n      break;\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\n\r\n\r\ninterface HBDeviceListReduxAction_Props {\r\n  HBDeviceList: HBReducerReducerState_Prop;\r\n}\r\nexport const _actions = {\r\n  /** @deprecated */\r\n  HBList: _getBaseAction<HBDeviceListReduxAction_Props>(_reduxConstant.HB_DEVICELIST_REDUX),\r\n  /** @deprecated */\r\n  HBMsgSent: _getBaseAction<HBDeviceList_msgSentType>(_reduxConstant.HB_DEVICELIST_MSG_SENT),\r\n  /** @deprecated */\r\n  HBMsgRec: _getBaseAction<HBDeviceList_msgRecType>(_reduxConstant.HB_DEVICELIST_MSG_REC),\r\n  HBSocket: _getBaseAction<{ item: HBSocketList_t }>(_reduxConstant.HB_SOCKET_LIST),\r\n  HBSocketClear: _getBaseAction<{}>(_reduxConstant.HB_SOCKET_LIST_CLEAR)\r\n}\r\n\r\nexport type _actionReturnTypes =\r\n  | __baseAction_Props<HBDeviceListReduxAction_Props> & {\r\n    type: _reduxConstant.HB_DEVICELIST_REDUX\r\n  }\r\n  | __baseAction_Props<HBDeviceList_msgSentType> & {\r\n    type: _reduxConstant.HB_DEVICELIST_MSG_SENT\r\n  }\r\n  | __baseAction_Props<HBDeviceList_msgRecType> & {\r\n    type: _reduxConstant.HB_DEVICELIST_MSG_REC\r\n  }\r\n  | __baseAction_Props<{ item: HBSocketList_t }> & {\r\n    type: _reduxConstant.HB_SOCKET_LIST\r\n  }\r\n  | __baseAction_Props<{}> & {\r\n    type: _reduxConstant.HB_SOCKET_LIST_CLEAR\r\n  }","import { select } from \"redux-saga/effects\";\r\nimport { reduxStore } from \"../..\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport api from \"../../../services/api\";\r\nimport { deviceSocketHBResponse, getWebSocket } from \"../../../services/backGroundServices/webSocket\";\r\nimport { appOperator } from \"../../../util/app.operator\";\r\nimport { getCurrentTimeStampInSeconds } from \"../../../util/DateTimeUtil\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { _deviceSaga_action } from \"../../deviceListReducer/saga/deviceList\";\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _appState } from \"../../rootReducer\";\r\nimport { _getWorker } from \"../../sagas/sagaBaseWorkers\";\r\nimport { HBSocketList_t, _actions } from \"../reducers/HBReducer\";\r\n\r\n\r\n\r\ninterface bgServiceSagaAction_porps {\r\n    iteration: number\r\n    log?: logger\r\n}\r\nexport const [bgServiceWatcher, bgServiceSagaAction] = _getWorker<bgServiceSagaAction_porps>({\r\n    type: _reduxConstant.BG_SERVICE_SAGA,\r\n    shouldTakeLatest: true,\r\n    callable: function* containersWorker({ iteration, log }) {\r\n        try {\r\n            let _deviceList: UNIVERSALS.GLOBALS.DEVICE_t[] = yield select((state: _appState) => state.deviceReducer.deviceList)\r\n            log?.print(iteration + \" - bgService : : >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> : devicelist length - \" + _deviceList.length)\r\n            performSideEffects({\r\n                user: reduxStore.store.getState().appCTXReducer.user,\r\n                iteration,\r\n                //log: log ? new logger(\"performSideEffect\", log) : undefined\r\n            })\r\n            let socketContainer: HBSocketList_t[] = yield select((state: _appState) => state.HBReducer.HBSocketList)\r\n            if (_deviceList.length) {\r\n                _deviceList.forEach(async device => {\r\n                    handleDeviceInMapLoop({\r\n                        device,\r\n                        iteration,\r\n                        user: reduxStore.store.getState().appCTXReducer.user,\r\n                        //log: log ? new logger(\"handle_device_in_loop\", log) : undefined\r\n                    })\r\n                    const localSocketContainer = socketContainer.find(item => item.Mac == device.Mac)\r\n                    if (localSocketContainer?.socket) {\r\n                        log?.print(\"device : \" + device.Mac + \" has socket\")\r\n                    } else {\r\n                        let socket = null\r\n                        let res = await api.deviceAPI.authAPI.v1({\r\n                            IP: device.IP,\r\n                            //log: log ? new logger(\"authAPI\", log) : undefined\r\n                        })\r\n                        //log?.print(\"authAPI from device : \" + device.Mac + \" >> \" + JSON.stringify(res))\r\n                        if (res.RES?.Mac == device.Mac) {\r\n                            log?.print(device.ts + \"getting socket for device : \" + device.Mac)\r\n                            try {\r\n                                socket = await getWebSocket({\r\n                                    ipAddr: device.IP,\r\n                                    onOpen: () => {\r\n                                        //log(\"WS Connected for Devie >> \" + device.Mac);\r\n                                    },\r\n                                    onMsg: (msg) => {\r\n                                        try {\r\n                                            const data: deviceSocketHBResponse | null = msg\r\n                                                ? JSON.parse(msg)\r\n                                                : null;\r\n                                            reduxStore.store.dispatch(_actions.HBSocket({ item: { Mac: device.Mac, lastMsgRecTs: getCurrentTimeStampInSeconds() } }))\r\n                                            //log(\"SOCKET MSG >> \" + JSON.stringify(data))\r\n                                        } catch (error) {\r\n                                            log?.print(error);\r\n                                        }\r\n                                    },\r\n                                    onErr: (e) => {\r\n                                        log?.print(\"Ws Error - \" + JSON.stringify(e));\r\n                                        reduxStore.store.dispatch(_actions.HBSocket({ item: { Mac: device.Mac, socket: undefined } }))\r\n                                    },\r\n                                    onClose: () => {\r\n                                        reduxStore.store.dispatch(_actions.HBSocket({ item: { Mac: device.Mac, socket: undefined } }))\r\n                                    },\r\n                                })\r\n                                if (socket) {\r\n                                    log?.print(\"updating HBsocket list for device : \" + device.Mac)\r\n                                    reduxStore.store.dispatch(_actions.HBSocket({ item: { Mac: device.Mac, socket, lastMsgRecTs: getCurrentTimeStampInSeconds() } }))\r\n                                } else {\r\n                                    log?.print(\"no socket : \" + device.Mac)\r\n                                }\r\n                            } catch (error) {\r\n                                log?.print(\"get socket error\")\r\n                            }\r\n                        } else {\r\n                            //log?.print(\"no response from Auth api\")\r\n                        }\r\n                    }\r\n\r\n                })\r\n            }\r\n        } catch (error) {\r\n            log?.print(\"try-catch error\")\r\n            log?.print(error)\r\n        }\r\n    }\r\n})\r\n\r\n\r\n/*\r\n'##::::'##::::'###::::'####:'##::: ##:::::'######::'####:'########::'########::::'########:'########:'########:'########::'######::'########:\r\n ###::'###:::'## ##:::. ##:: ###:: ##::::'##... ##:. ##:: ##.... ##: ##.....::::: ##.....:: ##.....:: ##.....:: ##.....::'##... ##:... ##..::\r\n ####'####::'##:. ##::: ##:: ####: ##:::: ##:::..::: ##:: ##:::: ##: ##:::::::::: ##::::::: ##::::::: ##::::::: ##::::::: ##:::..::::: ##::::\r\n ## ### ##:'##:::. ##:: ##:: ## ## ##::::. ######::: ##:: ##:::: ##: ######:::::: ######::: ######::: ######::: ######::: ##:::::::::: ##::::\r\n ##. #: ##: #########:: ##:: ##. ####:::::..... ##:: ##:: ##:::: ##: ##...::::::: ##...:::: ##...:::: ##...:::: ##...:::: ##:::::::::: ##::::\r\n ##:.:: ##: ##.... ##:: ##:: ##:. ###::::'##::: ##:: ##:: ##:::: ##: ##:::::::::: ##::::::: ##::::::: ##::::::: ##::::::: ##::: ##:::: ##::::\r\n ##:::: ##: ##:::: ##:'####: ##::. ##::::. ######::'####: ########:: ########:::: ########: ##::::::: ##::::::: ########:. ######::::: ##::::\r\n..:::::..::..:::::..::....::..::::..::::::......:::....::........:::........:::::........::..::::::::..::::::::........:::......::::::..:::::\r\n*/\r\n\r\n\r\n/**\r\n * @description performs data sideEffects for app and Cloud state sync\r\n * \r\n * @responsiblities\r\n * - [ ] onFirstIteration get cloudState and operate upon data\r\n *      - [ ] remove deleted devices from user DataSetdevicesList\r\n */\r\nconst performSideEffects = async ({ user, iteration, log = new logger(\"test function\") }: { user?: UNIVERSALS.GLOBALS.USER_t, iteration: number, log?: logger }) => {\r\n    if ((iteration == 0 || iteration % 5 == 0) && user?.id) {\r\n        //log?.print(\"fetching user\")\r\n        const userRes = await api.cloudAPI.user.userQuery.v1({\r\n            id: user.id,\r\n            //log: log ? new logger(\"userQueryAPI\", log) : undefined\r\n        })\r\n        //log?.print(\"userQueryRes \" + JSON.stringify(userRes, null, 2))\r\n        if (userRes.RES?.id) {\r\n            appOperator.userStoreUpdateFunction({ user: UNIVERSALS.GLOBALS.convert_user_backendToLocal({ user: userRes.RES }) })\r\n        }\r\n        if (userRes.RES?.devices) {\r\n            appOperator.device({\r\n                cmd: \"ADD_UPDATE_DEVICES\",\r\n                cloudState: true,\r\n                newDevices: userRes.RES.devices ? UNIVERSALS.GLOBALS.convert_Devices_backendToLocal({ devices: userRes.RES.devices }) : [],\r\n                //log: log ? new logger(\"device-operator add_update_devices\", log) : undefined\r\n            })\r\n        }\r\n    }\r\n    else if (iteration % 2 == 0 && user?.id) {\r\n        const localDeletedDeviceList = reduxStore.store.getState().deviceReducer.deletedDevices\r\n        log?.print(\"deleted device list length - \" + localDeletedDeviceList.length + \"  >>  \" + JSON.stringify(localDeletedDeviceList))\r\n        if (localDeletedDeviceList.length) {\r\n            let list = await Promise.all(localDeletedDeviceList.map(async (device, index) => {\r\n                if (device.id && user.id) {\r\n                    const updateUserDevicesRes = await api.cloudAPI.user.userDeviceUpdateMutation.v1({\r\n                        id: user.id,\r\n                        deviceID: device.id\r\n                    })\r\n                    log?.print(\"updateUserDeviceApiRes >> \" + JSON.stringify(updateUserDevicesRes, null, 2))\r\n                    if (updateUserDevicesRes.RES?.updateUser) {\r\n                        let deviceInMutationRes = updateUserDevicesRes.RES.updateUser.devices.find(item => item.id == device.id)\r\n                        if (deviceInMutationRes) {\r\n                            log?.print(\"device still present in user DB\")\r\n                            return device\r\n                        }\r\n                        else {\r\n                            log?.print(\"device removed from user deviceList from cloud\")\r\n                            return undefined\r\n                        }\r\n                    } else {\r\n                        log?.print(\"coudn't get valid response from cloud, keeping device as it si in redux state\")\r\n                        return device\r\n                    }\r\n                }\r\n                return undefined\r\n            }))\r\n            list = list.filter(item => item)\r\n            log?.print(\"list after performing delete operations \" + JSON.stringify(list, null, 2))\r\n            if (localDeletedDeviceList.length != list.length) {\r\n                log?.print(\"updating deleted device list in redux\")\r\n                //@ts-ignore - as newDeletedDeviceList is already filtered for undefined objects\r\n                reduxStore.store.dispatch(reduxStore.actions.deviceList.deletedDeviceListRedux({ deletedDeviceList: list.length ? list : [] }))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/*\r\n'########::'########:'##::::'##:'####::'######::'########:::::'######::'####:'########::'########::::'########:'########:'########:'########::'######::'########:\r\n ##.... ##: ##.....:: ##:::: ##:. ##::'##... ##: ##.....:::::'##... ##:. ##:: ##.... ##: ##.....::::: ##.....:: ##.....:: ##.....:: ##.....::'##... ##:... ##..::\r\n ##:::: ##: ##::::::: ##:::: ##:: ##:: ##:::..:: ##:::::::::: ##:::..::: ##:: ##:::: ##: ##:::::::::: ##::::::: ##::::::: ##::::::: ##::::::: ##:::..::::: ##::::\r\n ##:::: ##: ######::: ##:::: ##:: ##:: ##::::::: ######::::::. ######::: ##:: ##:::: ##: ######:::::: ######::: ######::: ######::: ######::: ##:::::::::: ##::::\r\n ##:::: ##: ##...::::. ##:: ##::: ##:: ##::::::: ##...::::::::..... ##:: ##:: ##:::: ##: ##...::::::: ##...:::: ##...:::: ##...:::: ##...:::: ##:::::::::: ##::::\r\n ##:::: ##: ##::::::::. ## ##:::: ##:: ##::: ##: ##::::::::::'##::: ##:: ##:: ##:::: ##: ##:::::::::: ##::::::: ##::::::: ##::::::: ##::::::: ##::: ##:::: ##::::\r\n ########:: ########:::. ###::::'####:. ######:: ########::::. ######::'####: ########:: ########:::: ########: ##::::::: ##::::::: ########:. ######::::: ##::::\r\n........:::........:::::...:::::....:::......:::........::::::......:::....::........:::........:::::........::..::::::::..::::::::........:::......::::::..:::::\r\n*/\r\n\r\n\r\n\r\nconst handleDeviceInMapLoop = ({ device, user, iteration, log }: { device: UNIVERSALS.GLOBALS.DEVICE_t, user?: UNIVERSALS.GLOBALS.USER_t, iteration: number, log?: logger }) => {\r\n    if (user?.id) {\r\n        if (!device.id) /** create device or sync ID */ {\r\n            (async () => {\r\n                log?.print(\"getting device ID for device \" + device.Mac + \" - \" + device.deviceName)\r\n                const res = await api.cloudAPI.device.deviceQueryWithMac.v1({ device, log: log ? new logger(\"device_query Api\", log) : undefined })\r\n                if (res.RES?.id && device.Mac == res.RES.Mac) {\r\n                    //@ts-ignore - as we have already checked for `user.id` field\r\n                    const updateUserDevicesRes = await api.cloudAPI.user.userDeviceUpdateMutation.v1({ id: user.id, deviceID: res.RES?.id, connect: true })\r\n                    let containsDevice = false\r\n                    if (updateUserDevicesRes.RES?.updateUser.devices.length) {\r\n                        updateUserDevicesRes.RES?.updateUser.devices.forEach(element => {\r\n                            if (element.id == res.RES?.id)\r\n                                containsDevice = true\r\n                        });\r\n                    }\r\n                    // - [ ] compare both local and api response data and save the latest one to redux store\r\n                    if (containsDevice)\r\n                        appOperator.device({\r\n                            cmd: \"ADD_UPDATE_DEVICES\",\r\n                            newDevices: [{ ...UNIVERSALS.GLOBALS.convert_Device_backendToLocal({ device: res.RES }), localTimeStamp: device.localTimeStamp }],\r\n                            log: log ? new logger(\"device-operator add/update devices\", log) : undefined\r\n                        })\r\n                }\r\n                else if (res.ERR?.errCode == api.cloudAPI.device.deviceQueryWithMac.deviceQueryWithMacApiErrors_e.DEVICE_QUERY_NO_DEVICES_FOUND) {\r\n                    //@ts-ignore - [error]=> due to user.id(could be undefined) field. [resolution]=> but we have already check for user.id field at the begning of the method\r\n                    const createDeviceApiRes = await api.cloudAPI.device.createDeviceMutation.v1({ device, userID: user.id, log: log ? new logger(\"device_create_mutation Api\", log) : undefined })\r\n                    if (createDeviceApiRes.RES)\r\n                        appOperator.device({\r\n                            cmd: \"ADD_UPDATE_DEVICES\",\r\n                            newDevices: [{ ...UNIVERSALS.GLOBALS.convert_Device_backendToLocal({ device: createDeviceApiRes.RES }), localTimeStamp: device.localTimeStamp }],\r\n                            log: log ? new logger(\"device-operator add/update devices\", log) : undefined\r\n                        })\r\n                }\r\n            })()\r\n        }\r\n        else if (!device.ts || (device.ts && device.localTimeStamp > device.ts)) /** sync local state with cloud */\r\n            (async () => {\r\n                log?.print(device.deviceName + \" time to sync, localTimeStamp : \" + device.localTimeStamp + \", serverTimestamp : \" + device.ts)\r\n                if (device.id) {\r\n                    let updateApiRes = await api.cloudAPI.device.updateDeviceMutation.v1({ device: { ...device, id: device.id }, log: log ? new logger(\"update device api\", log) : undefined })\r\n                    if (updateApiRes.RES) {\r\n                        log?.print(\"updated device serverts : \" + updateApiRes.RES.ts)\r\n                        appOperator.device({\r\n                            cmd: \"ADD_UPDATE_DEVICES\",\r\n                            newDevices: [{ ...UNIVERSALS.GLOBALS.convert_Device_backendToLocal({ device: updateApiRes.RES }), localTimeStamp: device.localTimeStamp }],\r\n                            log: log ? new logger(\"update device saga\", log) : undefined\r\n                        })\r\n                    }\r\n                }\r\n            })()\r\n    }\r\n}","import { storeData } from \"../../../services/db/storage\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { appCtxDBAction } from \"../saga/appCTXSagas\"\r\nimport { _getBaseAction, __baseAction_Props } from \"../../sagas/sagaBaseWorkers\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\n\r\nexport interface appCTXReducerState_Prop {\r\n  welcomeScreenStatus: boolean\r\n  user?: UNIVERSALS.GLOBALS.USER_t\r\n  quickActions: {\r\n    stayAwake?: boolean\r\n  }\r\n}\r\n\r\nexport const initialState: appCTXReducerState_Prop = {\r\n  welcomeScreenStatus: false,\r\n  user: undefined,\r\n  quickActions: {}\r\n};\r\n\r\nexport const appCTXReducer = (\r\n  state = initialState,\r\n  action: _actionReturnTypes\r\n) => {\r\n  switch (action.type) {\r\n    case _reduxConstant.USER_REDUX:\r\n      action.props.log?.print(\"state before change >> \" + JSON.stringify(state))\r\n      const __state = Object.assign({}, state, { user: action.props.user });\r\n      action.props.log?.print(\"state after change >> \" + JSON.stringify(__state))\r\n      return __state;\r\n\r\n    case _reduxConstant.APPCTX_REDUX:\r\n      action.props.log?.print(\"appCtxRedux state for update>> \" + JSON.stringify(state))\r\n      if (action.props.data)\r\n        return Object.assign({}, state, action.props.data)\r\n      else\r\n        return state\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ninterface userReduxAction_Props {\r\n  user?: UNIVERSALS.GLOBALS.USER_t\r\n  log?: logger\r\n}\r\ninterface appCtxReduxAction_Props {\r\n  data: appCTXReducerState_Prop\r\n  log?: logger\r\n}\r\nexport const _actions = {\r\n  userRedux: _getBaseAction<userReduxAction_Props>(_reduxConstant.USER_REDUX),\r\n  appCTXRedux: _getBaseAction<appCtxReduxAction_Props>(_reduxConstant.APPCTX_REDUX)\r\n}\r\n\r\nexport type _actionReturnTypes =\r\n  | __baseAction_Props<userReduxAction_Props> & {\r\n    type: _reduxConstant.USER_REDUX\r\n  } | __baseAction_Props<appCtxReduxAction_Props> & {\r\n    type: _reduxConstant.APPCTX_REDUX\r\n  }","import { call, put, select } from \"redux-saga/effects\";\r\nimport { _getWorker } from \"../../sagas/sagaBaseWorkers\";\r\nimport { saveAppCTX } from \"../../../services/db/storage\";\r\nimport { _reduxConstant } from \"../../ReduxConstant\";\r\nimport { _delay } from \"../../sagas/helper\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { appCTXReducerState_Prop, _actions } from \"../reducers/AppCTXReducer\"\r\nimport { _appState } from \"../../rootReducer\"\r\nimport UNIVERSALS from \"../../../@universals\";\r\n\r\n\r\n/*\r\n:::'###::::'########::'########:::'######::'########:'##::::'##::::'########::'########::::::'######:::::'###:::::'######::::::'###::::\r\n::'## ##::: ##.... ##: ##.... ##:'##... ##:... ##..::. ##::'##::::: ##.... ##: ##.... ##::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n:'##:. ##:: ##:::: ##: ##:::: ##: ##:::..::::: ##:::::. ##'##:::::: ##:::: ##: ##:::: ##:::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n'##:::. ##: ########:: ########:: ##:::::::::: ##::::::. ###::::::: ##:::: ##: ########:::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n #########: ##.....::: ##.....::: ##:::::::::: ##:::::: ## ##:::::: ##:::: ##: ##.... ##:::::..... ##: #########: ##::: ##:: #########:\r\n ##.... ##: ##:::::::: ##:::::::: ##::: ##:::: ##::::: ##:. ##::::: ##:::: ##: ##:::: ##::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n ##:::: ##: ##:::::::: ##::::::::. ######::::: ##:::: ##:::. ##:::: ########:: ########:::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n..:::::..::..:::::::::..::::::::::......::::::..:::::..:::::..:::::........:::........:::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\n\r\ninterface appCtxSaga_props {\r\n  data: appCTXReducerState_Prop\r\n  saveToDB?: boolean\r\n  log?: logger\r\n}\r\n\r\nexport const [appCtxDBWatcher, appCtxDBAction] = _getWorker<appCtxSaga_props>({\r\n  type: _reduxConstant.APPCTX_DB_SAGA,\r\n  shouldTakeLatest: true,\r\n  callable: function* appCtxDbWorker({ log, data }) {\r\n    log?.print(\"appctxDB waiting to save: \" + JSON.stringify(data))\r\n    yield call(_delay, 1000);\r\n    log?.print(\"appctxDB now saving: \" + JSON.stringify(data))\r\n    yield call(saveAppCTX, data);\r\n  }\r\n})\r\n\r\n\r\n/*\r\n:::'###::::'########::'########:::'######::'########:'##::::'##:::::'######:::::'###:::::'######::::::'###::::\r\n::'## ##::: ##.... ##: ##.... ##:'##... ##:... ##..::. ##::'##:::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n:'##:. ##:: ##:::: ##: ##:::: ##: ##:::..::::: ##:::::. ##'##:::::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n'##:::. ##: ########:: ########:: ##:::::::::: ##::::::. ###:::::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n #########: ##.....::: ##.....::: ##:::::::::: ##:::::: ## ##:::::::..... ##: #########: ##::: ##:: #########:\r\n ##.... ##: ##:::::::: ##:::::::: ##::: ##:::: ##::::: ##:. ##:::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n ##:::: ##: ##:::::::: ##::::::::. ######::::: ##:::: ##:::. ##::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n..:::::..::..:::::::::..::::::::::......::::::..:::::..:::::..::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\n\r\nexport const [appCtxSagaWatcher, appCtxSagaAction] = _getWorker<appCtxSaga_props>({\r\n  type: _reduxConstant.APPCTX_SAGA,\r\n  shouldTakeLatest: true,\r\n  callable: function* appCtxSagaWorker(props) {\r\n    props.log?.print(\"appctx Saga : \" + JSON.stringify(props.data))\r\n    yield put(_actions.appCTXRedux(props))\r\n    if (props.saveToDB)\r\n      yield put(appCtxDBAction({ data: props.data/* , log: props.log */ }))\r\n  }\r\n})\r\n\r\n\r\n/*\r\n'##::::'##::'######::'########:'########::::::'######:::::'###:::::'######::::::'###::::\r\n ##:::: ##:'##... ##: ##.....:: ##.... ##::::'##... ##:::'## ##:::'##... ##::::'## ##:::\r\n ##:::: ##: ##:::..:: ##::::::: ##:::: ##:::: ##:::..:::'##:. ##:: ##:::..::::'##:. ##::\r\n ##:::: ##:. ######:: ######::: ########:::::. ######::'##:::. ##: ##::'####:'##:::. ##:\r\n ##:::: ##::..... ##: ##...:::: ##.. ##:::::::..... ##: #########: ##::: ##:: #########:\r\n ##:::: ##:'##::: ##: ##::::::: ##::. ##:::::'##::: ##: ##.... ##: ##::: ##:: ##.... ##:\r\n. #######::. ######:: ########: ##:::. ##::::. ######:: ##:::: ##:. ######::: ##:::: ##:\r\n:.......::::......:::........::..:::::..::::::......:::..:::::..:::......::::..:::::..::\r\n*/\r\n\r\ninterface userSaga_props {\r\n  user: UNIVERSALS.GLOBALS.USER_t | undefined\r\n  /** `default - false` weather to save to DB or not */\r\n  saveToDB?: boolean\r\n  log?: logger\r\n}\r\nexport const [userSagaWatcher, userSagaAction] = _getWorker<userSaga_props>({\r\n  type: _reduxConstant.USER_SAGA,\r\n  shouldTakeLatest: true,\r\n  callable: function* appCtxSagaWorker(props) {\r\n    console.log(\"user Saga : \" + JSON.stringify(props.user))\r\n    let appCtx: appCTXReducerState_Prop = yield select((state: _appState) => state.appCTXReducer)\r\n    let newappCtx: appCTXReducerState_Prop = Object.assign({}, appCtx, { user: { ...props.user, devices: [] } })\r\n    yield put(_actions.appCTXRedux({ data: newappCtx }))\r\n    if (props.saveToDB)\r\n      yield put(appCtxDBAction({ data: newappCtx, log: props.log }))\r\n  }\r\n})","import { all } from \"redux-saga/effects\";\r\nimport { bgServiceWatcher } from \"./bgServiceSaga\";\r\nimport { appCtxDBWatcher, appCtxSagaWatcher, userSagaWatcher } from \"./appCTXSagas\"\r\n\r\nexport default function* _saga() {\r\n    yield all([\r\n        appCtxSagaWatcher(),\r\n        appCtxDBWatcher(),\r\n        userSagaWatcher(),\r\n        bgServiceWatcher()\r\n    ]);\r\n}\r\n","import _saga from \"./saga\"\r\nimport { _actions as appCTX_actions } from \"./reducers/AppCTXReducer\";\r\nimport { _actions as HBReducer_actions } from \"./reducers/HBReducer\";\r\nimport { bgServiceSagaAction } from \"./saga/bgServiceSaga\"\r\nimport { appCtxDBAction, appCtxSagaAction, userSagaAction } from \"./saga/appCTXSagas\"\r\n\r\nexport { _saga }\r\n\r\nexport const _actions = { appCTX: { ...appCTX_actions, appCtxDBAction, appCtxSagaAction, userSagaAction }, HBReducer: HBReducer_actions, bgServiceSagaAction }","import { all } from \"redux-saga/effects\";\r\nimport { _saga as deviceReducerSaga } from \"../deviceListReducer\";\r\nimport { _saga as bgServiceSaga } from \"../helperSideEffect\";\r\n\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    deviceReducerSaga(),\r\n    bgServiceSaga()\r\n  ]);\r\n}\r\n","const { combineReducers } = require(\"redux\");\r\nimport { initialState as deviceListInitailState, _reducer as deviceReducer } from \"./deviceListReducer\";\r\nimport { _reducer_i as deviceReducer_i } from \"./deviceListReducer/reducer/index\";\r\nimport { appCTXReducer, appCTXReducerState_Prop, initialState as appCtxInitailState, } from \"./helperSideEffect/reducers/AppCTXReducer\";\r\nimport { HBReducer, HBReducerReducerState_Prop, initialState as HBInitailState, } from \"./helperSideEffect/reducers/HBReducer\";\r\n\r\n\r\nexport interface _appState {\r\n  deviceReducer: deviceReducer_i;\r\n  appCTXReducer: appCTXReducerState_Prop;\r\n  HBReducer: HBReducerReducerState_Prop;\r\n};\r\nconst initialState: _appState = {\r\n  deviceReducer: deviceListInitailState,\r\n  appCTXReducer: appCtxInitailState,\r\n  HBReducer: HBInitailState\r\n}\r\n\r\nfunction rootReducer(state = initialState, action: any) {\r\n  return {\r\n    deviceReducer: deviceReducer(state.deviceReducer, action),\r\n    appCTXReducer: appCTXReducer(state.appCTXReducer, action),\r\n    HBReducer: HBReducer(state.HBReducer, action),\r\n  };\r\n}\r\n\r\nexport default rootReducer\r\n\r\n\r\n","import { _configureReduxStore } from \"./ReduxStore\"\r\nimport { _actions as deviceListAction } from \"./deviceListReducer\"\r\nimport { _actions as helperSideEffectActions } from \"./helperSideEffect\"\r\n\r\nexport { _reduxConstant as reduxConstant } from \"./ReduxConstant\"\r\n\r\n\r\n\r\nconst reduxStore = { actions: { ...deviceListAction, ...helperSideEffectActions }, store: _configureReduxStore() }\r\nexport { reduxStore }\r\nexport { _appState as appState } from \"./rootReducer\"","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas\";\r\nimport rootReducer, { _appState } from \"./rootReducer\";\r\n\r\nexport const _configureReduxStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n\r\n  const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  return store;\r\n};\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const textColors = {\r\n    primary: \"#333\",\r\n    secondary: \"#555\",\r\n    tertiary: \"#777\",\r\n    warning: \"#cd6155\",\r\n    feather: \"#aaa\"\r\n}\r\n\r\nexport const themeColors = {\r\n    primary: \"#5555ff\"\r\n}\r\n\r\nexport default StyleSheet.create({\r\n    primaryTextColors: {\r\n        color: textColors.primary\r\n    },\r\n    secondaryTextColor: {\r\n        color: textColors.secondary\r\n    },\r\n    tertiaryTextColor: {\r\n        color: textColors.tertiary\r\n    },\r\n    warningText: {\r\n        color: textColors.warning\r\n    },\r\n    textFeather: {\r\n        color: textColors.feather\r\n    }\r\n})","import { StyleSheet } from \"react-native\";\r\nimport color from \"./colors\"\r\n\r\n\r\nconst common = StyleSheet.create({\r\n    _headingCommonStyles: {\r\n        ...color.primaryTextColors,\r\n        marginHorizontal: 5,\r\n        fontWeight: \"bold\",\r\n    }\r\n})\r\nexport default StyleSheet.create({\r\n    _headingCommonStyles: {\r\n        marginHorizontal: 5\r\n    },\r\n    H1: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 30,\r\n    },\r\n    H2: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 27,\r\n    },\r\n    H3: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 24,\r\n    },\r\n    H4: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 21,\r\n    },\r\n    H5: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 18,\r\n    },\r\n    H6: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 15,\r\n    },\r\n    H7: {\r\n        ...common._headingCommonStyles,\r\n        fontSize: 12,\r\n    }\r\n})","import { StyleSheet } from \"react-native\";\r\n\r\nexport default StyleSheet.create({\r\n    round50: {\r\n        height: 50,\r\n        width: 50,\r\n        borderRadius: 35,\r\n    },\r\n    shadow: {\r\n        backgroundColor: \"#fff\",\r\n        alignItems: 'center',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n    absoluteFill: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0\r\n    }\r\n})","import { StyleSheet } from \"react-native\";\r\n\r\nexport default StyleSheet.create({\r\n\r\n})","import Text from \"./Text\"\r\nimport commonStyles from \"./commonStyles\"\r\nimport color, { textColors, themeColors } from \"./colors\"\r\nimport spacing from \"./spacing\"\r\n\r\nexport default { ...Text, ...commonStyles, ...color, ...spacing, textColors, themeColors }","import React from 'react'\r\nimport { StyleProp, StyleSheet, Text, TextStyle, TouchableOpacity, View, ViewStyle } from 'react-native'\r\nimport { RectButton } from 'react-native-gesture-handler'\r\nimport STYLES from \"../styles\"\r\n\r\ninterface Props {\r\n    buttonStyle?: StyleProp<ViewStyle>\r\n    textStyle?: StyleProp<TextStyle>\r\n    text?: string\r\n    shadow?: boolean\r\n    onPress?: () => void\r\n    children?: React.ReactNode\r\n    useReanimated?: boolean\r\n}\r\n\r\n/** \r\n * //TODO add support for dynamic JSX.elsment as children\r\n */\r\nexport const NewRectButton = ({ buttonStyle, textStyle, text, onPress = () => { }, useReanimated = false }: Props) => {\r\n    return (\r\n        <View style={[STYLES.shadow, _styles.buttonContainer, buttonStyle]}>\r\n            {useReanimated ? <NewRectButtonWithChildren style={[_styles.innerbutton]}\r\n                onPress={onPress}>\r\n                <Text style={[{ textAlign: \"center\", fontSize: 18 }, textStyle]}>{text ? text : \"BUTTON\"}</Text>\r\n            </NewRectButtonWithChildren>\r\n                : <TouchableOpacity style={[_styles.innerbutton]}\r\n                    onPress={onPress}>\r\n                    <Text style={[{ textAlign: \"center\", fontSize: 18 }, textStyle]}>{text ? text : \"BUTTON\"}</Text>\r\n                </TouchableOpacity>}\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\ninterface NewRectButtonWithChildrenProps {\r\n    style?: StyleProp<ViewStyle>\r\n    innerCompStyle?: StyleProp<ViewStyle>\r\n    shadow?: boolean\r\n    onPress?: () => void\r\n    useReanimated?: boolean\r\n    children?: React.ReactNode\r\n}/**\r\n * @param style `StyleProp<ViewStyle>` button ContainerView Style \r\n * @param innerCompStyle `StyleProp<ViewStyle>` RectButton Style \r\n * @param shadow `default false` \r\n * @param onPress \r\n * @param children `React.Node` children component\r\n * @returns  \r\n */\r\nexport const NewRectButtonWithChildren = ({ style, innerCompStyle, onPress = () => { }, useReanimated = false, children, shadow }: NewRectButtonWithChildrenProps) => {\r\n    return (\r\n        <View style={[_styles.buttonContainer, shadow ? STYLES.shadow : {}, style,]}>\r\n            {useReanimated ?\r\n                <NewRectButtonWithChildren style={\r\n                    [_styles.innerbutton, innerCompStyle]}\r\n                    onPress={onPress}>\r\n                    {children}\r\n                </NewRectButtonWithChildren>\r\n                : <TouchableOpacity style={\r\n                    [_styles.innerbutton, innerCompStyle]}\r\n                    onPress={onPress}>\r\n                    {children}\r\n                </TouchableOpacity>}\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst _styles = StyleSheet.create({\r\n    buttonContainer: {\r\n        backgroundColor: \"#fff\",\r\n        overflow: \"hidden\",\r\n        borderRadius: 10,\r\n        marginVertical: 5,\r\n        height: 50,\r\n    },\r\n    innerbutton: {\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n})\r\n\r\n\r\n//export default NewRectButton\r\n","import React from 'react'\r\nimport { StyleProp, View, ViewStyle } from 'react-native'\r\nimport Animated from 'react-native-reanimated';\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n\r\n\r\ninterface Props {\r\n    style?: StyleProp<ViewStyle>\r\n    children?: React.ReactNode\r\n}\r\n\r\nexport default ({ style, children }: Props) => {\r\n    return (\r\n        <SafeAreaView style={[{ width: \"100%\" }, style]}>\r\n            <Animated.ScrollView showsHorizontalScrollIndicator={false} showsVerticalScrollIndicator={false}>\r\n                {children}\r\n            </Animated.ScrollView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n","import { FontAwesome, Ionicons, MaterialIcons } from '@expo/vector-icons';\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React from \"react\";\r\nimport { Image, Text, View } from \"react-native\";\r\nimport { MainRouterStackParamList } from \"../../../routers/MainRouter\";\r\nimport { appOperator } from \"../../../util/app.operator\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { NewRectButtonWithChildren } from \"../../common/buttons/RectButtonCustom\";\r\nimport Container from \"../../common/containers/SafeAreaWithAnimatedVerticalScrollView\";\r\n\r\ntype navigationProp = StackNavigationProp<\r\n    MainRouterStackParamList,\r\n    \"config\"\r\n>\r\ntype routeProp = RouteProp<MainRouterStackParamList, \"config\">;\r\n\r\ninterface props {\r\n    navigation: navigationProp\r\n    route: routeProp;\r\n\r\n}\r\nconst AppConfigScreen = ({ navigation }: props) => {\r\n    const log = new logger(\"APP SETTING\")\r\n\r\n\r\n    return (\r\n        <Container style={{ backgroundColor: \"#fff\", paddingHorizontal: 15 }}>\r\n            <View>\r\n                <NewRectButtonWithChildren onPress={() => {\r\n                    if (navigation.canGoBack())\r\n                        navigation.pop()\r\n                }}>\r\n                    <Ionicons style={{ paddingRight: 15, paddingBottom: 10, paddingTop: 15, marginTop: 10 }} name=\"ios-arrow-back\" size={30} color=\"#222\" />\r\n                </NewRectButtonWithChildren>\r\n            </View>\r\n            <View style={{}}>\r\n                <Text style={{ color: \"#222\", fontSize: 35, fontWeight: \"bold\" }}>Settings</Text>\r\n            </View>\r\n            {/* Sec: user profile settings */}\r\n            <View style={{}}>\r\n                <MenuHeading heading=\"User Profile\" Icon={() => <FontAwesome style={{ paddingRight: 10 }} name=\"user-o\" size={25} color=\"#555\" />} />\r\n                <MenuItem heading=\"User Profile\" />\r\n                <MenuItem heading=\"Change Password\" />\r\n                <MenuItem heading=\"Logout\" onPress={() => {\r\n                    appOperator.user({\r\n                        cmd: \"LOGOUT\", onLogout: () => {\r\n                            log?.print(\"logging out now\")\r\n                            navigation.replace(\"user\")\r\n                        }\r\n                    })\r\n                }} />\r\n                <MenuHeading heading=\"Notification\" Icon={() => <MaterialIcons style={{ paddingRight: 10 }} name=\"notifications-none\" size={25} color=\"#555\" />} />\r\n                <MenuItem heading=\"App Notifications\" Icon={() => <FontAwesome name=\"toggle-off\" size={25} color=\"#555\" />} />\r\n                <MenuItem heading=\"Device Notifications\" Icon={() => <FontAwesome name=\"toggle-off\" size={25} color=\"#555\" />} />\r\n                <MenuHeading heading=\"More\" Icon={() => <MaterialIcons style={{ paddingRight: 10 }} name=\"unfold-more\" size={25} color=\"#555\" />} />\r\n                <MenuItem heading=\"Support\" />\r\n                <MenuItem heading=\"Contact Us\" />\r\n            </View>\r\n            <View style={{ alignItems: \"center\", paddingVertical: 20 }}>\r\n                <Image style={{ height: 150, width: 150, opacity: 0.3 }} source={require(\"../../../../assets/icons/splash-icon.png\")} />\r\n            </View>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AppConfigScreen\r\n\r\ninterface MenuHeadingProps {\r\n    Icon: any\r\n    heading: string\r\n}\r\nconst MenuHeading = ({ Icon, heading }: MenuHeadingProps) => {\r\n    return (\r\n        <View style={{ flexDirection: \"row\", alignItems: \"flex-end\", marginTop: 30, borderBottomColor: \"#555\", borderBottomWidth: 0.5, paddingBottom: 10 }}>\r\n            <Icon />\r\n            <Text style={{ fontSize: 20, fontWeight: \"bold\", color: \"#555\" }}>{heading}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\ninterface MenuItemProps {\r\n    Icon?: any\r\n    heading: string\r\n    onPress?: () => void\r\n}\r\nconst MenuItem = ({\r\n    Icon = () => <Ionicons name=\"ios-arrow-forward\" size={25} color=\"#777\" />,\r\n    heading,\r\n    onPress = () => { }\r\n}: MenuItemProps) => {\r\n    return (\r\n        <View style={{ flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", height: 50 }}>\r\n            <Text style={{ fontSize: 15, color: \"#777\", fontWeight: \"bold\" }}>{heading}</Text>\r\n            <NewRectButtonWithChildren onPress={onPress} style={{ shadowOpacity: 0, elevation: 0 }}>\r\n                <Icon />\r\n            </NewRectButtonWithChildren>\r\n        </View>\r\n    )\r\n}","import { LinearGradient } from \"expo-linear-gradient\";\r\nimport React, { Component, useEffect, useRef, useState } from \"react\";\r\nimport { Dimensions, Text, View } from \"react-native\";\r\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\r\nimport Animated, { add, block, call, concat, cond, divide, eq, event, multiply, set, useCode } from \"react-native-reanimated\";\r\nimport { clamp, ReText, round, useValue } from \"react-native-redash\";\r\nimport { appOperator } from \"../../util/app.operator\";\r\nimport { getTimeDiffNowInMs } from \"../../util/DateTimeUtil\";\r\nimport { logger } from \"../../util/logger\";\r\n\r\nconst sliderHeight = 35;\r\nconst sliderHeightExtension = 4;\r\n\r\nexport type onBrValueChange_Props = (value: number, state: State) => void;\r\n\r\ninterface Props {\r\n  initBrValue?: number;\r\n  deviceMac: string[];\r\n  color?: string;\r\n  bgColor?: [string, string];\r\n  groupUUID?: string;\r\n  log?: logger\r\n}\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nexport default ({\r\n  initBrValue = 0,\r\n  bgColor = [\"#ffffff00\", \"#ffffff77\"],\r\n  deviceMac,\r\n  color = \"#ffffff\",\r\n  log,\r\n  ...props\r\n}: Props) => {\r\n  //console.log(\"initBr : \" + initBrValue);\r\n  const pinState = useValue(State.UNDETERMINED);\r\n  const [sliderWidth, setSliderWidth] = useState(0);\r\n  const [test, setTest] = useState(0);\r\n  const ref = useRef<any>(null)\r\n  const offset = useValue((initBrValue / 100) * (width * 0.9));\r\n  const offsetX = clamp(offset, 0, sliderWidth - sliderHeight);\r\n  //@ts-ignore\r\n  const BR = round(multiply(divide(offsetX, (sliderWidth - sliderHeight)), 100))\r\n  let timeStamp = Date.now();\r\n\r\n  const updateColor = (v: number, gestureState: State, log?: logger) => {\r\n    if (v < 5)\r\n      v = 0\r\n    appOperator.device({\r\n      cmd: \"COLOR_UPDATE\",\r\n      deviceMac,\r\n      hsv: { v },\r\n      gestureState,\r\n      log\r\n    })\r\n  }\r\n\r\n  useCode(\r\n    () => [\r\n      call([BR, pinState], ([BR, pinState]) => {\r\n        if (getTimeDiffNowInMs(timeStamp) > 200 && pinState == State.ACTIVE) {\r\n          console.log(\"<<<< Sending Bightness-*- >>>>\")\r\n          timeStamp = Date.now();\r\n          updateColor(BR, pinState, log)\r\n        }\r\n        else {\r\n          //console.log(\"<<<< cannot send Bightness- >>>>\")\r\n        }\r\n        /* if (pinState == State.ACTIVE) {\r\n          if (getTimeDiffNowInMs(timeStamp) > 200) {\r\n            timeStamp = getCurrentTimeStamp();\r\n            updateColor(Math.min(100, Math.round(BR)), pinState, log)\r\n          }\r\n        } else if (pinState == State.END) {\r\n          console.log(\"<<<< --Sending Bightness- >>>>\")\r\n          setTimeout(() => {\r\n            timeStamp = getCurrentTimeStamp();\r\n            updateColor(Math.min(100, Math.round(BR)), pinState, log)\r\n          }, 200);\r\n        } */\r\n      }),\r\n    ],\r\n    [BR, pinState]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (ref.current?.offsetWidth) {\r\n      setSliderWidth(ref?.current.offsetWidth)\r\n    }\r\n    return () => {\r\n    }\r\n  }, [ref.current])\r\n\r\n  return (\r\n    <View style={{ overflow: \"visible\" }}>\r\n      <View style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignSelf: \"flex-end\",\r\n        marginBottom: 6,\r\n      }}>\r\n        <ReText\r\n          style={{\r\n            color: \"#fff\",\r\n            fontSize: 25,\r\n            fontWeight: \"bold\",\r\n            textAlign: \"right\"\r\n          }}\r\n          text={concat(BR)} />\r\n        <Text\r\n          style={{\r\n            color: \"#fff\",\r\n            fontSize: 25,\r\n            fontWeight: \"bold\",\r\n          }}>%</Text>\r\n      </View>\r\n      <div\r\n        ref={ref}\r\n        style={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          zIndex: -1,\r\n          //backgroundColor: \"red\",\r\n          justifyContent: \"center\",\r\n          opacity: 1,\r\n          height: sliderHeight,\r\n          width: \"100%\",\r\n          borderRadius: 15,\r\n        }}>\r\n      </div>\r\n      <LinearGradient\r\n        /* onLayout={(event) => {\r\n           var { width } = event.nativeEvent.layout;\r\n           setSliderWidth(width);\r\n         }} */\r\n        style={{\r\n          justifyContent: \"center\",\r\n          opacity: 1,\r\n          height: sliderHeight,\r\n          width: \"100%\",\r\n          borderRadius: 15,\r\n        }}\r\n        start={{ x: 0, y: 0 }}\r\n        end={{ x: 1, y: 0 }}\r\n        colors={[bgColor[0], bgColor[1]]}\r\n      >\r\n        <BrightnessSlider\r\n          pinState={pinState}\r\n          offset={offset}\r\n          offsetX={offsetX}\r\n          sliderWidth={sliderWidth}\r\n        >\r\n        </BrightnessSlider>\r\n      </LinearGradient>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nclass BrightnessSlider extends Component<{\r\n  pinState: Animated.Value<number>\r\n  offset: Animated.Value<number>\r\n  sliderWidth: number\r\n  offsetX: Animated.Node<number>\r\n}, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {};\r\n  }\r\n\r\n  gestureHandler = event(\r\n    [\r\n      {\r\n        nativeEvent: ({ x: translationX, state: temp1state }: any) =>\r\n          block([\r\n            set(this.props.pinState, temp1state),\r\n            cond(eq(temp1state, State.ACTIVE), set(this.props.offset, add(this.props.offset, translationX))),\r\n          ]),\r\n      }],\r\n    { useNativeDriver: true }\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <View style={{}}>\r\n        <PanGestureHandler\r\n          onGestureEvent={this.gestureHandler}\r\n          onHandlerStateChange={this.gestureHandler}\r\n        >\r\n          <Animated.View\r\n            style={[\r\n              {\r\n                position: \"absolute\",\r\n                height: sliderHeight + sliderHeightExtension,\r\n                width: sliderHeight + sliderHeightExtension,\r\n                borderRadius: 25,\r\n                backgroundColor: \"#ddd\",\r\n                top: -(sliderHeight + sliderHeightExtension) / 2,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              },\r\n              {\r\n                transform: [{ translateX: this.props.offsetX }],\r\n              },\r\n            ]}\r\n          >\r\n            <View\r\n              style={{\r\n                height: \"80%\",\r\n                width: \"80%\",\r\n                borderRadius: 50,\r\n                backgroundColor: \"red\",\r\n                borderWidth: 10,\r\n                borderColor: \"#fff\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            ></View>\r\n          </Animated.View>\r\n        </PanGestureHandler>\r\n      </View>\r\n    )\r\n  }\r\n}","import { useActionSheet } from \"@expo/react-native-action-sheet\"\r\nimport { Entypo } from '@expo/vector-icons'\r\nimport { LinearGradient } from \"expo-linear-gradient\"\r\nimport React from \"react\"\r\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from \"react-native\"\r\nimport { State } from \"react-native-gesture-handler\"\r\nimport { navigationProp } from \"..\"\r\nimport UNIVERSALS from \"../../../../@universals\"\r\nimport { appOperator } from \"../../../../util/app.operator\"\r\nimport { convertHSVToRgb, _convertRGBToHex } from \"../../../../util/Color\"\r\nimport { logger } from \"../../../../util/logger\"\r\nimport BrightnessSlider from \"../../../common/BrightnessSlider\"\r\nimport BrightnessSliderNew from \"../../../common/BrightnessSlider_optmizedForWeb\"\r\nimport { NewRectButtonWithChildren } from \"../../../common/buttons/RectButtonCustom\"\r\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\r\n/* import ColorBlending from \"gl-react-color-blending\" */\r\n\r\n\r\n\r\nexport const deviceCardHeight = 150;\r\n\r\ninterface props {\r\n  navigation: navigationProp,\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t\r\n  log?: logger\r\n  setToBeDeletedDevice?: React.Dispatch<React.SetStateAction<string>>\r\n}\r\nexport const DeviceCard = ({\r\n  navigation,\r\n  device,\r\n  log,\r\n  setToBeDeletedDevice\r\n}: props) => {\r\n  log = log ? new logger(\"DEVICE CARD\", log) : undefined\r\n  const { showActionSheetWithOptions } = useActionSheet();\r\n  let rgb2, rgb1, hex1, hex2\r\n  if (device.hsv) {\r\n    rgb1 = convertHSVToRgb(device.hsv.h, device.hsv.s, 100);\r\n    rgb2 = convertHSVToRgb(\r\n      device.hsv.h + 40,\r\n      device.hsv.s > 50 ? device.hsv.s : 50,\r\n      100\r\n    );\r\n  } else {\r\n    rgb1 = convertHSVToRgb(100, 80, 100)\r\n    rgb2 = convertHSVToRgb(130, 80, 100)\r\n  }\r\n  hex1 = _convertRGBToHex(rgb1[0], rgb1[1], rgb1[2]);\r\n  hex2 = _convertRGBToHex(rgb2[0], rgb2[1], rgb2[2]);\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      style={[styles.container, { height: deviceCardHeight }]}\r\n      activeOpacity={0.9}\r\n      onPress={() => {\r\n        if (device.Hostname.includes(UNIVERSALS.venderConf.venderPrefix + \"_OW\") || device.Hostname.includes(UNIVERSALS.venderConf.venderPrefix + \"_CW\") || device.Hostname.includes(UNIVERSALS.venderConf.venderPrefix + \"_WW\")) {\r\n        } else {\r\n          navigation.navigate(\"devicePage\", {\r\n            device\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      <LinearGradient\r\n        colors={[hex1, hex2]}\r\n        start={{ x: 0, y: 0 }}\r\n        end={{ x: 1, y: 0 }}\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Image /**background image */\r\n          style={{\r\n            opacity: 0.3,\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            flex: 1,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n          }}\r\n          source={require(\"../../../../../assets/images/background.jpg\")}\r\n        />\r\n        {/* /// deviceCard Top section <deviceIcon | deviceName | menuIcon > */}\r\n        <View\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {/* /// menuDots */}\r\n          < TouchableOpacity\r\n            style={{\r\n              zIndex: 10,\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 0,\r\n              paddingRight: 12,\r\n              paddingTop: 8,\r\n              paddingBottom: 5,\r\n              paddingLeft: 10\r\n            }}\r\n            onPress={() => {\r\n              console.log(\"show action sheet\")\r\n              const options = [\"Delete device\", \"Share device\", \"cancel\"]\r\n              const destructiveButtonIndex = 2\r\n              const cancelButtonIndex = 2\r\n              showActionSheetWithOptions(\r\n                {\r\n                  options,\r\n                  cancelButtonIndex,\r\n                  destructiveButtonIndex,\r\n                  showSeparators: true\r\n                },\r\n                async (index) => {\r\n                  switch (index) {\r\n                    case 0:\r\n                      if (setToBeDeletedDevice) {\r\n                        setToBeDeletedDevice(device.Mac)\r\n                      }\r\n                      break;\r\n\r\n                    default:\r\n                      break;\r\n                  }\r\n                })\r\n            }}\r\n          >\r\n            <Entypo name=\"dots-three-vertical\" size={20} color=\"white\" />\r\n          </ TouchableOpacity >\r\n\r\n          <NewRectButtonWithChildren\r\n            style={{\r\n              //backgroundColor: \"red\",\r\n              height: 60,\r\n              width: 60,\r\n              overflow: \"hidden\",\r\n              borderRadius: 30,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              margin: 10\r\n            }}\r\n            onPress={() => {\r\n              appOperator.device({\r\n                cmd: \"COLOR_UPDATE\",\r\n                deviceMac: [device.Mac],\r\n                hsv: { v: device.hsv.v ? 0 : 80 },\r\n                gestureState: State.END,\r\n                log\r\n              })\r\n            }}>\r\n            <MaterialCommunityIcons name={device.hsv.v ? \"lightbulb-on-outline\" : \"lightbulb-off\"} size={24} color=\"black\" />\r\n          </NewRectButtonWithChildren>\r\n          <Text style={[styles.deviceName, { color: \"#fff\" }]}>\r\n            {device.deviceName ? device.deviceName : \"unknown_device\"}\r\n          </Text>\r\n\r\n        </View>\r\n        {/* ///brightness container <percentageText &  brightnessBar> */}\r\n        <View style={styles.brightnessSliderContainer}>\r\n          {/*  <ReText style={styles.brightnessNumber} text={concat( BR )}/> */}\r\n          <BrightnessSliderNew\r\n            initBrValue={device.hsv ? device.hsv.v : 50}\r\n            deviceMac={[device.Mac]}\r\n            log={log}\r\n          />\r\n        </View>\r\n      </LinearGradient>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderColor: \"white\",\r\n    marginVertical: 5,\r\n    backgroundColor: \"#aaa\",\r\n    width: \"100%\",\r\n    alignSelf: \"center\",\r\n    borderRadius: 20,\r\n    overflow: \"hidden\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 1.41,\r\n    elevation: 2,\r\n  },\r\n  brightnessSliderContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    paddingHorizontal: \"5%\",\r\n    position: \"relative\",\r\n    top: -20,\r\n    //backgroundColor: \"green\",\r\n  },\r\n  deviceName: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginLeft: 15,\r\n  },\r\n});","import React from 'react'\r\nimport { View, Text, Image } from 'react-native'\r\nimport { AntDesign } from '@expo/vector-icons';\r\nimport Animated from 'react-native-reanimated';\r\nimport { MaterialIcons, SimpleLineIcons, MaterialCommunityIcons, FontAwesome } from '@expo/vector-icons';\r\nimport { RectButton } from 'react-native-gesture-handler';\r\nimport { navigationProp } from \"./index\"\r\n//@ts-ignore\r\nimport { activateKeepAwake, deactivateKeepAwake } from 'expo-keep-awake';\r\nimport { NewRectButton, NewRectButtonWithChildren } from \"../../common/buttons/RectButtonCustom\"\r\nimport UNIVERSALS from '../../../@universals';\r\n\r\ninterface Props {\r\n    navigation: navigationProp\r\n    user?: UNIVERSALS.GLOBALS.USER_t\r\n}\r\n\r\nexport default ({ navigation, user }: Props) => {\r\n    return (\r\n        <View style={{ paddingHorizontal: 10 }}>\r\n            <View style={{ backgroundColor: \"#fff\", marginTop: 25, marginBottom: 15 }}>\r\n                <View style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"center\", backgroundColor: \"#fff\", paddingRight: 10, marginBottom: 15 }}>\r\n                    <NewRectButtonWithChildren onPress={() => {\r\n                        navigation.navigate(\"config\")\r\n                    }}>\r\n                        <AntDesign style={{ paddingRight: 10 }} name=\"menu-fold\" size={24} color=\"black\" />\r\n                    </NewRectButtonWithChildren>\r\n                    <View style={{ flexDirection: \"row\" }}>\r\n                        <NewRectButtonWithChildren onPress={() => {\r\n                            navigation.navigate(\"pairing\")\r\n                        }}>\r\n                            <MaterialIcons style={{ marginHorizontal: 10 }} name=\"add-circle-outline\" size={26} color=\"black\" />\r\n                        </NewRectButtonWithChildren>\r\n                        <NewRectButtonWithChildren onPress={() => {\r\n                            //navigation.navigate(\"user\")\r\n                            navigation.navigate(\"user\")\r\n                        }}>\r\n                            <FontAwesome style={{ marginHorizontal: 10 }} name=\"user-o\" size={24} color=\"black\" />\r\n                        </NewRectButtonWithChildren>\r\n                    </View>\r\n                </View>\r\n                <View style={{}}>\r\n                    <Text style={{ fontSize: 25, fontWeight: \"bold\", }}>{\"Hi, \" + (user?.userName ? user?.userName : \"\")}</Text>\r\n                </View>\r\n            </View>\r\n            {/* <Animated.ScrollView horizontal style={{ flexDirection: \"row\", backgroundColor: \"#fff\", width: \"100%\", paddingBottom: 10 }}>\r\n                <View style={{ borderWidth: 0.2, borderRadius: 5, marginRight: 15 }}><Text style={{ paddingHorizontal: 5, paddingVertical: 3 }}>Alexa Support</Text></View>\r\n                <View style={{ borderWidth: 0.2, borderRadius: 5, marginRight: 15 }}><Text style={{ paddingHorizontal: 5, paddingVertical: 3 }}>Connect with Google Assistant</Text></View>\r\n            </Animated.ScrollView> */}\r\n            <Animated.ScrollView showsHorizontalScrollIndicator={false} horizontal style={{ backgroundColor: \"#fff\", width: \"100%\", display: \"flex\", flexDirection: \"row\", marginBottom: 15, }}>\r\n                <QuickActionBlock Heading=\"Snooze all events\" subHeading=\"ALL OFF\" primaryColor=\"#5DADE2\" Child={() => { return (<MaterialIcons name=\"snooze\" size={30} color=\"#5DADE2\" />) }} />\r\n                <QuickActionBlock Heading=\"Power saving mode\" subHeading=\"TURN ON\" primaryColor=\"#48C9B0\" Child={() => { return (<SimpleLineIcons name=\"energy\" size={30} color=\"#48C9B0\" />) }} />\r\n                <QuickActionBlock Heading=\"Shut Down Home\" subHeading=\"SAY, GOODBYE\" primaryColor=\"#EC7063\" Child={() => { return (<MaterialCommunityIcons name=\"power-plug-off\" size={30} color=\"#EC7063\" />) }} />\r\n                <QuickActionBlock Heading=\"Tablet Mode\" subHeading=\"STAY AWAKE\" primaryColor=\"#f39c12\" Child={() => { return (<MaterialCommunityIcons name=\"tablet-dashboard\" size={30} color=\"#f39c12\" />) }}\r\n                    onPress={() => {\r\n                        console.log(\"ONPRESS\")\r\n                        activateKeepAwake()\r\n                    }} />\r\n                <View style={{ width: 10 }} />\r\n            </Animated.ScrollView>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\ninterface QAB_props {\r\n    Heading: string,\r\n    subHeading?: string,\r\n    primaryColor?: string\r\n    Child: any\r\n    onPress?: () => void\r\n}\r\nconst QuickActionBlock = ({ Heading, subHeading, primaryColor = \"#48C9B0\", Child, onPress = () => { } }: QAB_props) => {\r\n\r\n    return (\r\n\r\n        <NewRectButtonWithChildren\r\n            onPress={onPress}\r\n            style={{\r\n                width: 140,\r\n                height: 160,\r\n                borderRadius: 10,\r\n                overflow: \"hidden\",\r\n                borderColor: primaryColor,\r\n                borderWidth: 0.2,\r\n                backgroundColor: \"green\",\r\n                marginRight: 10\r\n            }}>\r\n            <View style={{ backgroundColor: primaryColor, padding: 10, flex: 1, height: 120 }}>\r\n                <View style={{ backgroundColor: \"#fff\", height: 50, width: 50, borderRadius: 30, justifyContent: \"center\", alignItems: \"center\" }} >\r\n                    <Child />\r\n                </View>\r\n                <Text style={{ fontSize: 18, fontWeight: \"bold\", color: \"#fff\", marginTop: 10 }} >{Heading}</Text>\r\n                <Text style={{ fontSize: 12, fontWeight: \"bold\", color: \"#fff\", marginTop: 10, marginBottom: 10 }} >{subHeading}</Text>\r\n            </View>\r\n        </NewRectButtonWithChildren>\r\n    )\r\n}","import { Platform, View } from \"react-native\";\r\n\r\nexport default Platform.OS !== 'web' ? require('react-native').Modal : require('./WebModal').default;\r\n\r\n\r\n\r\n/*\r\n///Example\r\n\r\n<Modal\r\nvisible={true} //pass in condition or boolean\r\ntransparent>\r\n<Text>skajjdhgfulwasjngvUSXHC;u</Text>\r\n<div\r\n    style={{\r\n    height: \"50px\",\r\n    width: \"100px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n    backgroundColor: \"red\"\r\n    }}\r\n    onClick={() => {\r\n    console.log(\"div clicked\")\r\n    setVisible(false)\r\n    }}>close dialog</div>\r\n</Modal> */","import { FontAwesome5, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { StyleSheet, Text, View, Image } from \"react-native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport Animated from \"react-native-reanimated\";\r\nimport { red, useValue } from \"react-native-redash\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useSelector } from \"react-redux\";\r\n//native imports\r\nimport { _appState } from \"../../../redux/rootReducer\";\r\nimport { MainRouterStackParamList } from \"../../../routers/MainRouter\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { DeviceCard } from \"./deviceCard\";\r\nimport Header from './Header';\r\nimport STYLES from \"../../common/styles\"\r\nimport { NewRectButton, NewRectButtonWithChildren } from \"../../common/buttons/RectButtonCustom\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport { appOperator } from \"../../../util/app.operator\";\r\n//@ts-ignore\r\nimport Modal from \"../../common/modal\";\r\n\r\nconst navigationIconSize = 25;\r\n\r\nexport type navigationProp = StackNavigationProp<\r\n  MainRouterStackParamList,\r\n  \"dashboard\"\r\n>;\r\n\r\ntype routeProp = RouteProp<MainRouterStackParamList, \"dashboard\">;\r\n\r\ninterface Props {\r\n  navigation: navigationProp;\r\n  route: routeProp;\r\n}\r\n\r\nexport const Dashboard = ({ navigation, route: { params } }: Props) => {\r\n  let log = new logger(\"DASHBOARD\")\r\n  const deviceList = useSelector(({ deviceReducer: { deviceList } }: _appState) => deviceList);\r\n  const user = useSelector(({ appCTXReducer: { user } }: _appState) => user);\r\n  //const user = useSelector(({ appCTXReducer: { user } }: _appState) => user);\r\n  const scrollViewRef = useRef(null)\r\n  const [state_deleteDeviceModal, set_state_deleteDeviceModal] = useState(\"\")\r\n  //const state = useValue(State.UNDETERMINED)\r\n  //const onScroll = onScrollEvent({ y })\r\n  //const scroll = useRef(null);\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Header navigation={navigation} user={user} />\r\n      {/* /Sec1: deviceListContainer */}\r\n      <Animated.ScrollView\r\n        ref={scrollViewRef}\r\n        showsVerticalScrollIndicator={false}\r\n        style={styles.deviceListContainer}\r\n      >\r\n        <View>\r\n          {/* <View style={{ height: HEADER_MAX_HEIGHT + 60 }}></View> */}\r\n          {deviceList.map((device, index) => {\r\n            return (\r\n              <View key={index}>\r\n                <DeviceCard\r\n                  device={device}\r\n                  navigation={navigation}\r\n                  setToBeDeletedDevice={set_state_deleteDeviceModal}\r\n                  log={log}\r\n                />\r\n              </View>\r\n\r\n            )\r\n          })}\r\n\r\n        </View>\r\n      </Animated.ScrollView>\r\n      {/*  <FlatList\r\n        //ref={scroll}\r\n        //onScroll={onScroll}\r\n        showsVerticalScrollIndicator={false}\r\n        data={containerList}\r\n        keyExtractor={(item, index) =>\r\n          \"0\" + index\r\n        }\r\n        extraData={containerList}\r\n        renderItem={({ item, index }) => {\r\n          return (\r\n            <View />\r\n          );\r\n        }}\r\n      /> */}\r\n      <Modal /*///Modal */\r\n        animationType=\"slide\"\r\n        transparent\r\n        visible={state_deleteDeviceModal.length > 0}\r\n      >\r\n        <View /* Sec1: Modal outer container */\r\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\r\n          <View /* Sec2: Modal inner container */\r\n            style={[STYLES.shadow, {\r\n              width: \"85%\",\r\n              borderRadius: 20,\r\n            }]}>\r\n            <Text style={[STYLES.H6, STYLES.warningText, { marginVertical: 8 }]}>IMPORTANT NOTE</Text>\r\n            <View style={{ paddingHorizontal: 20, width: \"100%\" }}>{/* Sec3: hint text container */}\r\n              <Text style={[STYLES.H7, {\r\n                marginVertical: 8,\r\n                textAlign: \"center\",\r\n              }]}>This will delete this device from this phone, to pair it with new phone, you have to reset the device manually. follow the following step to reset</Text>\r\n              <Text style={[STYLES.H7, {}]}>1. Turn off the device </Text>\r\n              <Text style={[STYLES.H7, {}]}>2. Now switch your HUElite device ON/OFF with a gap of 2 seconds between each toggle</Text>\r\n              <Text style={[STYLES.H7, {}]}>3. Repeat the above step 5 times</Text>\r\n              <Text style={[STYLES.H7, {}]}>4. Leave the device ON at last and wait for few seconds</Text>\r\n              <Text style={[{ textAlign: \"center\", fontSize: 12, marginVertical: 15, paddingHorizontal: 20 }]}>your device should start blinking after 5 seconds and than restart after few more seconds. once completed you can initiate the pairing process</Text>\r\n            </View>\r\n            <View style={{/* Sec3: Buttons */\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              marginTop: 25,\r\n            }}>\r\n              <NewRectButton /* Sec3: delete button */\r\n                useReanimated={false}\r\n                buttonStyle={{\r\n                  flex: 1,\r\n                  marginHorizontal: 8\r\n                }}\r\n                text=\"delete\"\r\n                onPress={() => {\r\n                  console.log(\"REMOVE DEVICE >> \" + state_deleteDeviceModal)\r\n                  appOperator.device({\r\n                    cmd: \"REMOVE_DEVICE\",\r\n                    Mac: state_deleteDeviceModal,\r\n                    log: new logger(\"test function delete device\")\r\n                  })\r\n                  set_state_deleteDeviceModal(\"\")\r\n                }} />\r\n              <NewRectButton /* Sec3: cancel button */\r\n                useReanimated={false}\r\n                buttonStyle={{\r\n                  flex: 1,\r\n                  marginHorizontal: 8\r\n                }}\r\n                text=\"cancel\"\r\n                onPress={() => {\r\n                  console.log(\"DEVICE REMOVE cancel : \")\r\n                  set_state_deleteDeviceModal(\"\")\r\n                }} />\r\n            </View>\r\n            <View /* Sec3: modal footer */\r\n              style={[STYLES.shadow, {\r\n                width: \"97%\",\r\n                height: 80,\r\n                borderRadius: 15,\r\n                backgroundColor: \"red\",\r\n                marginHorizontal: \"3%\",\r\n                marginTop: 15,\r\n                marginBottom: 8,\r\n\r\n              }]}\r\n            >\r\n              <LinearGradient\r\n                style={[{\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  borderRadius: 14,\r\n                  overflow: \"hidden\",\r\n                  backgroundColor: \"transparent\",\r\n                }]}\r\n                start={{ x: 0.3, y: 0 }}\r\n                end={{ x: 1, y: 2 }}\r\n                colors={[\"#00aaff\", \"#aa00aa\"]} >\r\n                <View style={[STYLES.absoluteFill, {\r\n                  backgroundColor: \"white\",\r\n                  opacity: 0.4\r\n                }]} >\r\n                  <Image source={require(\"../../../../assets/icons/icon-no-bg.png\")} style={[STYLES.absoluteFill, { width: 200, height: \"100%\" }]} />\r\n                  <Image source={require(\"../../../../assets/icons/icon-no-bg.png\")} style={[STYLES.absoluteFill, { width: 50, height: \"100%\", left: \"80%\" }]} />\r\n                </View>\r\n              </LinearGradient>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      {/* Sec:  */}\r\n      {false && <View style={styles.navigatorMenu}>\r\n        <NewRectButtonWithChildren\r\n          onPress={() => {\r\n            //navigation.navigate(\"pairing\");\r\n            /* dispatch(\r\n              newDeviceSagaAction({\r\n                newDevice: Object.assign({}, dummyDevice, {\r\n                  deviceName: \"Kitchen TubeLight\",\r\n                  SSID: \"Homelink1\",\r\n                  wifiPass: \"Ioplmkjnb@1\",\r\n                  Mac: \"ED:98:H3:49:f5\",\r\n                  groupName: \"group\",\r\n                }),\r\n                groupType: GROUP_TYPES.SINGLETON,\r\n              })\r\n            ); */\r\n          }}\r\n          style={{\r\n            borderRightWidth: 0.5,\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            paddingRight: 10,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              //backgroundColor: \"green\",\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              height: 35,\r\n            }}\r\n          >\r\n            <FontAwesome5\r\n              name=\"layer-group\"\r\n              size={navigationIconSize}\r\n              color=\"white\"\r\n            />\r\n          </View>\r\n          <View style={{ paddingVertical: 2 }}>\r\n            <Text style={{ color: \"white\", fontSize: 12 }}>New Group</Text>\r\n          </View>\r\n        </NewRectButtonWithChildren>\r\n        <NewRectButtonWithChildren\r\n          onPress={() => {\r\n            navigation.navigate(\"pairing\");\r\n          }}\r\n          style={{\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            paddingLeft: 10,\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              //backgroundColor: \"green\",\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              height: 35,\r\n            }}\r\n          >\r\n            <MaterialIcons\r\n              name=\"add-circle-outline\"\r\n              size={navigationIconSize}\r\n              color=\"white\"\r\n            />\r\n          </View>\r\n          <View style={{ paddingVertical: 2 }}>\r\n            <Text style={{ color: \"white\", fontSize: 12 }}>Add Device</Text>\r\n          </View>\r\n        </NewRectButtonWithChildren>\r\n      </View>}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    //backgroundColor: \"#002\",\r\n    flex: 1,\r\n  },\r\n  ScreenName: {\r\n    fontSize: 20,\r\n    marginHorizontal: 100,\r\n    transform: [{ translateX: 2 }],\r\n  },\r\n  deviceListContainer: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    //backgroundColor: \"#0aa\",\r\n    paddingHorizontal: \"2%\"\r\n  },\r\n  navigatorMenu: {\r\n    backgroundColor: \"#33f\",\r\n    paddingHorizontal: 10,\r\n    borderRadius: 15,\r\n    overflow: \"hidden\",\r\n    alignSelf: \"center\",\r\n    position: \"absolute\",\r\n    bottom: 10,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    /* shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 1, */\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\n//TODO setup dashboard with new DB-set\r\n//TODO allOff button in dashboard\r\n//TODO dashboard navigation block\r\n//TODO device off on icon tap in deviceCard\r\n//TODO deviceCard Icon selector","import React, { useState } from \"react\";\r\nimport { Image, StyleSheet, Text, View } from \"react-native\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport BrightnessSlider from \"../../common/BrightnessSlider_optmizedForWeb\";\r\nimport { navigation_t } from \"./devicePageNavigator/colorPickerScreen\";\r\n\r\ninterface Props {\r\n  navigation: navigation_t;\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t;\r\n  log?: logger\r\n}\r\n\r\nexport const DevicePageHeader = ({ navigation, device, log }: Props) => {\r\n  const [brVal, setBrVal] = useState(device.hsv.v);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        style={{\r\n          height: \"100%\",\r\n          width: 150,\r\n          position: \"absolute\",\r\n          top: 0,\r\n          right: 50,\r\n          opacity: 0.3,\r\n        }}\r\n        source={require(\"../../../../assets/images/1.png\")}\r\n      />\r\n      <View style={styles.nameContainer}>\r\n        <View\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              width: 70,\r\n              height: 70,\r\n              backgroundColor: \"#fff\",\r\n              borderRadius: 50,\r\n            }}\r\n          ></View>\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              //backgroundColor: \"green\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n          >\r\n            <Text style={styles.deviceName}>\r\n              {device.deviceName ? device.deviceName : \"unnamed\"}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.brightnessSliderContainer}>\r\n        <BrightnessSlider\r\n          color={\"#eee\"}\r\n          initBrValue={device.hsv ? device.hsv.v : 65}\r\n          deviceMac={[device.Mac]}\r\n          log={log}\r\n        />\r\n        {/*   </View> */}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n  },\r\n  nameContainer: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    //backgroundColor: \"#ff0\",\r\n    justifyContent: \"center\",\r\n  },\r\n  brightnessSliderContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    paddingHorizontal: \"5%\",\r\n    marginTop: 10,\r\n    marginBottom: 20,\r\n  },\r\n  brightnessNumber: {\r\n    color: \"#fff\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    alignSelf: \"flex-end\",\r\n    marginBottom: 6,\r\n  },\r\n  deviceName: {\r\n    color: \"#fff\",\r\n    fontSize: 25,\r\n    fontWeight: \"bold\",\r\n    marginLeft: 20,\r\n    marginBottom: 15,\r\n  },\r\n  backButton: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 25,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n","import React, { Component } from \"react\";\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport { PanGestureHandler, State } from \"react-native-gesture-handler\";\r\nimport Animated, { add, block, call, cond, divide, eq, event, modulo, pow, set, useCode } from \"react-native-reanimated\";\r\nimport { canvas2Polar, clamp, polar2Canvas, translate, useValue, vec } from \"react-native-redash\";\r\nimport UNIVERSALS from \"../../@universals\";\r\nimport { appOperator } from \"../../util/app.operator\";\r\n//import { Path } from \"react-native-svg\";\r\nimport { getTimeDiffNowInMs } from \"../../util/DateTimeUtil\";\r\nimport { logger } from \"../../util/logger\";\r\n\r\n//const AnimatedPath = Animated.createAnimatedComponent(Path); \r\nconst quadraticIn = (t: any) => pow(t, 2);\r\nconst PICKER_WIDTH = 30;\r\nconst PICKER_HEIGHT = 60;\r\nconst STROKE_WIDTH = 4;\r\n\r\ninterface Props {\r\n  canvasWidth: number\r\n  h: Animated.Value<number>\r\n  s: Animated.Value<number>\r\n  backgroundColor: Animated.Node<number>\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t\r\n  log?: logger\r\n}\r\n\r\nconst ColorPickerPin = ({\r\n  canvasWidth,\r\n  h,\r\n  s,\r\n  backgroundColor,\r\n  device,\r\n  log\r\n}: Props) => {\r\n  const state = useValue(State.UNDETERMINED);\r\n  let timeStamp = Date.now();\r\n  const CENTER = { x: canvasWidth / 2, y: canvasWidth / 2, };\r\n  const offset = { x: useValue(0), y: useValue(0) };\r\n  const { theta, radius } = canvas2Polar(vec.add(\r\n    offset,\r\n    polar2Canvas({ theta: (device.hsv?.h ? device.hsv?.h : 0) * (Math.PI / 180), radius: (canvasWidth / 2) * Math.sqrt((device.hsv?.s ? device.hsv?.s : 100) / 100), }, CENTER)\r\n  ), CENTER);\r\n  const l = { theta: theta, radius: clamp(radius, 0, canvasWidth / 2) };\r\n  const hue = divide(modulo(l.theta, 2 * Math.PI), 2 * Math.PI);\r\n  const saturation = cond(eq(l.radius, 0), 0, divide(l.radius, canvasWidth / 2));\r\n\r\n  const gestureHandler = event(\r\n    [\r\n      {\r\n        nativeEvent: ({ x: transX, y: transY, state: _state }: any) =>\r\n          block([\r\n            set(state, _state),\r\n            cond(\r\n              eq(state, State.ACTIVE),\r\n              block([\r\n                set(offset.x, add(offset.x, transX)),\r\n                set(offset.y, add(offset.y, transY)),\r\n              ])\r\n            ),\r\n          ]),\r\n      },\r\n    ],\r\n    { useNativeDriver: true }\r\n  );\r\n\r\n  const updateColor = (h: number, s: number, gestureState: State, log?: logger) => {\r\n    appOperator.device({\r\n      cmd: \"COLOR_UPDATE\",\r\n      deviceMac: [device.Mac],\r\n      hsv: { h: Math.min(Math.round(h * 360), 360), s: Math.min(Math.round(s * 100), 100) },\r\n      gestureState,\r\n      log\r\n    })\r\n  }\r\n\r\n  useCode(\r\n    () => [\r\n      set(h, hue),\r\n      set(s, quadraticIn(saturation)),\r\n      call(\r\n        [h, s, state],\r\n        ([h, s, state]) => {\r\n          /* if (getTimeDiffNowInMs(timeStamp) > 200) {\r\n            console.log(\"<<<< Sending Color- >>>>\")\r\n            timeStamp = getCurrentTimeStamp();\r\n            updateColor(h, s, State.ACTIVE, log)\r\n          }\r\n          else {\r\n            //console.log(\"<<<< cannot send Bightness- >>>>\")\r\n          } */\r\n          if (state == State.ACTIVE) {\r\n            if (getTimeDiffNowInMs(timeStamp) > 200) {\r\n              console.log(\"Sending hex >>>>>>>>>>>>>>>>\")\r\n              //console.log(\"can send\")\r\n              timeStamp = Date.now();\r\n              updateColor(h, s, state, log)\r\n            } else {\r\n              //console.log(\"cannot send\")\r\n            }\r\n          } else if (state == State.END) {\r\n            console.log(\"Sending hex >>>>>>>>>>>>>>>>\")\r\n            setTimeout(() => {\r\n              timeStamp = Date.now();\r\n              updateColor(h, s, state, log)\r\n            }, 200);\r\n          }\r\n        }\r\n      ),\r\n    ],\r\n    [h, hue, s, state, saturation, timeStamp]\r\n  );\r\n\r\n  return (\r\n    <ColorPickerPin_copy\r\n      gestureHandler={gestureHandler}\r\n      CENTER={CENTER}\r\n      offset={offset}\r\n      state={state}\r\n      l={l} />);\r\n};\r\nexport default ColorPickerPin;\r\n\r\n\r\n\r\nclass ColorPickerPin_copy extends Component<{\r\n  gestureHandler: (...args: any[]) => void\r\n  CENTER: { x: number, y: number }\r\n  offset: { x: Animated.Value<0>, y: Animated.Value<0> }\r\n  l: { theta: Animated.Node<number>, radius: Animated.Node<number> }\r\n  state: Animated.Value<State>\r\n}, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={StyleSheet.absoluteFill}>\r\n        <PanGestureHandler\r\n          onGestureEvent={this.props.gestureHandler}\r\n          onHandlerStateChange={this.props.gestureHandler}>\r\n          <Animated.View\r\n            style={{\r\n              width: 50,\r\n              height: 50,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              transform: [\r\n                ...translate(vec.add(\r\n                  polar2Canvas(this.props.l, this.props.CENTER),\r\n                  {\r\n                    x: -25,\r\n                    y: -25,\r\n                  })),\r\n              ],\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                backgroundColor: \"#fff\",\r\n                borderWidth: 2,\r\n                borderColor: \"#aaaaaa\",\r\n                height: 30,\r\n                width: 30,\r\n                borderRadius: 15,\r\n              }}\r\n            />\r\n          </Animated.View>\r\n        </PanGestureHandler>\r\n      </View>\r\n\r\n    )\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Image, StyleSheet, Text, View } from \"react-native\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RectButton, ScrollView, State } from \"react-native-gesture-handler\";\r\nimport Animated, { add, max, min } from \"react-native-reanimated\";\r\nimport { hsv2color, useValue } from \"react-native-redash\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { devicePageStackParamList } from \"../..\";\r\nimport { logger } from \"../../../../../util/logger\";\r\nimport { NewRectButtonWithChildren } from \"../../../../common/buttons/RectButtonCustom\";\r\nimport STYLES from \"../../../../common/styles\";\r\nimport { DevicePageHeader } from \"../../DevicePageHeader\";\r\nimport { ColorPickerSection } from \"./colorPickerSection\";\r\nimport { appOperator } from \"../../../../../util/app.operator\";\r\n\r\nexport enum viewTypeEnum {\r\n  DEVICE_COLOR_PICKER_SCREEN = 0,\r\n  DEVICE_MODES_SCREEN = 1,\r\n  DEVICE_SETTING_SCREEN = 2,\r\n}\r\n\r\nexport type navigation_t = StackNavigationProp<\r\n  devicePageStackParamList,\r\n  \"DeviceColorPicker\"\r\n>;\r\ntype routeProp_t = RouteProp<\r\n  devicePageStackParamList,\r\n  \"DeviceColorPicker\"\r\n>;\r\n\r\ninterface Props {\r\n  navigation: navigation_t;\r\n  route: routeProp_t;\r\n}\r\n\r\nexport const DeviceColorPickerScreen = ({\r\n  navigation,\r\n  route: {\r\n    params: { device },\r\n  },\r\n}: Props) => {\r\n  const [view, setView] = useState<viewTypeEnum>(\r\n    viewTypeEnum.DEVICE_COLOR_PICKER_SCREEN\r\n  );\r\n  const hue = useValue(0);\r\n  const saturation = useValue(0);\r\n  const value = useValue(1);\r\n  const backgroundColor = hsv2color(hue, saturation, value);\r\n  const headBackgroundColor = hsv2color(\r\n    add(hue, 40),\r\n    max(0.5, min(0.8, saturation)),\r\n    value\r\n  );\r\n  const log = new logger(\"DEVICE COLOR PICKER\")\r\n\r\n  const colorSnippets = [\r\n    { h: 0, s: 100, v: 100, hex: \"#ff0000\" },\r\n    { h: 60, s: 100, v: 100, hex: \"#ffff00\" },\r\n    { h: 119, s: 100, v: 100, hex: \"#00ff00\" },\r\n    { h: 180, s: 100, v: 100, hex: \"#00ffff\" },\r\n    { h: 240, s: 100, v: 100, hex: \"#0000ff\" },\r\n    { h: 299, s: 100, v: 100, hex: \"#ff00ff\" },\r\n  ]\r\n  interface updateColorProps {\r\n    h: number,\r\n    s: number\r\n  }\r\n  const updateColor = ({ h, s }: updateColorProps) => {\r\n    appOperator.device({\r\n      cmd: \"COLOR_UPDATE\",\r\n      deviceMac: [device.Mac],\r\n      hsv: { h, s },\r\n      gestureState: State.END,\r\n      log\r\n    })\r\n  }\r\n\r\n  return (\r\n    <SafeAreaView style={[styles.container]}>\r\n      {view == viewTypeEnum.DEVICE_COLOR_PICKER_SCREEN && (\r\n        <View style={[styles.section2, { flex: 1 }]}>\r\n          <View /* Sec1: devicePage header */\r\n            style={styles.header_container}>\r\n            <Animated.View\r\n              //@ts-ignore\r\n              style={[styles.header_AnimatedView, { backgroundColor: headBackgroundColor }]}\r\n            >\r\n              <DevicePageHeader\r\n                navigation={navigation}\r\n                device={device}\r\n                log={log}\r\n              />\r\n            </Animated.View>\r\n          </View>\r\n          <ScrollView style={{/* Sec1: color picker container scrollview */\r\n            //backgroundColor: \"green\",\r\n            height: \"100%\"\r\n          }}\r\n            showsVerticalScrollIndicator={false}\r\n          >\r\n            <View style={{ minHeight: \"10%\" }}>{/* Sec2: Navigator */}\r\n              <NewRectButtonWithChildren /* Sec3: modes button */\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"4%\",\r\n                  right: \"6%\",\r\n                }}\r\n                onPress={() => {\r\n                  navigation.replace(\"DeviceModesScreen\", { device })\r\n                }}\r\n              >\r\n                <Image source={require(\"../../../../../../assets/icons/preset.png\")}\r\n                  style={{\r\n                    height: 50,\r\n                    width: 50\r\n                  }} />\r\n              </NewRectButtonWithChildren>\r\n              <NewRectButtonWithChildren /* Sec3: setting button */\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"4%\",\r\n                  left: \"6%\",\r\n                }}\r\n                onPress={() => {\r\n                  navigation.replace(\"DeviceSettingScreen\", { device })\r\n                }}\r\n              >\r\n                <Image source={require(\"../../../../../../assets/icons/setting.png\")}\r\n                  style={{\r\n                    height: 50,\r\n                    width: 50\r\n                  }} />\r\n              </NewRectButtonWithChildren>\r\n              {/* Sec: colorPicker */}\r\n\r\n            </View>\r\n            <View style={{/*  Sec2: Color Picker */\r\n              flex: 1,\r\n              // backgroundColor: \"red\",\r\n            }}>\r\n              <ColorPickerSection\r\n                hue={hue}\r\n                saturation={saturation}\r\n                value={value}\r\n                backgroundColor={backgroundColor}\r\n                device={device}\r\n                navigation={navigation}\r\n                log={log}\r\n              />\r\n            </View>\r\n            <View style={{/* Sec2: divider => colorPicker - colorSnippets */\r\n            }}>\r\n              <Text style={[STYLES.H1, { textAlign: \"center\", marginTop: \"3%\" }]}>More Colors</Text>\r\n              <Text style={[STYLES.H7, STYLES.textFeather, { textAlign: \"center\", marginTop: 5, marginBottom: \"5%\", paddingHorizontal: \"8%\" }]}>\r\n                Color is the power which directly influences human soul. colors are the smile of nature\r\n                with <Text style={[STYLES.H7, { color: \"#555\" }]}>{\" \"}HUElite{\" \"}</Text> Express your self in colors, as colors is the most beautiful language\r\n                </Text>\r\n            </View>\r\n            <View style={{ /* Sec2: Color snippets container  */\r\n              flex: 1,\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              flexWrap: \"wrap\",\r\n              //backgroundColor: \"blue\",\r\n              marginBottom: \"50%\"\r\n            }}>\r\n              {colorSnippets.map((color, index) => {\r\n                return (\r\n                  <NewRectButtonWithChildren\r\n                    key={index}\r\n                    style={{\r\n                      backgroundColor: color.hex,\r\n                      margin: 10,\r\n                      borderRadius: 30,\r\n                      height: 60,\r\n                      width: 60\r\n                    }}\r\n                    onPress={() => {\r\n                      console.log(\"Color is :: \" + color.hex)\r\n                      updateColor({ h: color.h, s: color.s })\r\n                    }}>\r\n\r\n                  </NewRectButtonWithChildren>\r\n                )\r\n              })}\r\n            </View>\r\n          </ScrollView>\r\n        </View>\r\n      )\r\n      }\r\n    </SafeAreaView >\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  header_container: {\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    minHeight: 230,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  header_AnimatedView: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    overflow: \"hidden\",\r\n    borderRadius: 25,\r\n  },\r\n  section2: {\r\n    width: \"100%\",\r\n    alignSelf: \"center\",\r\n    //backgroundColor: \"#55f\",\r\n    borderTopLeftRadius: 25,\r\n    borderTopRightRadius: 25,\r\n  },\r\n  navigatorMenu: {\r\n    backgroundColor: \"#33f\",\r\n    height: 60,\r\n    width: 230,\r\n    paddingHorizontal: 10,\r\n    borderRadius: 15,\r\n    overflow: \"hidden\",\r\n    alignSelf: \"center\",\r\n    //position: \"absolute\",\r\n    //bottom: 10,\r\n    //display: \"flex\",\r\n    display: \"none\",\r\n    flexDirection: \"row\",\r\n    /* shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 1,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 1, */\r\n  },\r\n});\r\n","import React, { useState, memo, useEffect, useRef } from \"react\";\r\nimport {\r\n  Dimensions,\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  Text,\r\n  Platform,\r\n} from \"react-native\";\r\n\r\n//import { Surface } from \"gl-react-expo\";\r\n//import { GLSL, Node, Shaders } from \"gl-react\";\r\nimport Animated from \"react-native-reanimated\";\r\nimport ColorPickerPin from \"./ColorPickerPin_optimizedForWeb\";\r\n//import Svg, { Circle } from \"react-native-svg\";\r\nimport { deviceType } from \"../../util/dummyData/DummyData.jsx\";\r\nimport { logger } from \"../../util/logger\";\r\nimport UNIVERSALS from \"../../@universals\";\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    //backgroundColor: \"red\",\r\n  },\r\n  surface: {},\r\n  hue: {\r\n    //flex: 1,\r\n    alignSelf: \"center\",\r\n    //maxWidth: 300,\r\n    //maxHeight: 300\r\n    //backgroundColor: \"red\",\r\n  },\r\n});\r\n\r\ninterface Props {\r\n  hue: Animated.Value<number>;\r\n  saturation: Animated.Value<number>;\r\n  backgroundColor: Animated.Node<number>;\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t\r\n  log?: logger\r\n}\r\nconst { width } = Dimensions.get(\"window\");\r\nconst ColorPicker = ({\r\n  hue,\r\n  saturation,\r\n  backgroundColor,\r\n  device,\r\n  log\r\n}: Props) => {\r\n  //const AnimatedCircle = Animated.createAnimatedComponent(Circle);\r\n  const [canvasWidth, setCanvasWidth] = useState(0)\r\n  console.log(\"--width of color picker width is :: \" + canvasWidth)\r\n  const ref = useRef<any>(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (ref.current) {\r\n      console.log('width', ref?.current ? ref.current?.offsetWidth : 0);\r\n      setCanvasWidth(ref.current.offsetWidth)\r\n    }\r\n  }, [ref.current])\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <div style={{ alignSelf: \"center\" }}\r\n        ref={ref}\r\n        /* onLayout={(event) => {\r\n          var { width } = event.nativeEvent.layout;\r\n          console.log(\"**width :: \" + width)\r\n          setCanvasWidth(width);\r\n        }} */>\r\n        <Image source={require(\"../../../assets/images/colorPicker.png\")} style={[\r\n          styles.surface,\r\n          {\r\n            width: width * 0.85,\r\n            height: width * 0.85,\r\n          },\r\n        ]} />\r\n        {canvasWidth > 0 && <ColorPickerPin\r\n          canvasWidth={canvasWidth}\r\n          h={hue}\r\n          s={saturation}\r\n          backgroundColor={backgroundColor}\r\n          device={device}\r\n          log={log}\r\n        />}\r\n      </div>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n\r\n\r\n/**\r\n * \r\n * ## changelog\r\n * - colorpicker pin is now rendered only after the canvasWidth is updated with image component width\r\n */\r\n\r\n\r\n{/*   <Surface\r\n          style={[\r\n            styles.surface,\r\n            {\r\n              width: 300,\r\n              height: 300,\r\n            },\r\n          ]}\r\n        >\r\n        <Node shader={shaders.hue} /> \r\n        </Surface> */}\r\n\r\n\r\n/* const shaders = Shaders.create({\r\nhue: {\r\nfrag: GLSL`\r\n#define PI  3.141592653589793\r\n#define TAU 6.283185307179586\r\nprecision highp float;\r\nvarying vec2 uv;\r\nuniform float size;\r\n// https://stackoverflow.com/questions/15095909/from-rgb-to-hsv-in-opengl-glsl\r\nvec3 rgb2hsv(vec3 c)\r\n{\r\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\r\nvec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\r\nvec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\r\nfloat d = q.x - min(q.w, q.y);\r\nfloat e = 1.0e-10;\r\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\r\n}\r\n// All components are in the range [0…1], including hue.\r\nvec3 hsv2rgb(vec3 c)\r\n{\r\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\r\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\r\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\r\n}\r\nfloat quadraticIn(float t) {\r\nreturn t * t;\r\n}\r\nvoid main() {\r\nfloat mag = distance(uv, vec2(0.5));\r\nvec2 pos = vec2(0.5) - uv;\r\nfloat a = atan(pos.y, pos.x);\r\nfloat progress = a * 0.5 / PI + 0.5;\r\ngl_FragColor = mag < 0.5 ? vec4(hsv2rgb(vec3(progress, quadraticIn(mag * 2.0), 1.0)), 1.0) : vec4(1.0, 1.0, 1.0, 1.0);\r\n}\r\n`,\r\n},\r\n}); */","import React from \"react\";\r\nimport { Dimensions, StyleSheet, View, Image } from \"react-native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport Animated from \"react-native-reanimated\";\r\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport ColorPicker from \"../../../../common/ColorPicker\";\r\nimport { navigation_t, viewTypeEnum } from \".\";\r\nimport { logger } from \"../../../../../util/logger\";\r\nimport UNIVERSALS from \"../../../../../@universals\";\r\n\r\ninterface Props {\r\n  hue: Animated.Value<number>;\r\n  saturation: Animated.Value<number>;\r\n  value: Animated.Value<number>;\r\n  backgroundColor: Animated.Node<number>;\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t;\r\n  navigation: navigation_t;\r\n  log?: logger\r\n}\r\n\r\nexport const ColorPickerSection = ({\r\n  hue,\r\n  saturation,\r\n  value,\r\n  backgroundColor,\r\n  device,\r\n  navigation,\r\n  log\r\n}: Props) => {\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Sec: timer Button */}\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          //backgroundColor: \"red\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <ColorPicker\r\n          hue={hue}\r\n          saturation={saturation}\r\n          backgroundColor={backgroundColor}\r\n          device={device}\r\n          log={log}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //backgroundColor: \"red\",\r\n    flex: 1,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { FlatList, Image, Text, View } from \"react-native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport { _appState } from \"../../../redux/rootReducer\";\r\nimport { NewRectButtonWithChildren } from \"../buttons/RectButtonCustom\";\r\n\r\nconst modes = [\r\n  {\r\n    name: \"AURORA\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/aurora.png\"),\r\n  },\r\n  {\r\n    name: \"AUTUMN\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/autumn.png\"),\r\n  },\r\n  {\r\n    name: \"DEEP OPCEAN\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/deepocean.png\"),\r\n  },\r\n  {\r\n    name: \"SPRING\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/spring1.png\"),\r\n  },\r\n  {\r\n    name: \"SUNRISE\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/sunrise.png\"),\r\n  },\r\n  {\r\n    name: \"SUNSET\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/sunset.png\"),\r\n  },\r\n  {\r\n    name: \"MODE 7\",\r\n    img: require(\"../../../../assets/images/presetImages/scenes/winter.png\"),\r\n  },\r\n];\r\n\r\ninterface Props {\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t;\r\n}\r\n\r\nexport const Modes = ({ device }: Props) => {\r\n  const dispatch = useDispatch();\r\n  const deviceFromStore = useSelector((state: _appState) =>\r\n    state.deviceReducer.deviceList.find(\r\n      (item) => item.Mac == device.Mac\r\n    )\r\n  );\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        //backgroundColor: \"#555\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <FlatList\r\n        horizontal\r\n        data={modes}\r\n        keyExtractor={(_, index) => {\r\n          return \"\" + index;\r\n        }}\r\n        renderItem={({ item, index }) => {\r\n          return (\r\n            <View\r\n              style={{\r\n                borderRadius: 10,\r\n                marginHorizontal: 8,\r\n                overflow: \"hidden\",\r\n              }}\r\n            >\r\n              <NewRectButtonWithChildren\r\n                /*  onPress={() => {\r\n                   dispatch(\r\n                     groupModes_saga_action({\r\n                       Mode: item.name,\r\n                       groupUUID: group.groupUUID,\r\n                       deviceMac: deviceMacFromNavigator\r\n                         ? deviceMacFromNavigator\r\n                         : deviceMac\r\n                           ? deviceMac\r\n                           : [],\r\n                     })\r\n                   );\r\n                 }} */\r\n                style={{\r\n                  width: 150,\r\n                  height: 210,\r\n                  backgroundColor: \"#eee\",\r\n                  shadowColor: \"#000\",\r\n                  shadowOffset: {\r\n                    width: 0,\r\n                    height: 2,\r\n                  },\r\n                  shadowOpacity: 0.25,\r\n                  shadowRadius: 3.84,\r\n                  elevation: 2,\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                }}\r\n              >\r\n                {/*     <LinearGradient\r\n                  style={{\r\n                    height: 120,\r\n                    width: \"100%\",\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                  }}\r\n                  colors={[\"#fd746c\", \"#ff9068\"]}\r\n                  start={{ x: 1, y: 1 }}\r\n                  end={{ x: 0, y: 0 }}\r\n                ></LinearGradient> */}\r\n                <Image\r\n                  style={{\r\n                    height: 210,\r\n                    width: \"100%\",\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                  }}\r\n                  source={item.img}\r\n                />\r\n\r\n                {/* {groupFromSelector?.activeMode == item.name ? (\r\n                  <AntDesign\r\n                    name=\"pausecircleo\"\r\n                    size={20}\r\n                    color=\"#fff\"\r\n                    style={{ position: \"absolute\", bottom: 10, right: 10 }}\r\n                  />\r\n                ) : (\r\n                    <AntDesign\r\n                      name=\"playcircleo\"\r\n                      size={20}\r\n                      color=\"#fff\"\r\n                      style={{ position: \"absolute\", bottom: 10, right: 10 }}\r\n                    />\r\n                  )} */}\r\n                <Text\r\n                  style={{ fontSize: 15, color: \"#fff\", fontWeight: \"bold\" }}\r\n                >\r\n                  {item.name}\r\n                </Text>\r\n              </NewRectButtonWithChildren>\r\n            </View>\r\n          );\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n","import { MaterialIcons } from \"@expo/vector-icons\";\r\nimport React from \"react\";\r\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\r\n\r\ninterface Props {\r\n  initValue: number;\r\n  _rowHeight?: number;\r\n  _width?: number;\r\n  heading?: string;\r\n  maxVal: number;\r\n  value: string;\r\n  index: number;\r\n  setIndex: (index: number) => void;\r\n}\r\n\r\nexport const NewSelector = ({\r\n  initValue,\r\n  _rowHeight = 60,\r\n  _width = 80,\r\n  heading,\r\n  maxVal,\r\n  value = \"\",\r\n  index = 0,\r\n  setIndex,\r\n}: Props) => {\r\n  const onPressUp = () => {\r\n    if (index == 0) setIndex(maxVal - 1);\r\n    else if (index > 0) setIndex(index - 1);\r\n  };\r\n\r\n  const onPressDown = () => {\r\n    if (index < maxVal - 1) setIndex(index + 1);\r\n    else setIndex(0);\r\n  };\r\n\r\n  return (\r\n    <View\r\n      style={[styles.container, { width: _width, height: _rowHeight * 3 + 20 }]}\r\n    >\r\n      <View style={styles.heading}>\r\n        {heading && <Text style={styles.headingText}>{heading}</Text>}\r\n      </View>\r\n      <View style={[styles.scrollContainer, { height: _rowHeight }]}>\r\n        <TouchableOpacity\r\n          onPress={onPressUp}\r\n          style={[styles.button, { height: _rowHeight }]}\r\n        >\r\n          <MaterialIcons name=\"navigation\" size={24} color=\"#ddd\" />\r\n          {/* <FontAwesome name=\"angle-double-up\" size={24} color=\"#555\" /> */}\r\n        </TouchableOpacity>\r\n        <View style={[styles.numberContainer, { height: _rowHeight }]}>\r\n          <Text style={styles.value}>{value}</Text>\r\n        </View>\r\n        <TouchableOpacity\r\n          onPress={onPressDown}\r\n          style={[\r\n            styles.button,\r\n            { height: _rowHeight, transform: [{ rotate: \"180deg\" }] },\r\n          ]}\r\n        >\r\n          {/* <FontAwesome name=\"angle-double-up\" size={24} color=\"#555\" /> */}\r\n          <MaterialIcons\r\n            style={{ transform: [{ rotate: \"360deg\" }] }}\r\n            name=\"navigation\"\r\n            size={24}\r\n            color=\"#ddd\"\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    //backgroundColor: \"red\",\r\n  },\r\n  heading: { height: 20, alignItems: \"center\", justifyContent: \"center\" },\r\n  headingText: {\r\n    fontSize: 10,\r\n    fontWeight: \"bold\",\r\n    color: \"#555\",\r\n    textAlign: \"center\",\r\n  },\r\n  scrollContainer: {},\r\n  numberContainer: { alignItems: \"center\", justifyContent: \"center\" },\r\n  value: { fontSize: 20, fontWeight: \"bold\", color: \"#555\" },\r\n  button: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    //backgroundColor: \"green\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from 'react'\r\nimport STYLES from \"../styles\"\r\nimport { View, Text, Modal, StyleSheet } from \"react-native\"\r\nimport UNIVERSALS from '../../../@universals';\r\nimport { Feather, MaterialCommunityIcons } from \"@expo/vector-icons\"\r\nimport { NewSelector } from '../NewSelector';\r\nimport { NewRectButtonWithChildren } from '../buttons/RectButtonCustom';\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport API from '../../../services/api';\r\nimport { logger } from '../../../util/logger';\r\nimport { generate_UUID_10_withVenderPrefix } from '../../../util/UUID_utils';\r\nimport { appOperator } from '../../../util/app.operator';\r\nimport { getCurrentTimeStampInSeconds } from '../../../util/DateTimeUtil';\r\n\r\nconst daysSelectorArray = [\r\n    { day: \"M\" },\r\n    { day: \"T\" },\r\n    { day: \"W\" },\r\n    { day: \"T\" },\r\n    { day: \"F\" },\r\n    { day: \"S\" },\r\n    { day: \"S\" },\r\n];\r\nconst hrs = [\r\n    { _data: \"01\", val: 1 },\r\n    { _data: \"02\", val: 2 },\r\n    { _data: \"03\", val: 3 },\r\n    { _data: \"04\", val: 4 },\r\n    { _data: \"05\", val: 5 },\r\n    { _data: \"06\", val: 6 },\r\n    { _data: \"07\", val: 7 },\r\n    { _data: \"08\", val: 8 },\r\n    { _data: \"09\", val: 9 },\r\n    { _data: \"10\", val: 10 },\r\n    { _data: \"11\", val: 11 },\r\n    { _data: \"12\", val: 12 },\r\n];\r\nconst mins = [\r\n    { _data: \"00\", val: 0 },\r\n    { _data: \"05\", val: 5 },\r\n    { _data: \"10\", val: 10 },\r\n    { _data: \"15\", val: 15 },\r\n    { _data: \"20\", val: 20 },\r\n    { _data: \"25\", val: 25 },\r\n    { _data: \"30\", val: 30 },\r\n    { _data: \"35\", val: 35 },\r\n    { _data: \"40\", val: 40 },\r\n    { _data: \"45\", val: 45 },\r\n    { _data: \"50\", val: 50 },\r\n\r\n    { _data: \"55\", val: 55 },\r\n    /* { _data: \"12\" },\r\n    { _data: \"13\" },\r\n    { _data: \"14\" },\r\n    { _data: \"15\" },\r\n    { _data: \"16\" },\r\n    { _data: \"17\" },\r\n    { _data: \"18\" },\r\n    { _data: \"19\" },\r\n    { _data: \"20\" },\r\n  \r\n    { _data: \"21\" },\r\n    { _data: \"22\" },\r\n    { _data: \"23\" },\r\n    { _data: \"24\" },\r\n    { _data: \"25\" },\r\n    { _data: \"26\" },\r\n    { _data: \"27\" },\r\n    { _data: \"28\" },\r\n    { _data: \"29\" },\r\n    { _data: \"30\" },\r\n  \r\n    { _data: \"41\" },\r\n    { _data: \"42\" },\r\n    { _data: \"43\" },\r\n    { _data: \"44\" },\r\n    { _data: \"45\" },\r\n    { _data: \"46\" },\r\n    { _data: \"47\" },\r\n    { _data: \"48\" },\r\n    { _data: \"49\" },\r\n    { _data: \"50\" },\r\n  \r\n    { _data: \"51\" },\r\n    { _data: \"52\" },\r\n    { _data: \"53\" },\r\n    { _data: \"54\" },\r\n    { _data: \"55\" },\r\n    { _data: \"56\" },\r\n    { _data: \"57\" },\r\n    { _data: \"58\" },\r\n    { _data: \"59\" }, */\r\n];\r\nconst daytimeSelectorData = [\r\n    { _data: \"AM\", val: 1 },\r\n    { _data: \"PM\", val: 2 },\r\n];\r\n\r\ninterface Props {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t | undefined\r\n    timerInEditor: Omit<UNIVERSALS.GLOBALS.TIMER_t, \"id\"> & { id?: string } | undefined\r\n    setTimerInEditor: React.Dispatch<React.SetStateAction<Omit<UNIVERSALS.GLOBALS.TIMER_t, \"id\"> & { id?: string } | undefined>>\r\n    log?: logger\r\n}\r\n/**\r\n * ## Devices new timer dialog\r\n * \r\n * ### @description\r\n * ##### working\r\n * - onShow fetches device timer from cloud as source of truth\r\n * - if timersString is received than update the `timers` state object with json object parsed from `timerString` received\r\n * \r\n * #### @state\r\n * - `timers` - responsible for timerDialog Middle container rendering\r\n *      **dependentViews**\r\n *          - middleSecionContainer view conditions\r\n *              `undefined` => loading\r\n *              `\"error\"`=> loading error\r\n *              `timers` && `timers.length >= 5` => max Timers warning\r\n *              `timers` && `timers.length < 5` => time selector active\r\n *              \r\n * - `hrIndex` - holds hour index for current timer in editor\r\n * - `minIndex` - holds minute index for current timer in editor\r\n *  \r\n * #### @param { device, timerInEditor, setTimerInEditor, log }\r\n * \r\n * #### @returns  timer editor dialog with reactNative Modal component\r\n * \r\n * \r\n * ### @changelog\r\n * \r\n * \r\n * ### @TODO\r\n * - [x] middleSectionContainer - show unhandled view\r\n * - [x] middleSectionContainer - show errors view\r\n * - [x] middleSectionContainer - show max timers limit reacthed view\r\n * - [x] middleSectionContainer - show time selector view upon response\r\n * - [ ] make days selectors functional and style accordingly `ACTIVE` `INACTIVE`\r\n * - [ ] amke daytime selector and eventtype selector function\r\n * - [ ] modify current timer in dialog\r\n * - [ ] update new timer to device state in redux store\r\n */\r\nexport const NewTimerDialog = ({ device, timerInEditor, setTimerInEditor, log }: Props) => {\r\n    const [hrIndex, setHrIndex] = useState<number>(8);\r\n    const [minIndex, setMinIndex] = useState<number>(0);\r\n    const [dtIndex, setDtIndex] = useState<number>(0)\r\n    const [timers, setTimers] = useState<Array<UNIVERSALS.GLOBALS.TIMER_t> | undefined | \"error\">(undefined)\r\n    const [etIndex, setEtIndex] = useState<UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e>(UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON)\r\n    const [days, setDays] = useState<UNIVERSALS.GLOBALS.TIMER_DAYS_t>([false, false, false, false, false, false, false])\r\n\r\n    useEffect(() => {\r\n        if (timerInEditor) {\r\n            setDays(timerInEditor.DAYS)\r\n            setEtIndex(timerInEditor.ET)\r\n            setDtIndex(timerInEditor.DT)\r\n            setHrIndex(0)\r\n            setMinIndex(0)\r\n        }\r\n        return () => { }\r\n    }, [timerInEditor])\r\n\r\n    const resetDialog = () => {\r\n        setTimerInEditor(undefined)\r\n        setTimers(undefined)\r\n        setDays([true, true, true, true, true, true, true])\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal /* Sec2: timer editor dialog */\r\n            animationType=\"slide\"\r\n            transparent\r\n            visible={timerInEditor != undefined}\r\n            onShow={async () => {\r\n                log?.print(\"onShow\")\r\n                if (device?.id) {\r\n                    const res = await API.cloudAPI.device.deviceTimersQuery.v1({\r\n                        id: device.id,\r\n                        //log: log ? new logger(\"device timers query\", log) : undefined\r\n                    })\r\n                    /**\r\n                     * - [x] validate new timers data before updating state\r\n                     */\r\n                    if (res.RES) {\r\n                        try {\r\n                            if (res.RES.ts && device.ts && res.RES.ts >= device.ts)// => if we have both local and cloud timestamp then compare and  update the latest timerStates in timers object \r\n                            {\r\n                                let timersObj = UNIVERSALS.GLOBALS.convertTimersStringToObj({ timersString: res.RES.timers })\r\n                                if (timersObj)\r\n                                    setTimers(timersObj)\r\n                                else\r\n                                    setTimers(\"error\")\r\n                            }\r\n                            else setTimers(device.timers)\r\n                        } catch (error) {\r\n                            log?.print(error)\r\n                            setTimers(\"error\")\r\n                        }\r\n                    }\r\n                    else if (res.ERR) {/* if no timersObj is received then set timers state to error so as to set middle section to show error to user */\r\n                        // - [ ] handle deviceTimerQuery errors\r\n                        setTimers(\"error\")\r\n                    } else {\r\n                        setTimers(\"error\")\r\n                        // - [ ] handle unhandled respose\r\n                    }\r\n                }\r\n            }} >\r\n            <View /* Sec3: modal container */\r\n                style={{\r\n                    flex: 1,\r\n                    //backgroundColor: \"red\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\"\r\n                }}>\r\n                <View /* Sec3: modal inner container */\r\n                    style={[{\r\n                        width: \"85%\",\r\n                        backgroundColor: \"white\",\r\n                        borderRadius: 20\r\n                    }, STYLES.shadow]}>\r\n                    <View /* Sec4:  header */\r\n                        style={{\r\n                            backgroundColor: \"#F39C12\",\r\n                            //borderRadius: 20,\r\n                            //margin: 5,\r\n                            //height: 100,\r\n                            width: \"100%\",\r\n                            justifyContent: \"flex-end\",\r\n                            paddingLeft: 10\r\n                        }}>\r\n                        <MaterialCommunityIcons\r\n                            style={{\r\n                                marginTop: 15\r\n                            }}\r\n                            name=\"toggle-switch-off\"\r\n                            size={20} color=\"white\" />\r\n                        <Text style={[STYLES.H7, {\r\n                            margin: 0,\r\n                            padding: 0,\r\n                            color: \"white\"\r\n                        }]}>TURN OFF</Text>\r\n                        <View style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            alignItems: \"center\"\r\n                        }}>\r\n                            <Text style={[\r\n                                STYLES.H1\r\n                                , {\r\n                                    color: \"white\",\r\n                                    marginBottom: 0,\r\n                                    marginLeft: 0\r\n                                }]}>{hrs[hrIndex]._data + \" : \" + mins[minIndex]._data + \" \" + daytimeSelectorData[dtIndex]._data}</Text>\r\n                            <Feather name=\"sun\" size={15} color=\"white\" />\r\n                        </View>\r\n                    </View>\r\n                    {/* Sec4: middle container */\r\n                        (timers == \"error\") ? <View style={_styles.middleContainerCommonView}><Text>error loading</Text></View>\r\n                            : (timers == undefined) ? (<View\r\n                                style={_styles.middleContainerCommonView}>\r\n                                <Text>LOADING... please wait</Text>\r\n                            </View>)\r\n                                : ((timers && timers?.length < 5) || (timers && timerInEditor?.id)) ? (<View /* Sec5: middle container */\r\n                                    style={{\r\n                                        width: \"100%\"\r\n                                    }}>\r\n                                    <View /* Sec5: Event repeatition selector */>\r\n                                        <Text style={[STYLES.H7, { color: \"#F39C12\", marginTop: 10 }]}>EVENT TYPE</Text>\r\n                                        <View\r\n                                            style={{\r\n                                                display: \"flex\",\r\n                                                flexDirection: \"row\"\r\n                                            }}>\r\n                                            <NewRectButtonWithChildren\r\n                                                useReanimated={false}\r\n                                                onPress={() => {\r\n                                                    setEtIndex(UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON)\r\n                                                }}\r\n                                                style={{\r\n                                                    height: 50,\r\n                                                    flex: 1,\r\n                                                    backgroundColor: etIndex == UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON ? \"#aaa\" : \"#eee\",\r\n                                                    marginHorizontal: 10,\r\n                                                    marginVertical: 5,\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\"\r\n                                                }}>\r\n                                                <Text>TURN ON</Text>\r\n                                            </NewRectButtonWithChildren>\r\n                                            <NewRectButtonWithChildren\r\n                                                useReanimated={false}\r\n                                                onPress={() => {\r\n                                                    setEtIndex(UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.OFF)\r\n                                                }}\r\n                                                style={{\r\n                                                    height: 50,\r\n                                                    flex: 1,\r\n                                                    backgroundColor: etIndex == UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.OFF ? \"#aaa\" : \"#eee\",\r\n                                                    marginHorizontal: 10,\r\n                                                    marginVertical: 5,\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\"\r\n                                                }}>\r\n                                                <Text>TURN OFF</Text>\r\n                                            </NewRectButtonWithChildren>\r\n                                        </View>\r\n                                    </View>\r\n                                    <View /* Sec5: Event repeatition selector */>\r\n                                        <Text style={[STYLES.H7, { color: \"#F39C12\", marginTop: 10 }]}>REPEAT EVENT</Text>\r\n                                        <View /* Sec6: Days selectors buttons */\r\n                                            style={{\r\n                                                display: \"flex\",\r\n                                                flexDirection: \"row\",\r\n                                                justifyContent: \"space-evenly\"\r\n                                            }}>\r\n                                            <NewRectButtonWithChildren /* Sec7: oncebutton for days selector */\r\n                                                onPress={() => {\r\n                                                    setDays([false, false, false, false, false, false, false])\r\n                                                }}\r\n                                                useReanimated={false}\r\n                                                style={[{\r\n                                                    width: 50,\r\n                                                    height: 50,\r\n                                                    backgroundColor: \"white\",\r\n                                                    borderRadius: 25,\r\n                                                    marginHorizontal: 10,\r\n                                                    marginVertical: 5,\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\",\r\n                                                    borderWidth: 0.5,\r\n                                                    borderColor: \"#F39C12\"\r\n                                                }, STYLES.shadow]} >\r\n                                                <Text style={{\r\n                                                    color: \"#F39C12\",\r\n                                                    fontSize: 10,\r\n                                                    fontWeight: (() => {\r\n                                                        let once = true\r\n                                                        days.forEach(item => {\r\n                                                            if (item)\r\n                                                                once = false\r\n                                                        });\r\n                                                        return once\r\n                                                    })() ? \"bold\" : \"400\"\r\n                                                }}>ONCE</Text>\r\n                                            </NewRectButtonWithChildren>\r\n                                            <NewRectButtonWithChildren /* Sec7: Daily button for days selector */\r\n                                                useReanimated={false}\r\n                                                onPress={() => {\r\n                                                    setDays([true, true, true, true, true, true, true])\r\n                                                }}\r\n                                                style={[{\r\n                                                    width: 50,\r\n                                                    height: 50,\r\n                                                    backgroundColor: \"white\",\r\n                                                    borderRadius: 25,\r\n                                                    marginHorizontal: 10,\r\n                                                    marginVertical: 5,\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\",\r\n                                                    borderWidth: 0.5,\r\n                                                    borderColor: \"#F39C12\"\r\n                                                }, STYLES.shadow]} >\r\n                                                <Text style={{\r\n                                                    color: \"#F39C12\",\r\n                                                    fontSize: 10,\r\n                                                    fontWeight: (() => {/* check if its set for daily */\r\n                                                        let daily = true\r\n                                                        days.forEach(element => {\r\n                                                            if (!element)\r\n                                                                daily = false\r\n                                                        })\r\n                                                        return daily\r\n                                                    })() ? \"bold\" : \"400\"\r\n                                                }}>DAILY</Text>\r\n                                            </NewRectButtonWithChildren>\r\n                                            <NewRectButtonWithChildren /* Sec7: Weekly button for days selector  */\r\n                                                useReanimated={false}\r\n                                                onPress={() => {\r\n                                                    setDays([true, true, true, true, true, false, false])\r\n                                                }}\r\n                                                style={[{\r\n                                                    width: 50,\r\n                                                    height: 50,\r\n                                                    backgroundColor: \"white\",\r\n                                                    borderRadius: 25,\r\n                                                    marginHorizontal: 10,\r\n                                                    marginVertical: 5,\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: \"center\",\r\n                                                    alignItems: \"center\",\r\n                                                    borderWidth: 0.5,\r\n                                                    borderColor: \"#F39C12\"\r\n                                                }, STYLES.shadow]} >\r\n                                                <Text style={{\r\n                                                    color: \"#F39C12\",\r\n                                                    fontSize: 10,\r\n                                                    fontWeight: (\r\n                                                        !(() => {/* check if its set for daily */\r\n                                                            let daily = true\r\n                                                            days.forEach(element => {\r\n                                                                if (!element)\r\n                                                                    daily = false\r\n                                                            })\r\n                                                            return daily\r\n                                                        })()\r\n                                                        &&\r\n                                                        !(() => {\r\n                                                            let once = true\r\n                                                            days.forEach(item => {\r\n                                                                if (item)\r\n                                                                    once = false\r\n                                                            });\r\n                                                            return once\r\n                                                        })()) ? \"bold\" : \"400\"\r\n                                                }}>WEEKLY</Text>\r\n                                            </NewRectButtonWithChildren>\r\n                                        </View>\r\n                                        {(\r\n                                            !(() => {/* check if days is set for once only */\r\n                                                let once = true\r\n                                                days.forEach(item => {\r\n                                                    if (item)\r\n                                                        once = false\r\n                                                })\r\n                                                return once\r\n                                            })()\r\n                                            &&\r\n                                            !(() => {/* check if its set for daily */\r\n                                                let daily = true\r\n                                                days.forEach(element => {\r\n                                                    if (!element)\r\n                                                        daily = false\r\n                                                })\r\n                                                return daily\r\n                                            })()) && <View /* Sec6: Days selector */\r\n                                                style={{\r\n                                                    display: \"flex\",\r\n                                                    flexDirection: \"row\",\r\n                                                    justifyContent: \"space-evenly\",\r\n                                                    paddingVertical: 5,\r\n                                                    paddingHorizontal: 15\r\n                                                }}>\r\n                                                {days.map((item, index) => {\r\n                                                    return (\r\n                                                        <NewRectButtonWithChildren\r\n                                                            useReanimated={false}\r\n                                                            style={{\r\n                                                                flex: 1\r\n                                                            }}\r\n                                                            onPress={() => {\r\n                                                                log?.print(\"setting new Days\")\r\n                                                                let newDaysArray: any = days.map((_item, _index) => {\r\n                                                                    if (_index == index)\r\n                                                                        return !_item\r\n                                                                    return _item\r\n                                                                })\r\n                                                                setDays(newDaysArray)\r\n                                                            }}\r\n                                                            key={index}>\r\n                                                            <Text style={{\r\n                                                                color: days[index] ? STYLES.textColors.primary : STYLES.textColors.tertiary,\r\n                                                                fontWeight: days[index] ? \"bold\" : \"500\"\r\n                                                            }}>{daysSelectorArray[index].day}</Text>\r\n                                                        </NewRectButtonWithChildren>\r\n                                                    )\r\n                                                })}\r\n                                            </View>}\r\n                                    </View>\r\n                                    <Text style={[STYLES.H4, { color: \"#F39C12\", marginTop: 10 }]}>PICK TIME</Text>\r\n                                    <View /* Sec5: time selector */\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            flexDirection: \"row\",\r\n                                            width: \"100%\",\r\n                                            justifyContent: \"space-evenly\"\r\n                                        }}>\r\n                                        <NewSelector\r\n                                            initValue={1}\r\n                                            heading=\"HRS\"\r\n                                            maxVal={hrs.length}\r\n                                            value={hrs[hrIndex] ? hrs[hrIndex]._data : \"\"}\r\n                                            index={hrIndex}\r\n                                            setIndex={setHrIndex}\r\n                                        />\r\n                                        <NewSelector\r\n                                            initValue={5}\r\n                                            heading=\"MIN\"\r\n                                            maxVal={mins.length}\r\n                                            value={mins[minIndex] ? mins[minIndex]._data : \"\"}\r\n                                            index={minIndex}\r\n                                            setIndex={setMinIndex}\r\n                                        />\r\n                                        <NewSelector\r\n                                            initValue={5}\r\n                                            heading=\"DAYTIME\"\r\n                                            maxVal={daytimeSelectorData.length}\r\n                                            value={daytimeSelectorData[dtIndex] ? daytimeSelectorData[dtIndex]._data : \"\"}\r\n                                            index={dtIndex}\r\n                                            setIndex={setDtIndex}\r\n                                        />\r\n                                    </View>\r\n                                </View>)\r\n                                    : (timers && timers.length >= 5) ? (<View /* Sec5: max timer limit */\r\n                                        style={_styles.middleContainerCommonView}>\r\n                                        <Text>max number of timer, either delete any or edit one</Text>\r\n                                    </View>)\r\n                                        : (<View><Text>unknown error occured</Text></View>)\r\n                    }\r\n\r\n                    <View /* Sec4: modal button container */\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            marginBottom: 10\r\n                        }}>\r\n                        <View /* Sec5: save/update button */\r\n                            style={{ flex: 1, paddingHorizontal: 5 }}>\r\n                            <NewRectButtonWithChildren /* Sec5: add/update dialog button */\r\n                                onPress={() => {\r\n                                    if (timers && timers != \"error\") {\r\n                                        let newTimer: UNIVERSALS.GLOBALS.TIMER_t = {\r\n                                            id: timerInEditor?.id ? timerInEditor.id : generate_UUID_10_withVenderPrefix(),\r\n                                            DAYS: days,\r\n                                            H: hrs[hrIndex].val,\r\n                                            M: mins[minIndex].val,\r\n                                            ET: etIndex,\r\n                                            DT: dtIndex,\r\n                                            STATUS: (() => {\r\n                                                let once = true\r\n                                                days.forEach(element => {\r\n                                                    if (element)\r\n                                                        once = false\r\n                                                });\r\n                                                return once\r\n                                            })() ? UNIVERSALS.GLOBALS.TIMER_STATUS_e.ONCE : UNIVERSALS.GLOBALS.TIMER_STATUS_e.REPEAT\r\n                                        }\r\n                                        log?.print(\"new timer is \" + JSON.stringify(newTimer))\r\n                                        log?.print(\"previous timer string is \" + JSON.stringify(timers, null, 2))\r\n                                        let timerFound = false\r\n                                        let newTimersObj = timers.map((timer, index) => {\r\n                                            if (timer?.id && timer.id == timerInEditor?.id) {\r\n                                                timerFound = true\r\n                                                return newTimer\r\n                                            }\r\n                                            return { ...timer, DAYS: days }\r\n                                        })\r\n                                        if (!timerFound && newTimersObj.length < 5)\r\n                                            newTimersObj.push(newTimer)\r\n                                        log?.print(\"new timer string is \" + UNIVERSALS.GLOBALS.converLocalTimerObjectToBackendString({ timers: newTimersObj }))\r\n                                        if (device) {\r\n                                            appOperator.device({\r\n                                                cmd: \"ADD_UPDATE_DEVICES\",\r\n                                                newDevices: [{ ...device, timers: newTimersObj, localTimeStamp: getCurrentTimeStampInSeconds() }],\r\n                                                log\r\n                                            })\r\n                                            setTimerInEditor(undefined)\r\n                                        }\r\n                                    }\r\n                                    // - [x] print incoming timer\r\n                                    // - [ ] process the timer addition/update here\r\n                                    // - [ ] update local state with local timetamp of device\r\n                                    // - [ ] update the new device tate to cloud\r\n                                    // - [ ] disable update button unless we have timers and not as 'error'\r\n                                }}\r\n                                useReanimated={false}\r\n                                style={{ backgroundColor: \"green\" }}>\r\n                                <Text>{timerInEditor?.id ? \"UPDATE\" : \"ADD\"}</Text>\r\n                            </NewRectButtonWithChildren>\r\n                        </View>\r\n                        <View /* Sec5: close dialog button */\r\n                            style={{ flex: 1, paddingHorizontal: 5 }}>\r\n                            <NewRectButtonWithChildren\r\n                                onPress={() => {\r\n                                    resetDialog()\r\n                                }}\r\n                                useReanimated={false}\r\n                                style={{ backgroundColor: \"red\" }}>\r\n                                <Text>MAYBE LATER</Text>\r\n                            </NewRectButtonWithChildren>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\nconst _styles = StyleSheet.create({\r\n    middleContainerCommonView: {\r\n        minHeight: 150,\r\n        width: \"100%\",\r\n        //backgroundColor: \"red\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    }\r\n})\r\n","import UNI from \"../@universals\"\r\nimport { reduxStore } from \"../redux\";\r\n\r\nexport function uuidv4() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function generate_UUID_10_withVenderPrefix() {\r\n  return UNI.venderConf.venderPrefix + \"_xxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n\r\nexport function generateRandomUserId() {\r\n  return \"xxxxxxxx-xxxx-4xxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n/** @deprecated */\r\nexport function generateUUID() {\r\n  return \"xxxxxxxx-xxxx-xxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\n/** @deprecated */\r\nexport const getContainerUUID = () => {\r\n  let UUID = generateUUID()\r\n  while (checkUUIDMatch(UUID)) {\r\n    UUID = generateUUID()\r\n  }\r\n  return UUID\r\n}\r\n\r\n/** @deprecated */\r\nconst checkUUIDMatch = (UUID: string) => {\r\n  reduxStore.store.getState().deviceReducer.containers.forEach((container, index) => {\r\n    if (UUID == container.conUUID)\r\n      return true\r\n  })\r\n  return false\r\n}\r\n","import { Ionicons } from \"@expo/vector-icons\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport React, { useState } from \"react\";\r\nimport { Alert, StyleSheet, Text, View } from \"react-native\";\r\nimport { RectButton, ScrollView } from \"react-native-gesture-handler\";\r\nimport { useSelector } from \"react-redux\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport { appState } from \"../../../redux\";\r\nimport { appNegativeColor, appPositiveColor } from \"../../../theme/colors/highlightColors\";\r\nimport { appOperator } from \"../../../util/app.operator\";\r\nimport { getCurrentTimeStampInSeconds } from \"../../../util/DateTimeUtil\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { NewRectButtonWithChildren } from \"../buttons/RectButtonCustom\";\r\nimport { NewTimerDialog } from \"./NewTimerDialog\";\r\n\r\nconst days = [\r\n  { day: \"M\" },\r\n  { day: \"T\" },\r\n  { day: \"W\" },\r\n  { day: \"T\" },\r\n  { day: \"F\" },\r\n  { day: \"S\" },\r\n  { day: \"S\" },\r\n];\r\n\r\ninterface Props {\r\n  device: UNIVERSALS.GLOBALS.DEVICE_t\r\n  log?: logger\r\n}\r\n/** \r\n * \r\n * ## todo\r\n * featureRequest timer delete action conformation to avoid unwanted delete operation\r\n */\r\nexport const Timer = ({ device, log }: Props) => {\r\n  const deviceFromStore = useSelector((state: appState) => state.deviceReducer.deviceList.find(item => item.Mac == device.Mac))\r\n  const [timerInEditor, setTimerInEditor] = useState<Omit<UNIVERSALS.GLOBALS.TIMER_t, \"id\"> & { id?: string } | undefined>(undefined)\r\n\r\n\r\n\r\n  return (\r\n    <ScrollView /* Sec1: ListView for Timers in the group  */\r\n      showsVerticalScrollIndicator={false}\r\n      style={{\r\n        width: \"100%\",\r\n      }} >\r\n      {deviceFromStore && deviceFromStore.timers.map((timerFromProp, index) => { /* Sec2: timer block container */\r\n        return (\r\n          <View\r\n            style={styles.timerBlockConatiner}\r\n            key={index}>\r\n            <View /* Sec3: Left Side Section */\r\n              style={{\r\n                backgroundColor: \"#fff\",\r\n                margin: 10,\r\n                paddingVertical: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n              }}\r\n            >\r\n              <View\r\n                style={{\r\n                  width: 1,\r\n                  borderLeftColor:\r\n                    timerFromProp?.ET == UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON\r\n                      ? appPositiveColor\r\n                      : \"#aaa\",\r\n                  borderLeftWidth: 2,\r\n                }}\r\n              ></View>\r\n              <Text\r\n                style={{\r\n                  color: \"#777\",\r\n                  fontSize: 14,\r\n                  marginLeft: 10,\r\n                  marginBottom: 10,\r\n                }}\r\n              >\r\n                {timerFromProp.H < 10 ? \"0\" : \"\"}\r\n                {timerFromProp.H}\r\n                {\":\"}\r\n                {timerFromProp.M < 10 ? \"0\" : \"\"}\r\n                {timerFromProp.M + \" \"}\r\n                {timerFromProp.DT == UNIVERSALS.GLOBALS.TIMER_DAYTIME_e.AM ? \"AM\" : \"PM\"}\r\n              </Text>\r\n            </View>\r\n            <View /* Sec3: Timer Card */\r\n              style={{\r\n                flex: 1,\r\n                marginVertical: 10,\r\n                marginRight: 10,\r\n                borderRadius: 15,\r\n                backgroundColor: \"#fff\",\r\n                overflow: \"hidden\",\r\n                shadowColor: \"#000\",\r\n                shadowOffset: {\r\n                  width: 0,\r\n                  height: 1,\r\n                },\r\n                shadowOpacity: 0.22,\r\n                shadowRadius: 2.22,\r\n                elevation: 3,\r\n              }}\r\n            >\r\n              <LinearGradient /* Sec4: */\r\n                colors={[\"#ae39fe\", \"#cf63ff\"]}\r\n                start={{ x: 0, y: 0.5 }}\r\n                end={{ x: 1, y: 0 }}\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  left: 0,\r\n                  height: \"100%\",\r\n                  width: \"100%\",\r\n                }}\r\n              />\r\n              <View /* Sec4: Middle Sec for TIME & EVENT TYPE */\r\n                style={{\r\n                  flex: 1,\r\n                  //backgroundColor: \"#ff0\",\r\n                }}\r\n              >\r\n                <View /* Sec5: Event Type */\r\n                  style={{ marginLeft: 20, marginTop: 10 }}>\r\n                  <Text style={{ color: \"white\", fontSize: 12 }}>\r\n                    {timerFromProp?.ET == UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON\r\n                      ? \"TURN ON\"\r\n                      : \"TURN OFF\"}\r\n                  </Text>\r\n                </View>\r\n                <View /* Sec5: Alarm Time */\r\n                  style={{\r\n                    //backgroundColor: \"#f00\",\r\n                    flex: 1,\r\n                    marginLeft: 20,\r\n                    justifyContent: \"center\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 40,\r\n                      //fontWeight: \"bold\",\r\n                      color: \"#fff\",\r\n                    }}\r\n                  >\r\n                    {timerFromProp?.H + \" : \"}\r\n                    {timerFromProp?.M && timerFromProp.M < 10 ? \"0\" : \"\"}\r\n                    {timerFromProp?.M + \" \"}\r\n                    {timerFromProp?.DT == UNIVERSALS.GLOBALS.TIMER_DAYTIME_e.AM\r\n                      ? \"AM\"\r\n                      : \"PM\"}\r\n                  </Text>\r\n                </View>\r\n              </View>\r\n              <View /* Sec4: Days Conatiner */\r\n                style={styles.weekDaysConatiner}>\r\n                {timerFromProp?.DAYS.map((item, index) => {\r\n                  return (\r\n                    <View style={[styles.weekDayBlock]} key={index}>\r\n                      <Text\r\n                        style={{\r\n                          textAlign: \"center\",\r\n                          color: item ? \"#fff\" : \"#555\",\r\n                          fontWeight: \"bold\",\r\n                          fontSize: 12,\r\n                        }}\r\n                      >\r\n                        {days[index].day}\r\n                      </Text>\r\n                    </View>\r\n                  );\r\n                })}\r\n              </View>\r\n              <View /* Sec4: BUTTON CONTAINER ==> EDIT / DELETE */\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  borderTopColor: \"#fff\",\r\n                  borderTopWidth: 0.5,\r\n                  marginHorizontal: 10,\r\n                }}>\r\n                <NewRectButtonWithChildren /* Sec5: EDIT BUTTON */\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: 30,\r\n                  }}\r\n                  onPress={() => {\r\n                    setTimerInEditor(timerFromProp)\r\n\r\n                  }}>\r\n                  <Text\r\n                    style={{\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 12,\r\n                      color: \"#fff\",\r\n                    }}\r\n                  >\r\n                    EDIT\r\n                    </Text>\r\n                </NewRectButtonWithChildren>\r\n                <View /* Sec5: Divider */\r\n                  style={{\r\n                    width: 1,\r\n                    borderRightColor: \"#fff\",\r\n                    borderRightWidth: 0.5,\r\n                    marginVertical: 5,\r\n                  }}\r\n                ></View>\r\n                <NewRectButtonWithChildren /* Sec5: DELETE BUTTON */\r\n                  style={{\r\n                    flex: 1,\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    //backgroundColor: \"#EC7063\",\r\n                  }}\r\n                  onPress={() => {\r\n                    log?.print(\"currentTimersList is \" + JSON.stringify(deviceFromStore.timers))\r\n                    let newTimers: UNIVERSALS.GLOBALS.TIMER_t[] = []\r\n                    deviceFromStore.timers.forEach((deleteTimerObj, deleteTimerObjIndex) => {\r\n                      if (deleteTimerObj.id == timerFromProp.id) {\r\n                        log?.print(\"timer to be deleted at index \" + deleteTimerObjIndex + \", timerId is \" + deleteTimerObj.id)\r\n                      }\r\n                      newTimers.push(deleteTimerObj)\r\n                    })\r\n                    log?.print(\"timersList after deletion \" + JSON.stringify({ ...device, timers: newTimers }))\r\n                    appOperator.device({\r\n                      cmd: \"ADD_UPDATE_DEVICES\",\r\n                      newDevices: [{ ...device, timers: newTimers, localTimeStamp: getCurrentTimeStampInSeconds() }],\r\n                      log\r\n                    })\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      color: appNegativeColor,\r\n                      fontWeight: \"bold\",\r\n                      fontSize: 12,\r\n                    }}\r\n                  >\r\n                    DELETE\r\n                    </Text>\r\n                </NewRectButtonWithChildren>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        );\r\n      })}\r\n      {(deviceFromStore && deviceFromStore.timers?.length < 5) && <NewRectButtonWithChildren /* Sec2: AddNew Event Button */\r\n        style={[\r\n          {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            minHeight: 120\r\n          },\r\n        ]}\r\n        onPress={() => {\r\n          setTimerInEditor({\r\n            DAYS: [true, true, true, true, true, false, false],\r\n            H: 10,\r\n            M: 0,\r\n            ET: UNIVERSALS.GLOBALS.TIMER_EVENT_TYPE_e.ON,\r\n            DT: UNIVERSALS.GLOBALS.TIMER_DAYTIME_e.AM,\r\n            STATUS: 1\r\n          })\r\n        }}\r\n      >\r\n        <Ionicons name=\"ios-add-circle\" size={50} color=\"#555\" />\r\n        <Text style={{ position: \"absolute\", bottom: 10, fontWeight: \"bold\" }}>\r\n          ADD NEW EVENT\r\n        </Text>\r\n      </NewRectButtonWithChildren>}\r\n      <NewTimerDialog /* Sec2: timer dialog */\r\n        device={deviceFromStore} // IMP send device from redux state so that receiving component can have latest state of device always\r\n        timerInEditor={timerInEditor}\r\n        setTimerInEditor={setTimerInEditor}\r\n        log={log ? new logger(\"timer editor dialog\", log) : undefined} />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  timerBlockConatiner: {\r\n    width: \"100%\",\r\n    minHeight: 120,\r\n    backgroundColor: \"#fff\",\r\n    overflow: \"hidden\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  weekDaysConatiner: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    padding: 5,\r\n    overflow: \"hidden\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  weekDayBlock: {\r\n    margin: 2,\r\n    width: 30,\r\n    justifyContent: \"center\",\r\n    //borderWidth: 0.5,\r\n    //borderColor: \"white\",\r\n    //borderRadius: 20,\r\n    /* shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 2, */\r\n  },\r\n});\r\n","export const appPositiveColor: string = \"#58D68D\";\r\n\r\nexport const appNegativeColor: string = \"#f55\";\r\n","import { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React from \"react\";\r\nimport { View, Text, Image } from \"react-native\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { devicePageStackParamList } from \"../..\";\r\nimport { Modes } from \"../../../../common/Modes\";\r\nimport { Timer } from \"../../../../common/Timer\";\r\nimport {\r\n  MaterialCommunityIcons,\r\n  Ionicons,\r\n  FontAwesome5,\r\n} from \"@expo/vector-icons\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport { logger } from \"../../../../../util/logger\";\r\nimport { NewRectButtonWithChildren } from \"../../../../common/buttons/RectButtonCustom\";\r\n\r\ntype DevicePageColorPickerNavigationProp = StackNavigationProp<\r\n  devicePageStackParamList,\r\n  \"DeviceModesScreen\"\r\n>;\r\ntype devicePageColorPickerRouteProp = RouteProp<\r\n  devicePageStackParamList,\r\n  \"DeviceModesScreen\"\r\n>;\r\n\r\ninterface Props {\r\n  navigation: DevicePageColorPickerNavigationProp;\r\n  route: devicePageColorPickerRouteProp;\r\n}\r\n\r\nexport const DeviceModesScreen = ({\r\n  navigation,\r\n  route: {\r\n    params: { device },\r\n  },\r\n}: Props) => {\r\n  const log = new logger(\"device modes screen \" + device.Mac)\r\n  return (\r\n    <SafeAreaView style={{ display: \"flex\", flex: 1, backgroundColor: \"#ffffff\" }}>\r\n      <View /* Sec1: header - back arrow */\r\n        style={{ height: 60, justifyContent: \"center\", width: 200 }}>\r\n        <NewRectButtonWithChildren\r\n          style={{\r\n            //backgroundColor: \"red\",\r\n            flexDirection: \"row\",\r\n            marginLeft: 20\r\n          }}\r\n          onPress={() => {\r\n            navigation.replace(\"DeviceColorPicker\", {\r\n              device\r\n            });\r\n          }}\r\n        >\r\n          <Ionicons name=\"ios-arrow-back\" size={30} color=\"#555\" />\r\n          <Text\r\n            style={{\r\n              color: \"#555\",\r\n              fontSize: 22,\r\n              fontWeight: \"bold\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            Color Picker\r\n            </Text>\r\n        </NewRectButtonWithChildren>\r\n      </View>\r\n      <View /* Sec1: Modes container */\r\n        style={{}}>\r\n        <Text\r\n          style={{\r\n            color: \"#555\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            marginTop: 10,\r\n            marginLeft: 20,\r\n            marginBottom: 5,\r\n          }}\r\n        >\r\n          Modes\r\n          </Text>\r\n        <Text\r\n          style={{\r\n            color: \"#aaa\",\r\n            fontSize: 14,\r\n            marginLeft: 20,\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          Choose from multiple modes\r\n          </Text>\r\n        <View style={{ marginLeft: 10, marginTop: 10 }}>\r\n          <Modes device={device} />\r\n        </View>\r\n      </View>\r\n      <View /* Sec1: Timer container */\r\n        style={{\r\n          flex: 1,\r\n          backgroundColor: \"#fff\",\r\n          marginTop: 20,\r\n          borderRadius: 10,\r\n          paddingBottom: 15,\r\n        }}\r\n      >\r\n        <Text\r\n          style={{\r\n            color: \"#555\",\r\n            fontSize: 20,\r\n            fontWeight: \"bold\",\r\n            marginLeft: 20,\r\n            marginTop: 10,\r\n            marginBottom: 5,\r\n          }}\r\n        >\r\n          Timer\r\n          </Text>\r\n        <Text\r\n          style={{\r\n            color: \"#aaa\",\r\n            fontSize: 14,\r\n            marginLeft: 20,\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          From dawn to dusk, schedule your day with HUElite\r\n          </Text>\r\n        <Timer device={device} log={new logger(\"TIMER COMP\", log)} />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Text, TextInput, View } from \"react-native\";\r\nimport { NewRectButtonWithChildren } from \"../buttons/RectButtonCustom\";\r\nimport STYLES from \"../styles\";\r\n\r\ninterface props {\r\n    placeholder?: string\r\n    heading?: string\r\n    highlightColor?: string\r\n    onPress?: () => void\r\n    value?: string\r\n    setValue: React.Dispatch<React.SetStateAction<string>>\r\n}\r\nexport default ({ placeholder, heading, highlightColor = \"#aaaaaa\", onPress = () => { }, setValue, value }: props) => {\r\n\r\n    return (\r\n        <View>\r\n            <Text style={[STYLES.H7, STYLES.tertiaryTextColor, { marginLeft: 10, marginBottom: 3 }]}>{heading}</Text>\r\n            <View style={{\r\n                borderColor: highlightColor,\r\n                width: \"100%\",\r\n                borderWidth: 0.5,\r\n                minHeight: 50,\r\n                borderRadius: 10,\r\n                paddingHorizontal: 10,\r\n                justifyContent: \"center\"\r\n            }}>\r\n                <TextInput style={[STYLES.H6]}\r\n                    value={value}\r\n                    placeholder={placeholder}\r\n                    onChangeText={text => { setValue(text) }}\r\n                />\r\n            </View>\r\n        </View>\r\n    )\r\n}","import React, { useRef, useState } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport TextField from \"../../../../common/text/textField\"\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { devicePageStackParamList } from \"../..\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { NewRectButtonWithChildren } from \"../../../../common/buttons/RectButtonCustom\";\r\nimport STYLES from \"../../../../common/styles\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { _appState } from \"../../../../../redux/rootReducer\";\r\nimport UNIVERSALS from \"../../../../../@universals\";\r\nimport { appOperator } from \"../../../../../util/app.operator\";\r\nimport Alert from \"../../../../common/Alert\";\r\n\r\ntype navigation_t = StackNavigationProp<\r\n  devicePageStackParamList,\r\n  \"DeviceColorPicker\"\r\n>;\r\ntype routeProp_t = RouteProp<\r\n  devicePageStackParamList,\r\n  \"DeviceColorPicker\"\r\n>;\r\n\r\n\r\n\r\ninterface Props {\r\n  navigation: navigation_t;\r\n  route: routeProp_t;\r\n}\r\nexport const DeviceSettingScreen = ({\r\n  navigation,\r\n  route: {\r\n    params: { device },\r\n  },\r\n}: Props) => {\r\n  const [name, setName] = useState(\"\")\r\n  const deviceFromStore = useSelector((state: _appState) => state.deviceReducer.deviceList.find(item => item.Mac == device.Mac))\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1, backgroundColor: \"#fff\" }}>\r\n      <TextField\r\n        heading=\"Device Name\"\r\n        placeholder={deviceFromStore?.deviceName}\r\n        setValue={setName}\r\n        value={name}\r\n      />\r\n      <NewRectButtonWithChildren style={{\r\n        height: 50,\r\n        width: 250,\r\n        borderRadius: 25,\r\n        backgroundColor: \"#fff\",\r\n        alignSelf: \"center\",\r\n        marginTop: 200,\r\n        borderWidth: 0.5,\r\n        justifyContent: \"center\",\r\n        borderColor: name.length >= 6 ? \"#00ff00\" : \"#777777\"\r\n      }}\r\n        onPress={() => {\r\n          if (name.length >= 6) {\r\n            //console.log(\"old device is \" + JSON.stringify(device, null, 2))\r\n            let tempDevice: UNIVERSALS.GLOBALS.DEVICE_t = { ...device, deviceName: name }\r\n            //console.log(\"new device is \" + JSON.stringify(tempDevice, null, 2))\r\n            appOperator.device({ cmd: \"ADD_UPDATE_DEVICES\", newDevices: [tempDevice] })\r\n            setName(\"\")\r\n          } else if (name.length) {\r\n            Alert.alert(\"DEVICE NAME TOO SHORT\", \"Device name must be atleast 6 characters log. consider using suffix or prefix with \" + name)\r\n          }\r\n        }}\r\n      >\r\n        <Text style={[STYLES.H5, {\r\n          textAlign: \"center\",\r\n          color: name.length >= 6 ? \"#00ff00\" : \"#777777\"\r\n        }]}>CHANGE DEVICE NAME</Text>\r\n      </NewRectButtonWithChildren>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n","import { RouteProp } from \"@react-navigation/native\";\r\nimport { CardStyleInterpolators, createStackNavigator, StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React from \"react\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\nimport { MainRouterStackParamList } from \"../../../routers/MainRouter\";\r\nimport { DeviceColorPickerScreen } from \"./devicePageNavigator/colorPickerScreen\";\r\nimport { DeviceModesScreen } from \"./devicePageNavigator/modesScreen\";\r\nimport { DeviceSettingScreen } from \"./devicePageNavigator/settingScreen\";\r\n\r\nexport type devicePageStackParamList = {\r\n  DeviceColorPicker: {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t;\r\n  };\r\n  DeviceModesScreen: {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t;\r\n  };\r\n  DeviceSettingScreen: {\r\n    device: UNIVERSALS.GLOBALS.DEVICE_t\r\n  };\r\n};\r\n\r\ntype devicePageRouteProp = RouteProp<MainRouterStackParamList, \"devicePage\">;\r\n\r\ntype DevicePageNavigationProp = StackNavigationProp<\r\n  MainRouterStackParamList,\r\n  \"devicePage\"\r\n>;\r\n\r\ninterface Props {\r\n  navigation: DevicePageNavigationProp;\r\n  route: devicePageRouteProp;\r\n}\r\nconst Stack = createStackNavigator<devicePageStackParamList>();\r\n\r\nconst Component = ({\r\n  navigation,\r\n  route: {\r\n    params: { device },\r\n  },\r\n}: Props) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"DeviceColorPicker\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n        cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS,\r\n        cardStyle: {\r\n          backgroundColor: \"#fff\",\r\n          opacity: 1,\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"DeviceColorPicker\"\r\n        component={DeviceColorPickerScreen}\r\n        initialParams={{ device }}\r\n      />\r\n\r\n      <Stack.Screen\r\n        name=\"DeviceModesScreen\"\r\n        component={DeviceModesScreen}\r\n        initialParams={{ device }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"DeviceSettingScreen\"\r\n        component={DeviceSettingScreen}\r\n        initialParams={{ device }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default Component\r\n","import { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Image, Text, View } from \"react-native\";\r\nimport { MainRouterStackParamList } from \"../../../routers/MainRouter\";\r\nimport { getWebSocket } from \"../../../services/backGroundServices/webSocket\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { NewRectButton } from \"../../common/buttons/RectButtonCustom\";\r\nimport Modal from \"../../common/modal\";\r\nimport styles from \"../../common/styles\";\r\n\r\n\r\nconst slides = [\r\n  {\r\n    heading: \"Playful\",\r\n    subText: \"choose with different preset and scenes, and play with million of colors\",\r\n    assest: require(\"../../../../assets/images/onboarding/OB_3.png\"),\r\n  },\r\n  {\r\n    heading: \"Voice Control\",\r\n    subText: \"Now pair your light with voice assistants like alexa, Google Assistant to enjoy effortless and voice controls\",\r\n    assest: require(\"../../../../assets/images/onboarding/OB_4.png\"),\r\n  },\r\n  {\r\n    heading: \"Control from Anywhere\",\r\n    subText: \"Control your appliances from anywhere in the world with HUElite Smart App\",\r\n    assest: require(\"../../../../assets/images/onboarding/OB_2.png\"),\r\n  }\r\n  ,\r\n  {\r\n    heading: \"Ease of Use\",\r\n    subText: \"Full control weather you have singler or multiple lights, from one screen. Just pair your device and you are good to go\",\r\n    assest: require(\"../../../../assets/images/onboarding/OB_1.png\"),\r\n  }\r\n]\r\n\r\ntype navigationProp_t = StackNavigationProp<MainRouterStackParamList, \"onboarding\">;\r\ntype routeProp_t = RouteProp<MainRouterStackParamList, \"onboarding\">;\r\n\r\ninterface props_t {\r\n  navigation: navigationProp_t;\r\n  route: routeProp_t;\r\n}\r\n\r\nexport const WelcomeScreen = ({ navigation }: props_t) => {\r\n  const [slideIndex, setSlideIndex] = useState(0)\r\n\r\n  return (\r\n    <View style={{\r\n      backgroundColor: styles.themeColors.primary,\r\n      flex: 1,\r\n      display: \"flex\"\r\n    }}>\r\n      <Header slideIndex={slideIndex} />\r\n      <Footer\r\n        onNext={() => {\r\n          if (slideIndex < slides.length - 1)\r\n            setSlideIndex(slideIndex + 1)\r\n          else if (slideIndex == slides.length - 1)\r\n            navigation.replace(\"user\")\r\n        }}\r\n        onSkip={() => {\r\n          navigation.replace(\"user\")\r\n        }} />\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst Header = ({ slideIndex }: { slideIndex: number }) => {\r\n  const [ws, setWs] = useState<WebSocket | undefined | null>(undefined)\r\n\r\n  useEffect(() => {\r\n    if (!ws) {\r\n      try {\r\n        (async () => {\r\n          let _log = new logger(\"SOCKET TEST\")\r\n          _log?.print(\"socket test loop\")\r\n          const ws = await getWebSocket({\r\n            ipAddr: \"192.168.4.1\",\r\n            onMsg: (msg) => {\r\n              _log?.print(\"msg>>>> \" + msg)\r\n            },\r\n            onErr: (err) => {\r\n              _log?.print(\"err>>>>\" + JSON.stringify(err))\r\n            },\r\n            onOpen: () => {\r\n              _log?.print(\"Open>>>  new socket opened\")\r\n            },\r\n            onClose: () => {\r\n              _log?.print(\">>>>>>>>>>>> socket closed\")\r\n            }\r\n          })\r\n          if (ws)\r\n            _log?.print(\"we have socket\")\r\n          else\r\n            _log?.print(\"socket cannot be opened\")\r\n        })()\r\n      } catch (error) {\r\n        console.log(\"error on try catch block >>> \" + JSON.stringify(error))\r\n      }\r\n    }\r\n    return () => { }\r\n  }, [ws])\r\n\r\n  return (\r\n    <View style={{\r\n      backgroundColor: \"white\",\r\n      flex: 1,\r\n      borderBottomLeftRadius: 25,\r\n      borderBottomRightRadius: 25,\r\n      overflow: \"hidden\"\r\n    }}>\r\n      <View /** header slides container */\r\n        style={{\r\n          flex: 1,\r\n          height: \"100%\",\r\n          width: slides.length + \"00%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: \"-\" + slideIndex + \"00%\"\r\n        }}>\r\n        {slides.map((item, index) => {\r\n          return (\r\n            <View\r\n              key={index}\r\n              style={{\r\n                paddingHorizontal: 20,\r\n                flex: 1,\r\n                //backgroundColor: \"red\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\"\r\n              }}>\r\n              <Image\r\n                source={item.assest}\r\n                style={{\r\n                  height: 300,\r\n                  width: 250\r\n                }} />\r\n              <Text style={[\r\n                styles.H1,\r\n                {\r\n                  textAlign: \"center\",\r\n                  marginTop: 50\r\n                }]}>{item.heading}</Text>\r\n              <Text style={[styles.H7, { textAlign: \"center\", marginTop: 20 }]}>{item.subText}</Text>\r\n            </View>\r\n          )\r\n        })}\r\n      </View >\r\n      <View /** slider dots container */\r\n        style={{\r\n          position: \"absolute\",\r\n          width: \"100%\",\r\n          bottom: 15,\r\n          left: 0,\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          //backgroundColor: \"green\"\r\n        }}>\r\n        {slides.map((item, index) => {\r\n          return (\r\n            <View\r\n              key={index}\r\n              style={{\r\n                height: 8,\r\n                width: slideIndex == index ? 15 : 8,\r\n                borderRadius: 10,\r\n                backgroundColor: styles.themeColors.primary,\r\n                marginHorizontal: 5\r\n              }} />\r\n          )\r\n        })}\r\n      </View>\r\n    </View >\r\n\r\n  )\r\n}\r\n\r\nconst Footer = ({ onNext, onSkip }: { onNext: () => void, onSkip: () => void }) => {\r\n\r\n  return (\r\n    <View style={{\r\n      //backgroundColor: 'red',\r\n      backgroundColor: styles.themeColors.primary,\r\n      justifyContent: \"flex-end\",\r\n    }}>\r\n      <View\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n          paddingHorizontal: 20\r\n        }}>\r\n        <NewRectButton\r\n          text=\"Skip\"\r\n          textStyle={[styles.H6, { color: \"white\" }]}\r\n          buttonStyle={{\r\n            width: 100,\r\n            alignSelf: \"center\",\r\n            backgroundColor: \"transparent\",\r\n            shadowOpacity: 0,\r\n            elevation: 0\r\n          }}\r\n          onPress={onSkip} />\r\n        <NewRectButton\r\n          text=\"Next\"\r\n          textStyle={[styles.H6, { color: \"white\" }]}\r\n          buttonStyle={{\r\n            width: 100,\r\n            alignSelf: \"center\",\r\n            backgroundColor: \"transparent\",\r\n            shadowOpacity: 0,\r\n            elevation: 0\r\n          }}\r\n          onPress={onNext} />\r\n      </View>\r\n    </View >\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Dimensions, Image, Linking, Platform, StyleSheet, Text, View } from \"react-native\";\r\nimport { PairingStackParamList } from \"..\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport LottieView from \"lottie-react-native\";\r\n//native imports\r\nimport api from \"../../../../services/api\";\r\nimport { logFun, logger } from \"../../../../util/logger\";\r\nimport { getCurrentTimeInSeconds } from \"expo-auth-session/build/TokenRequest\";\r\nimport Alert from \"../../../common/Alert\";\r\nimport { NewRectButtonWithChildren } from \"../../../common/buttons/RectButtonCustom\";\r\n\r\n\r\n\r\ntype pairingScreen1NavigationProp = StackNavigationProp<PairingStackParamList, \"PairScreen_1\">;\r\ntype pairingScreen1RouteProp = RouteProp<PairingStackParamList, \"PairScreen_1\">;\r\n\r\ninterface Props {\r\n  navigation: pairingScreen1NavigationProp;\r\n  route: pairingScreen1RouteProp;\r\n}\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nexport const PairingConnectorScreen1 = ({ navigation }: Props) => {\r\n  const log = new logger(\"PAIRING_SCREEN_1\")\r\n  const [groupName, setGroupName] = useState(\"BedRoom\");\r\n  const dispatch = useDispatch();\r\n  let _animation = null;\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      const res = await api.deviceAPI.authAPI.v1({ IP: \"192.168.4.1\", log: log ? new logger(\"auth api\", log) : undefined })\r\n      console.log(\"<><><> \" + JSON.stringify(res))\r\n      if (res.RES?.Mac) {\r\n        clearInterval(interval)\r\n        console.log(\"navigating to next screen - screen-2\")\r\n        navigation.replace(\"PairScreen_2\", { newDevice: { ...res.RES, localTimeStamp: getCurrentTimeInSeconds(), IP: \"192.168.4.1\", hsv: { h: 0, s: 100, v: 100 }, deviceName: \"\", timers: [] } });\r\n      }\r\n\r\n    }, 3000);\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <SafeAreaView style={{ flex: 1 }}>\r\n      <View style={styles.container}>\r\n        <View\r\n          style={{\r\n            marginVertical: 20,\r\n            backgroundColor: \"#55f\",\r\n            height: 0.25 * height,\r\n            width: \"95%\",\r\n            alignSelf: \"center\",\r\n            borderRadius: 25,\r\n            justifyContent: \"space-evenly\",\r\n            alignItems: \"center\",\r\n            overflow: \"hidden\",\r\n          }}\r\n        >\r\n\r\n          <Image\r\n            style={{\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              opacity: 0.8,\r\n            }}\r\n            source={require(\"../../../../../assets/images/testIMG.jpg\")}\r\n          />\r\n          <NewRectButtonWithChildren\r\n            style={{\r\n              height: 40,\r\n              minWidth: 160,\r\n              paddingHorizontal: 1,\r\n              borderRadius: 25,\r\n              overflow: \"hidden\",\r\n              justifyContent: \"center\",\r\n              position: \"absolute\",\r\n              bottom: 20,\r\n              right: 20,\r\n            }}\r\n            onPress={async () => {\r\n              const supported = await Linking.canOpenURL(\"App-Prefs:root=WIFI\");\r\n              if (supported) {\r\n                await Linking.openURL(\"App-Prefs:root=WIFI\");\r\n              } else {\r\n                Alert.alert(\r\n                  `Jump not Supported`,\r\n                  \"You might want to try switching the HUElite app in background and then go to WiFi Settings \"\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                height: 40,\r\n                minWidth: 160,\r\n                paddingHorizontal: 1,\r\n                position: \"absolute\",\r\n                backgroundColor: \"#fff\",\r\n                borderRadius: 25,\r\n                opacity: 0.7,\r\n                top: 0,\r\n                left: 0,\r\n              }}\r\n            ></View>\r\n            <Text\r\n              style={{ fontSize: 12, fontWeight: \"bold\", alignSelf: \"center\" }}\r\n            >\r\n              Go to Wi-Fi Settings\r\n            </Text>\r\n          </NewRectButtonWithChildren>\r\n        </View>\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: \"#fff\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {Platform.OS != \"web\" && <LottieView\r\n            ref={(animation) => {\r\n              _animation = animation;\r\n            }}/* \r\n            style={{\r\n              width: width * 0.8,\r\n              height: width * 0.8,\r\n              backgroundColor: \"#fff\",\r\n            }} */\r\n            source={require(\"../../../../../assets/lottie/scanning.json\")}\r\n            autoPlay\r\n            loop={true}\r\n          //progress={progress}\r\n          />}\r\n        </View>\r\n        {/*/// Text Section */}\r\n        <View\r\n          style={{ backgroundColor: \"#fff\", justifyContent: \"center\", marginTop: 20, marginBottom: 10 }}\r\n        >\r\n          <Text\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              textAlign: \"center\",\r\n              color: \"#555\",\r\n              paddingHorizontal: 30,\r\n            }}\r\n          >\r\n            Conect to HUElite Device to proceed\r\n          </Text>\r\n          <Text\r\n            style={{\r\n              color: \"#333\",\r\n              paddingHorizontal: 30,\r\n              marginTop: 10,\r\n              textAlign: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            To proceed with pairing you must connect your phone to HUElite\r\n            Device WiFi network. Go-to your\r\n            phone Wi-Fi Settings and connect to Wi-Fi naming{\" \"}\r\n            <Text style={{ fontWeight: \"bold\" }}>HUE_XXXX_XX:XX</Text>\r\n            {\" \"}with password{\" \"}\r\n            <Text style={{ fontWeight: \"bold\" }}>12345678</Text>\r\n          </Text>\r\n        </View>\r\n        {/* ///goBACK button */}\r\n        <View\r\n          style={{\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {navigation.canGoBack() && <NewRectButtonWithChildren\r\n            style={{\r\n              overflow: \"hidden\",\r\n              alignSelf: \"flex-start\",\r\n              marginBottom: 10,\r\n            }}\r\n            onPress={() => {\r\n              /* TODO_CUR dispatch(\r\n                newDeviceSagaAction(\r\n                  Object.assign({}, dummyDevice, {\r\n                    SSID: \"Homelink1\",\r\n                    wifiPass: \"Ioplmkjnb@1\",\r\n                    Mac: \"ED:98:FF:46:FF\",\r\n                    groupName: groupName.length > 3 ? groupName : null,\r\n                  })\r\n                )\r\n              ); */\r\n              navigation.pop();\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                fontSize: 17,\r\n                fontWeight: \"bold\",\r\n                alignSelf: \"flex-start\",\r\n                marginLeft: 20,\r\n                color: \"#66F\",\r\n              }}\r\n            >\r\n              Go Back\r\n            </Text>\r\n          </NewRectButtonWithChildren>}\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { logger } from \"../../util/logger\";\r\nimport api from \"../api\";\r\n\r\ninterface userScanApiHelper_props {\r\n  timeout?: number\r\n  autoStart?: boolean\r\n  log?: logger\r\n}\r\ntype userScanApiHelper_t = (props: userScanApiHelper_props) => [\r\n  api.deviceAPI.scanAPI.ScanApiReturnType | undefined,\r\n  number,\r\n  boolean,\r\n  boolean, () => Promise<void>\r\n]\r\nconst useScanApiHook: userScanApiHelper_t = ({ timeout = 0, autoStart, log }) => {\r\n  const [data, setData] = useState<api.deviceAPI.scanAPI.ScanApiReturnType | undefined>(undefined);\r\n  const [status, setStatus] = useState(-4);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  log?.print(\"---------------\")\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      log?.print(\"data is -- \" + JSON.stringify(data))\r\n      if (data.RES?.status == -2) {\r\n        log?.print(\"wifi started scanning, wait for 5 sec\")\r\n        setTimeout(() => {\r\n          load()\r\n        }, 3000);\r\n      }\r\n      else if (data.RES?.status == -1) {\r\n        log?.print(\"wifi currently scanning, wait for few sec and try again\")\r\n        setTimeout(() => {\r\n          load()\r\n        }, 3000);\r\n      }\r\n    }\r\n    if (autoStart && !data) {\r\n      load()\r\n    }\r\n    return () => { }\r\n  }, [data])\r\n\r\n  async function load() {\r\n    log?.print(\"hitting scan api request\")\r\n    const res = await api.deviceAPI.scanAPI.v1({ IP: \"192.168.4.1\", log: log ? new logger(\"pair-API\", log) : undefined })\r\n    log?.print(\"RES - scanAPI \" + JSON.stringify(res, null, 2))\r\n    setData(res)\r\n  }\r\n\r\n  return [data, status, loading, error, load];\r\n};\r\n\r\n\r\nexport default useScanApiHook","import { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React, { useState } from \"react\";\r\nimport { Dimensions, FlatList, StyleSheet, Text, Vibration, View } from \"react-native\";\r\nimport { RectButton, TextInput } from \"react-native-gesture-handler\";\r\nimport Animated, { add, call, divide, interpolate, round, useCode } from \"react-native-reanimated\";\r\nimport { onScrollEvent, useValue } from \"react-native-redash\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { PairingStackParamList } from \"..\";\r\nimport { reduxStore } from \"../../../../redux\";\r\nimport useScanApiHook from \"../../../../services/webApi/webHooks\";\r\nimport { appOperator } from \"../../../../util/app.operator\";\r\nimport { getCurrentTimeStampInSeconds } from \"../../../../util/DateTimeUtil\";\r\nimport { logger } from \"../../../../util/logger\";\r\nimport Alert from \"../../../common/Alert\"\r\nimport { NewRectButtonWithChildren } from \"../../../common/buttons/RectButtonCustom\";\r\n\r\nconst deviceNames = [\r\n  \"Bedroom Light\",\r\n  \"Kitchen\",\r\n  \"Garden Light\",\r\n  \"Balcony\",\r\n  \"SwimmingPool\",\r\n];\r\n\r\ntype pairingScreen2NavigationProp = StackNavigationProp<\r\n  PairingStackParamList,\r\n  \"PairScreen_2\"\r\n>;\r\n\r\ntype pairingScreen2RouteProp = RouteProp<PairingStackParamList, \"PairScreen_2\">;\r\n\r\ninterface Props {\r\n  navigation: pairingScreen2NavigationProp;\r\n  route: pairingScreen2RouteProp;\r\n}\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nexport const PairingConnectorScreen2 = ({\r\n  navigation,\r\n  route: {\r\n    params: { newDevice },\r\n  },\r\n}: Props) => {\r\n  const log = new logger(\"PAIRING_SCREEN_2\");\r\n  const [data, status, loading, error, load] = useScanApiHook({\r\n    log: log ? new logger(\"scan API Hook\", log) : undefined,\r\n    autoStart: true\r\n  });\r\n  const debug = true;\r\n  const [Wifi, setWifi] = useState(\"\");\r\n  const [deviceName, setDeviceName] = useState(\"\");\r\n  const y = useValue(0);\r\n  const onScroll = onScrollEvent({ y });\r\n  const selected = round(divide(y, 60));\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useCode(\r\n    () => [\r\n      call([selected], ([selected]) => {\r\n        if (data?.RES?.networks && data?.RES?.networks[selected]) {\r\n          if (Wifi != data?.RES?.networks[selected].ssid) {\r\n            log.print(\"-- \" + data?.RES?.networks[selected].ssid);\r\n            setWifi(data?.RES?.networks[selected].ssid);\r\n            Vibration.vibrate(25);\r\n          }\r\n        }\r\n      }),\r\n    ],\r\n    [selected]\r\n  );\r\n\r\n  const validateNewDeviceData = (opID: \"PAIR\" | \"SKIP\") => {\r\n\r\n    const validateDeviceName = () => {\r\n      if (deviceName.length < 6) {\r\n        Alert.alert(\r\n          \"DEVICE NAME LENGTH !!\",\r\n          \"device length must be atleast 6 characters\",\r\n          [\r\n            {\r\n              text: \"Got it\",\r\n              //onPress: () => console.log(\"Cancel Pressed\"),\r\n              style: \"cancel\",\r\n            },\r\n          ],\r\n          { cancelable: false }\r\n        );\r\n        return false\r\n      } else if ((() => {\r\n        let sameDeviceNameFound = false\r\n        reduxStore.store.getState().deviceReducer.deviceList.forEach((__device) => {\r\n          if (__device.deviceName == deviceName)\r\n            sameDeviceNameFound = true\r\n        })\r\n        return sameDeviceNameFound\r\n      })()) {\r\n        log.print(\"validating device name >>\")\r\n        Alert.alert(\r\n          \"DUPLICATE DEVICE NAME\",\r\n          \"device name  \\\"\" + deviceName + \"\\\", try another name for this device\",\r\n          [\r\n            {\r\n              text: \"Got it\",\r\n              //onPress: () => console.log(\"Cancel Pressed\"),\r\n              style: \"cancel\",\r\n            },\r\n          ],\r\n          { cancelable: false }\r\n        );\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n\r\n    const validateWiFi = () => {\r\n      if (!Wifi.length) {\r\n        Alert.alert(\r\n          \"No WiFi Selected !!\",\r\n          \"Select a network to pair with, else continue without pairing at the bottom of the screen.\",\r\n          [\r\n            {\r\n              text: \"Got it\",\r\n              style: \"cancel\",\r\n            },\r\n          ],\r\n          { cancelable: false }\r\n        );\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n\r\n    switch (opID) {\r\n      case \"PAIR\":\r\n        return validateDeviceName() && validateWiFi()\r\n        break;\r\n\r\n      case \"SKIP\":\r\n        return validateDeviceName()\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  interface onInteraction_t {\r\n    opID: \"PAIR\" | \"SKIP\"\r\n  }\r\n  const onInteraction = async ({ opID }: onInteraction_t) => {\r\n    switch (opID) {\r\n      case \"PAIR\":\r\n        log.print(\"now pairing\")\r\n        if (validateNewDeviceData(\"PAIR\")) {\r\n          navigation.replace(\"PairScreen_3\", { newDevice: { ...newDevice, ssid: Wifi, deviceName } });\r\n        }\r\n        break;\r\n\r\n      case \"SKIP\":\r\n        log.print('SKIP LOGIN')\r\n        if (validateNewDeviceData(\"SKIP\")) {\r\n          log.print(\"validation passed, adding new device without pairing\")\r\n          const newContainerList = appOperator.device({ cmd: \"ADD_UPDATE_DEVICES\", newDevices: [{ ...newDevice, deviceName, localTimeStamp: getCurrentTimeStampInSeconds() }] })\r\n          console.log(\"updated conatiner list >> >> \" + JSON.stringify(newContainerList))\r\n          //@ts-ignore\r\n          navigation.replace(\"dashboard\");\r\n          navigation.reset({\r\n            index: 0,\r\n            //@ts-ignore\r\n            routes: [{ name: \"dashboard\" }],\r\n          });\r\n        }\r\n        else {\r\n          log.print(\"validation failed\")\r\n\r\n        }\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.conatiner}>\r\n\r\n      {/* Sec: HeaderContainer */}\r\n      <View style={styles.headerContainer} >\r\n        <Text style={{ fontSize: 12, fontWeight: \"bold\", color: \"white\" }}>\r\n          Enter Device Name\r\n          </Text>\r\n        <TextInput\r\n          style={styles.headerContainerText}\r\n          placeholderTextColor=\"#ccc\"\r\n          onChangeText={(text) => {\r\n            setDeviceName(text);\r\n          }}\r\n          placeholder=\"Light 1\"\r\n          value={deviceName}\r\n        />\r\n        <View\r\n          style={{\r\n            alignItems: \"flex-start\",\r\n            marginTop: 30,\r\n          }}\r\n        >\r\n          <FlatList\r\n            data={deviceNames}\r\n            numColumns={3}\r\n            renderItem={({ item }) => (\r\n              <NewRectButtonWithChildren\r\n                onPress={() => {\r\n                  setDeviceName(item);\r\n                  //Vibration.vibrate(50); //TODO move this to useCode/call function for better feedback\r\n                }}\r\n                style={{ alignSelf: \"flex-start\", padding: 5 }}\r\n              >\r\n                <View\r\n                  style={{\r\n                    borderWidth: 0.5,\r\n                    borderColor: \"#fff\",\r\n                    borderRadius: 18,\r\n                    paddingHorizontal: 10,\r\n                    paddingVertical: 5,\r\n                    backgroundColor: deviceName == item ? \"#fff\" : \"#55f\",\r\n                  }}\r\n                >\r\n                  <Text\r\n                    style={{\r\n                      fontSize: 12,\r\n                      color: deviceName == item ? \"#55f\" : \"#fff\",\r\n                    }}\r\n                  >\r\n                    {item}\r\n                  </Text>\r\n                </View>\r\n              </NewRectButtonWithChildren>\r\n            )}\r\n            keyExtractor={(item, index) => index.toString()}\r\n          />\r\n        </View>\r\n      </View>\r\n      {/* Sec: SSID Selector */}\r\n      <View style={styles.ssidSelectorContainer}  >\r\n        <Text style={{ fontSize: 15, fontWeight: \"bold\", color: \"#555\" }}>\r\n          Select your Home Wi-Fi Network\r\n          </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: 12,\r\n            color: \"#555\",\r\n            paddingTop: 10,\r\n            paddingHorizontal: 30,\r\n            textAlign: \"center\",\r\n          }}\r\n        >\r\n          Make sure the WiFi is on and your device is in range of the network.\r\n          If you don't find your network in list than refresh from below\r\n          </Text>\r\n        {/* Sec: Wifi refresh button */}\r\n        <NewRectButtonWithChildren\r\n          style={styles.refreshButton}\r\n          onPress={() => {\r\n            log.print(\"refresh wifi scan api response\")\r\n            load()\r\n            Vibration.vibrate(50);\r\n          }}\r\n        >\r\n          <View style={styles.refreshButton_textCon} >\r\n            <Text style={{ fontSize: 10, fontWeight: \"bold\", color: \"#55f\" }}>\r\n              Refresh WiFi Scan\r\n              </Text>\r\n          </View>\r\n        </NewRectButtonWithChildren>\r\n        {/* Sec: Selector */}\r\n        <View style={styles.selectorList} >\r\n          <Animated.ScrollView\r\n            style={{\r\n              overflow: \"hidden\",\r\n            }}\r\n            snapToInterval={60}\r\n            decelerationRate=\"fast\"\r\n            showsVerticalScrollIndicator={false}\r\n            bounces={false}\r\n            scrollEventThrottle={1}\r\n            {...{ onScroll }}\r\n          >\r\n            {data?.RES?.networks && data?.RES?.networks?.length > 0 &&\r\n              data?.RES?.networks.map((item, index) => {\r\n                const positionY = add(y, -index * 60);\r\n                const opacity = interpolate(positionY, {\r\n                  inputRange: [-60, 0, 60],\r\n                  outputRange: [0.5, 1, 0.5],\r\n                });\r\n                const scale = interpolate(positionY, {\r\n                  inputRange: [-60, 0, 60],\r\n                  outputRange: [0.7, 1, 0.7],\r\n                });\r\n\r\n                return (\r\n                  <View key={index}>\r\n                    {index == 0 && <View style={{ height: 60 }}></View>}\r\n                    <View\r\n                      style={{\r\n                        height: 60,\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <Animated.Text\r\n                        style={{\r\n                          fontSize: 20,\r\n                          color: \"#555\",\r\n                          fontWeight: \"bold\",\r\n                          opacity: opacity,\r\n                          transform: [{ scaleX: scale }, { scaleY: scale }],\r\n                        }}\r\n                      >\r\n                        {item.ssid}\r\n                      </Animated.Text>\r\n                    </View>\r\n                    {(data?.RES?.networks && index == data?.RES?.networks?.length - 1) && (\r\n                      <View style={{ height: 60 }}></View>\r\n                    )}\r\n                  </View>\r\n                );\r\n              })}\r\n\r\n            {(data?.RES?.networks && data?.RES?.networks.length == 0) && (\r\n              <View\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  height: 180,\r\n                }}\r\n              >\r\n                <Text\r\n                  style={{\r\n                    fontWeight: \"bold\",\r\n                    fontSize: 30,\r\n                    color: \"#555\",\r\n                    textAlign: \"center\",\r\n                  }}\r\n                >\r\n                  Scanning...\r\n                  </Text>\r\n              </View>\r\n            )}\r\n          </Animated.ScrollView>\r\n        </View>\r\n      </View>\r\n      {debug && <Text style={{}}>{Wifi}</Text>}\r\n      {/* Sec: Bottom buttons */}\r\n      <NewRectButtonWithChildren\r\n        style={[styles.pairButton, { opacity: deviceName.length > 6 ? 1 : 0.9, }]}\r\n        onPress={() => onInteraction({ opID: \"PAIR\" })}>\r\n        <Text style={{ fontSize: 20, fontWeight: \"bold\", color: \"#fff\" }}>\r\n          Pair Device\r\n          </Text>\r\n      </NewRectButtonWithChildren>\r\n      <NewRectButtonWithChildren\r\n        style={styles.skipButton}\r\n        onPress={() => onInteraction({ opID: \"SKIP\" })}\r\n      >\r\n        <Text style={{ fontSize: 12, fontWeight: \"bold\", color: \"#555\" }}>\r\n          Continue without Wi-Fi Pairing\r\n          </Text>\r\n      </NewRectButtonWithChildren>\r\n    </SafeAreaView >\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  conatiner: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n\r\n  },\r\n  ssidSelectorContainer: {\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n    flex: 1,\r\n    paddingTop: 50,\r\n  },\r\n  refreshButton: {\r\n    borderRadius: 15,\r\n    overflow: \"hidden\",\r\n    marginVertical: 15,\r\n  },\r\n  refreshButton_textCon: {\r\n    backgroundColor: \"#fff\",\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 8,\r\n    borderRadius: 15,\r\n    borderColor: \"#55f\",\r\n    borderWidth: 1,\r\n  },\r\n  selectorList: {\r\n    width: \"100%\",\r\n    height: 180,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n    marginTop: 10,\r\n  },\r\n  headerContainer: {\r\n    paddingHorizontal: 15,\r\n    backgroundColor: \"#55f\",\r\n    width: \"95%\",\r\n    minHeight: 200,\r\n    marginVertical: 20,\r\n    borderRadius: 25,\r\n    paddingVertical: 20,\r\n  },\r\n  headerContainerText: {\r\n    height: 50,\r\n    width: \"100%\",\r\n    borderColor: \"#ffffff\",\r\n    color: \"#ffffff\",\r\n    /*  borderWidth: 1,\r\n    borderRadius: 25, */\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"left\",\r\n    alignSelf: \"center\",\r\n    marginTop: 5,\r\n    borderBottomWidth: 0.5,\r\n  },\r\n  skipButton: {\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n    backgroundColor: \"#fff\",\r\n    paddingVertical: 10,\r\n    width: width * 0.8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 25,\r\n  },\r\n  pairButton: {\r\n    backgroundColor: \"#55f\",\r\n    height: 50,\r\n    width: width * 0.8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 25,\r\n  }\r\n})\r\n","import { useEffect, useState } from \"react\";\r\nimport UNIVERSALS from \"../../@universals\";\r\nimport { logger } from \"../../util/logger\";\r\nimport api from \"../api\";\r\nimport { deviceSocketHBResponse, getWebSocket } from \"../backGroundServices/webSocket\";\r\n\r\nexport enum pairing_state_e {\r\n  IDLE,\r\n  PAIR_READY,\r\n  PAIR_REQUEST_SUCCESS_N_CONNECTING,\r\n  PAIR_UNKNOWN_ERROR,\r\n  PAIR_SUCCESS,\r\n  PAIR_WRONG_PASSWORD,\r\n  PAIR_NO_SSID,\r\n  SAVE_CONFIG_SUCCESS,\r\n  SAVE_CONFIG_ERROR\r\n}\r\ntype connectProps = (ssid: string, pass: string) => Promise<void>;\r\n\r\ninterface Props {\r\n  (_props: {\r\n    IP: string,\r\n    _onMsg: (msg: string) => void,\r\n    log?: logger\r\n  })\r\n    : [\r\n      api.deviceAPI.pairAPI.pairApiReturnType | undefined,\r\n      WebSocket | undefined,\r\n      connectProps,\r\n      pairing_state_e,\r\n      () => Promise<void>\r\n    ];\r\n}\r\nconst usePairApiHook: Props = ({ IP: IP_ADD, _onMsg, log }) => {\r\n  const [data, setData] = useState<api.deviceAPI.pairAPI.pairApiReturnType | undefined>(undefined);\r\n  const [pairStatus, setPairStatus] = useState<pairing_state_e>(pairing_state_e.IDLE);\r\n  const [socket, setSocket] = useState<WebSocket | undefined>(undefined);\r\n\r\n\r\n  useEffect(() => {\r\n    log?.print(\"--------*\")\r\n    let interval: any\r\n    if (!socket) {\r\n      log?.print(\"--------getSocket() interval start\")\r\n      interval = setInterval(() => {\r\n        log?.print(\"--\")\r\n        getSocket()\r\n      }, 5500)\r\n    }\r\n    else {\r\n      log?.print(\"--------getSocket() interval end\")\r\n      log?.print(\"we have socket\")\r\n      clearInterval(interval)\r\n    }\r\n    return () => {\r\n      clearInterval(interval)\r\n    }\r\n  }, [socket])\r\n\r\n  const pair: connectProps = async (ssid, pass) => {\r\n    log?.print(\"Pair Credentials are \" + ssid + \" -- \" + pass);\r\n    if (pairStatus == pairing_state_e.PAIR_READY\r\n      || pairStatus == pairing_state_e.PAIR_WRONG_PASSWORD\r\n      || pairStatus == pairing_state_e.PAIR_UNKNOWN_ERROR\r\n      || pairStatus == pairing_state_e.PAIR_NO_SSID) {\r\n      const result = await api.deviceAPI.pairAPI.v1({ IP: \"192.168.4.1\", ssid, pass, log: log ? new logger(\"pair api\", log) : undefined })\r\n      log?.print(\"-result- RES - \" + JSON.stringify(result))\r\n      if (result.RES?.Mac)\r\n        setPairStatus(pairing_state_e.PAIR_REQUEST_SUCCESS_N_CONNECTING)\r\n      setData(result)\r\n    }\r\n  }\r\n\r\n  const hitSaveAPI = async () => {\r\n    const res = await api.deviceAPI.saveWiFiConfigAPI.v1({ IP: \"192.168.4.1\" })\r\n    log?.print(\"save api RES - \" + JSON.stringify(res))\r\n    if (res.RES == \"RES-551\") {\r\n      setPairStatus(pairing_state_e.SAVE_CONFIG_SUCCESS)\r\n    } else {\r\n      setPairStatus(pairing_state_e.SAVE_CONFIG_ERROR)\r\n    }\r\n  }\r\n\r\n\r\n  const getSocket = async () => {\r\n    if (!socket) {\r\n      log?.print(\"getting socket\");\r\n      let result = await api.deviceAPI.authAPI.v1({ IP: \"192.168.4.1\" })\r\n      if (result?.RES?.Mac) {\r\n        log?.print(\"Auth success :: \" + result.RES.Mac);\r\n      } else {\r\n        setSocket(undefined)\r\n      }\r\n      try {\r\n        const _socket = await getWebSocket({\r\n          ipAddr: IP_ADD,\r\n          onOpen: () => {\r\n            log?.print(\"WS Connected for Devie >> \" + IP_ADD);\r\n            setPairStatus(pairing_state_e.PAIR_READY)\r\n            if (_socket)\r\n              setSocket(_socket)\r\n          },\r\n          onMsg: (msg) => {\r\n            try {\r\n              const data: api.deviceAPI.pairAPI.pairApiRes_i | undefined = msg\r\n                ? JSON.parse(msg)\r\n                : undefined;\r\n              log?.print(\"SOCKET MSG >> \" + JSON.stringify(data))\r\n              if (data?.WIFI_STATE == UNIVERSALS.GLOBALS.deviceApi._DEVICE_WIFI_STATE_e.DEVICE_WL_CONNECT_FAILED && pairStatus != pairing_state_e.PAIR_WRONG_PASSWORD)\r\n                setPairStatus(pairing_state_e.PAIR_WRONG_PASSWORD)\r\n              else if (data?.WIFI_STATE == UNIVERSALS.GLOBALS.deviceApi._DEVICE_WIFI_STATE_e.DEVICE_WL_NO_SSID_AVAIL)\r\n                setPairStatus(pairing_state_e.PAIR_NO_SSID)\r\n              else if (data?.WIFI_STATE == UNIVERSALS.GLOBALS.deviceApi._DEVICE_WIFI_STATE_e.DEVICE_WL_CONNECTED && data.IP?.length) {\r\n                setPairStatus(pairing_state_e.PAIR_SUCCESS)\r\n                setData({ RES: data })\r\n              }\r\n            } catch (error) {\r\n              log?.print(error);\r\n            }\r\n            _onMsg(msg);\r\n          },\r\n          onErr: (e) => {\r\n            log?.print(\"Ws Error - \" + JSON.stringify(e));\r\n            setPairStatus(pairing_state_e.IDLE)\r\n            setSocket(undefined);\r\n          },\r\n          onClose: () => {\r\n            setPairStatus(pairing_state_e.IDLE)\r\n            setSocket(undefined);\r\n          },\r\n        });\r\n      } catch (e) {\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return [\r\n    data,\r\n    socket,\r\n    pair,\r\n    pairStatus,\r\n    hitSaveAPI\r\n  ];\r\n};\r\n\r\nexport default usePairApiHook;\r\n","import { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport LottieView from \"lottie-react-native\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Dimensions, FlatList, StyleSheet, Text, Vibration, View } from \"react-native\";\r\nimport { RectButton, TextInput } from \"react-native-gesture-handler\";\r\nimport Animated, { Value } from \"react-native-reanimated\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n//native imports\r\nimport { PairingStackParamList } from \"..\";\r\nimport usePairApiHook, { pairing_state_e } from \"../../../../services/webApi/pairAPI_Hook\";\r\nimport { appOperator } from \"../../../../util/app.operator\";\r\nimport { getCurrentTimeStampInSeconds } from \"../../../../util/DateTimeUtil\";\r\nimport { logger } from \"../../../../util/logger\";\r\nimport { NewRectButtonWithChildren } from \"../../../common/buttons/RectButtonCustom\";\r\n\r\nconst groupNames = [\"Bedroom\", \"Kitchen\", \"Garden\", \"Drawing Lamps\", \"Stairs\"];\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\n\r\ntype NavigationProp = StackNavigationProp<\r\n  PairingStackParamList,\r\n  \"PairScreen_3\"\r\n>;\r\n\r\ntype _RouteProp = RouteProp<PairingStackParamList, \"PairScreen_3\">;\r\n\r\n\r\ninterface Props {\r\n  navigation: NavigationProp;\r\n  route: _RouteProp;\r\n}\r\n\r\nexport const PairingConnectorScreen3 = ({\r\n  navigation,\r\n  route: {\r\n    params: { newDevice },\r\n  },\r\n}: Props) => {\r\n  const log = new logger(\"PAIRING_SCREEN_3\")\r\n  const [pass, setPass] = useState(\"Ioplmkjnb@1\");\r\n  const [groupName, setGroupName] = useState(\"\");\r\n  let _animation = null;\r\n  const [data, socket, pair, pairStatus, hitSaveAPI] = usePairApiHook({\r\n    IP: \"192.168.4.1\",\r\n    _onMsg: (msg) => {\r\n      //console.log(\"socket msg on Pairing Screen---- \" + JSON.stringify(msg));\r\n    },\r\n    log: log ? new logger(\"pairing hook\", log) : undefined\r\n  });\r\n\r\n  const validateData = () => {\r\n    if (!newDevice.ssid)\r\n      return false\r\n    return true\r\n  }\r\n\r\n  interface onInteraction_t { opID: \"PAIR\" | \"BACK\" | \"SAVE_CONF\" }\r\n  const onInteraction = ({ opID }: onInteraction_t) => {\r\n    switch (opID) {\r\n      case \"BACK\":\r\n        navigation.replace(\"PairScreen_2\", { newDevice });\r\n        break;\r\n\r\n      case \"PAIR\":\r\n        if (validateData())\r\n          //@ts-ignore varified _newDevice.ssid_ in _validateData_\r\n          pair(newDevice.ssid, pass);\r\n        break;\r\n\r\n      case \"SAVE_CONF\":\r\n        hitSaveAPI()\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (pairStatus == pairing_state_e.PAIR_READY)\r\n      Vibration.vibrate(250)\r\n    else if (pairStatus == pairing_state_e.PAIR_SUCCESS) {\r\n      console.log(\"paired successfully \" + JSON.stringify(data, null, 2));\r\n    } else if (pairStatus == pairing_state_e.SAVE_CONFIG_SUCCESS) {\r\n      (async () => {\r\n        if (data?.RES?.IP) {\r\n          appOperator.device({ cmd: \"ADD_UPDATE_DEVICES\", newDevices: [{ ...newDevice, IP: data.RES.IP, ssid: newDevice.ssid, localTimeStamp: getCurrentTimeStampInSeconds() }] })\r\n          //@ts-ignore\r\n          navigation.replace(\"dashboard\")\r\n          //@ts-ignore\r\n          navigation.reset({ index: 0, routes: [{ name: \"dashboard\" }], })\r\n        } else {\r\n        }\r\n      })()\r\n    } else if (pairStatus == pairing_state_e.SAVE_CONFIG_ERROR) { }\r\n    return () => { }\r\n  }, [pairStatus, data])\r\n\r\n\r\n  return (\r\n    <SafeAreaView style={styles.\r\n      container}>\r\n      {/* Sec: HEADER */}\r\n      <Animated.View\r\n        style={[\r\n          styles.card,\r\n          {\r\n            backgroundColor: \"#55f\",\r\n            width: width * 0.95,\r\n            minHeight: 150,\r\n            alignSelf: \"center\",\r\n            marginVertical: 20,\r\n            borderRadius: 25,\r\n          },\r\n        ]}\r\n      >\r\n        {/* Sec: BLOCK => WiFi Password */}\r\n        <View\r\n          style={{\r\n            paddingHorizontal: 15,\r\n            width: \"100%\",\r\n            borderRadius: 25,\r\n            paddingVertical: 20,\r\n          }}\r\n        >\r\n          <Text style={{ fontSize: 12, fontWeight: \"bold\", color: \"white\" }}>\r\n            Enter WiFi Password\r\n          </Text>\r\n          <TextInput\r\n            style={{\r\n              height: 50,\r\n              width: \"100%\",\r\n              borderColor: \"#ffffff\",\r\n              color: \"#ffffff\",\r\n              fontSize: 18,\r\n              fontWeight: \"bold\",\r\n              textAlign: \"left\",\r\n              alignSelf: \"center\",\r\n              marginTop: 5,\r\n              borderBottomWidth: 0.5,\r\n            }}\r\n            secureTextEntry={true}\r\n            placeholderTextColor=\"#ccc\"\r\n            onChangeText={(text) => {\r\n              setPass(text);\r\n            }}\r\n            placeholder=\"***\"\r\n            value={pass}\r\n          />\r\n        </View>\r\n        {/* Sec: BLOCK => Group Selector */}\r\n        <View\r\n          style={{\r\n            paddingHorizontal: 15,\r\n            width: \"100%\",\r\n            borderRadius: 25,\r\n            paddingVertical: 10,\r\n          }}\r\n        >\r\n          {/* Sec: groupName TextInput */}\r\n          <TextInput\r\n            style={{\r\n              height: 50,\r\n              width: \"100%\",\r\n              borderColor: \"#ffffff\",\r\n              color: \"#ffffff\",\r\n              fontSize: 14,\r\n              textAlign: \"left\",\r\n              alignSelf: \"center\",\r\n              marginTop: 5,\r\n              borderBottomWidth: 0.5,\r\n            }}\r\n            placeholderTextColor=\"#ddd\"\r\n            onChangeText={(text) => {\r\n              setGroupName(text);\r\n            }}\r\n            placeholder=\"Create new group\"\r\n            value={groupName}\r\n          />\r\n          <Text\r\n            style={{\r\n              fontSize: 12,\r\n              fontWeight: \"bold\",\r\n              color: \"white\",\r\n              marginTop: 10,\r\n            }}\r\n          >\r\n            Suggested group names\r\n          </Text>\r\n          {/* Sec: CONTAINER => groupName suggestion blocks */}\r\n          <View\r\n            style={{\r\n              alignItems: \"flex-start\",\r\n              paddingVertical: 10,\r\n            }}\r\n          >\r\n            {/* Sec: groupName suggestion blocks */}\r\n            <FlatList\r\n              horizontal\r\n              data={groupNames}\r\n              //numColumns={6}\r\n              renderItem={({ item }) => (\r\n                <NewRectButtonWithChildren\r\n                  onPress={() => {\r\n                    setGroupName(item);\r\n                    Vibration.vibrate(50);\r\n                  }}\r\n                  style={{ alignSelf: \"flex-start\", padding: 5 }}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      borderWidth: 0.5,\r\n                      borderColor: \"#fff\",\r\n                      borderRadius: 18,\r\n                      paddingHorizontal: 10,\r\n                      paddingVertical: 5,\r\n                    }}\r\n                  >\r\n                    <Text style={{ fontSize: 12, color: \"#fff\" }}>{item}</Text>\r\n                  </View>\r\n                </NewRectButtonWithChildren>\r\n              )}\r\n              keyExtractor={(item, index) => index.toString()}\r\n            />\r\n          </View>\r\n        </View>\r\n      </Animated.View>\r\n\r\n      {/* Sec: LOTTIE Section */}\r\n      <View\r\n        style={{ width: \"100%\", backgroundColor: \"#fff\", alignItems: \"center\" }}\r\n      >\r\n        <LottieView\r\n          ref={(animation) => {\r\n            _animation = animation;\r\n          }}\r\n          style={{\r\n            width: width * 0.8,\r\n            height: width * 0.8,\r\n            backgroundColor: \"#fff\",\r\n          }}\r\n          source={pairStatus == pairing_state_e.PAIR_SUCCESS ? require(\"../../../../../assets/lottie/success.json\")\r\n            : pairStatus == pairing_state_e.PAIR_REQUEST_SUCCESS_N_CONNECTING ? require(\"../../../../../assets/lottie/progress.json\")\r\n              : (pairStatus == pairing_state_e.SAVE_CONFIG_ERROR || pairStatus == pairing_state_e.PAIR_NO_SSID || pairStatus == pairing_state_e.PAIR_UNKNOWN_ERROR || pairStatus == pairing_state_e.PAIR_WRONG_PASSWORD) ? require(\"../../../../../assets/lottie/error.json\")\r\n                : require(\"../../../../../assets/lottie/progress.json\")\r\n          }\r\n          autoPlay\r\n          loop={pairStatus == pairing_state_e.PAIR_SUCCESS ? false : true}\r\n        //progress={progress}\r\n        />\r\n      </View>\r\n\r\n      {/* Sec: Bottom buttons */}\r\n      <View\r\n        style={[\r\n          styles.Button1_Container,\r\n          {\r\n            backgroundColor: \"#fff\",\r\n            overflow: \"hidden\",\r\n            alignSelf: \"center\",\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            alignItems: \"center\",\r\n          },\r\n        ]}\r\n      >\r\n        {/* Sec: BUTTON => Pair || Next || Cancel || Finish */}\r\n        <NewRectButtonWithChildren\r\n          activeOpacity={0.3}\r\n          style={styles.Button1}\r\n          onPress={() => {\r\n            if (pairStatus == pairing_state_e.PAIR_SUCCESS)\r\n              onInteraction({ opID: \"SAVE_CONF\" })\r\n            else\r\n              onInteraction({ opID: \"PAIR\" })\r\n          }}\r\n        >\r\n          <Animated.Text\r\n            style={[\r\n              styles.Button1_Text,\r\n              {\r\n                color: \"#fff\",\r\n                fontSize: 20,\r\n              },\r\n            ]}\r\n          >\r\n            {pairStatus == pairing_state_e.IDLE ? \"Waiting for Connection\"\r\n              : pairStatus == pairing_state_e.PAIR_READY ? \"START PAIRING\"\r\n                : pairStatus == pairing_state_e.PAIR_REQUEST_SUCCESS_N_CONNECTING ? \"Connecting...\"\r\n                  : pairStatus == pairing_state_e.PAIR_SUCCESS ? \"Go To Dashboard\"\r\n                    : pairStatus == pairing_state_e.PAIR_NO_SSID ? \"no ssid, Try Again\"\r\n                      : pairStatus == pairing_state_e.PAIR_UNKNOWN_ERROR ? \"Try Again\"\r\n                        : pairStatus == pairing_state_e.PAIR_WRONG_PASSWORD ? \"wrong, pass, Try Again\"\r\n                          : \"\"}\r\n          </Animated.Text>\r\n        </NewRectButtonWithChildren>\r\n\r\n        {/* Sec: goBack() */}\r\n        <NewRectButtonWithChildren\r\n          style={styles.goBackButton}\r\n          onPress={() => onInteraction({ opID: \"BACK\" })}\r\n        >\r\n          <Text style={{ fontSize: 12, fontWeight: \"bold\", color: \"#555\" }}>\r\n            Change WiFi or goBack()\r\n          </Text>\r\n        </NewRectButtonWithChildren>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: \"#ffffff\",\r\n    flex: 1,\r\n  },\r\n  card: {},\r\n  BGLayer_layout1: {\r\n    flex: 0.8,\r\n    backgroundColor: \"#5555ff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  BGLayer_layout1_TextInput: {\r\n    height: 50,\r\n    width: width * 0.8,\r\n    borderColor: \"#ffffff\",\r\n    color: \"#ffffff\",\r\n    borderWidth: 1,\r\n    borderRadius: 25,\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    marginBottom: 40,\r\n    alignSelf: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  BGLayer_layout2: {\r\n    flex: 1.2,\r\n    backgroundColor: \"white\",\r\n    borderTopLeftRadius: 50,\r\n    borderTopRightRadius: 50,\r\n  },\r\n  Button1_Container: {\r\n    justifyContent: \"center\",\r\n    overflow: \"hidden\",\r\n  },\r\n  Button1: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#55f\",\r\n    height: 50,\r\n    borderRadius: 25,\r\n    width: width * 0.9,\r\n  },\r\n  Button1_Text: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  Button2_Container: {\r\n    position: \"absolute\",\r\n    alignSelf: \"center\",\r\n    overflow: \"hidden\",\r\n    width: width * 0.8,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n  Button2: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flex: 1,\r\n  },\r\n\r\n  Button2_Text: {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  goBackButton: {\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n    backgroundColor: \"#fff\",\r\n    paddingVertical: 10,\r\n    width: width * 0.8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 25,\r\n  }\r\n});","import React from \"react\";\r\nimport { Dimensions, StyleSheet } from \"react-native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n//native imports\r\nimport { deviceType } from \"../../../util/dummyData/DummyData\";\r\nimport { PairingConnectorScreen1 } from \"./PairingConnectorScreen1\";\r\nimport { PairingConnectorScreen2 } from \"./PairingConnectorScreen2\";\r\nimport { PairingConnectorScreen3 } from \"./PairingConnectorScreen3\";\r\nimport UNIVERSALS from \"../../../@universals\";\r\n\r\nexport type PairingStackParamList = {\r\n  PairScreen_1: {};\r\n  PairScreen_2: { newDevice: UNIVERSALS.GLOBALS.DEVICE_t };\r\n  PairScreen_3: { newDevice: UNIVERSALS.GLOBALS.DEVICE_t };\r\n};\r\nconst Stack = createStackNavigator<PairingStackParamList>();\r\n\r\ninterface Props { }\r\n\r\nexport const pairingRouter = ({ }: Props) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName=\"PairScreen_1\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"PairScreen_1\" component={PairingConnectorScreen1} />\r\n      <Stack.Screen name=\"PairScreen_2\" component={PairingConnectorScreen2} />\r\n      <Stack.Screen name=\"PairScreen_3\" component={PairingConnectorScreen3} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//TODO_CUR  pairing with new data setup ","import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TextInput } from 'react-native';\r\nimport { appOperator } from '../../../../util/app.operator';\r\nimport { logger } from '../../../../util/logger';\r\nimport Alert from '../../../common/Alert';\r\nimport { NewRectButtonWithChildren } from '../../../common/buttons/RectButtonCustom';\r\nimport { navigationProp } from \"../index\";\r\n\r\n\r\ninterface LoginHeader_t {\r\n    navigation: navigationProp\r\n    setHeaderView?: React.Dispatch<React.SetStateAction<string>>,\r\n    log?: logger\r\n}\r\nexport const LoginHeader = ({ navigation, setHeaderView, log }: LoginHeader_t) => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n\r\n\r\n    return (\r\n        <View style={styles.headerContainer}>\r\n            <View /* Sec2: Form Container  */\r\n                style={{ flex: 1, width: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                <Text /* Sec3: Form Heading  */\r\n                    style={{\r\n                        fontSize: 20,\r\n                        fontWeight: \"bold\",\r\n                        textAlign: \"center\",\r\n                        color: \"#555\",\r\n                        paddingHorizontal: 20,\r\n                    }}\r\n                >\r\n                    Let's get started\r\n                </Text>\r\n                <Text /* Sec3: Form Description text  */\r\n                    style={{\r\n                        fontSize: 15,\r\n                        color: \"#555\",\r\n                        textAlign: \"center\",\r\n                        paddingVertical: 20,\r\n                        paddingHorizontal: 30,\r\n                    }}\r\n                >\r\n                    Your HUElite Account is required to setup your devices with Alexa and\r\n                    Google Assistant\r\n                </Text>\r\n                <TextInput /* Sec3: Email Input  */\r\n                    style={{\r\n                        minHeight: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n\r\n                    onChangeText={(text) => {\r\n                        setEmail(text);\r\n                    }}\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    autoCompleteType=\"email\"\r\n                />\r\n\r\n                <TextInput /* Sec3: Password Input  */\r\n                    style={{\r\n                        minHeight: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n                    onChangeText={(text) => {\r\n                        setPassword(text);\r\n                    }}\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    secureTextEntry={true}\r\n                />\r\n\r\n                <NewRectButtonWithChildren /* Sec3: Login Button */\r\n                    onPress={async () => {\r\n                        log?.print(\"login button pressed\")\r\n                        appOperator.user({\r\n                            cmd: \"LOGIN\",\r\n                            email,\r\n                            password,\r\n                            onLoginFailed: ({ ERR }) => {\r\n                                Alert.alert(ERR?.errCode ? ERR?.errCode : \"UNKNOWN ERROR\", ERR?.errMsg ? ERR.errMsg : \"This could be due to technical error at backend, you can report the issue our forum. We regret for the inconveniences\")\r\n                            },\r\n                            onLoginSuccess: () => {\r\n                                log?.print(\"login successful>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\")\r\n                                navigation.replace(\"dashboard\")\r\n                            },\r\n                            log: log ? new logger(\"user login operator\", log) : undefined\r\n                        })\r\n                    }}\r\n                    style={{\r\n                        backgroundColor: \"#5555ff\",\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderRadius: 25,\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        elevation: 5,\r\n                    }}>\r\n                    <Text style={{ color: \"white\", fontSize: 18, fontWeight: \"bold\" }}> Login</Text>\r\n                </NewRectButtonWithChildren>\r\n            </View>\r\n            <NewRectButtonWithChildren /* Sec2: Signup Form switch button */\r\n                style={{ marginTop: \"5%\" }}\r\n                onPress={() => {\r\n                    log?.print(\"Signup button pressed\");\r\n                    setHeaderView ? setHeaderView(\"SIGNUP\") : {}\r\n                }}\r\n            >\r\n                <Text style={{\r\n                    textAlign: \"center\"\r\n                }}> Don't have an account?<Text style={{\r\n                    color: \"#5555ff\",\r\n                    fontWeight: \"bold\"\r\n                }}>{\" \"}SignUp</Text></Text>\r\n            </NewRectButtonWithChildren>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        marginVertical: \"2%\"\r\n    },\r\n});","import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TextInput } from 'react-native';\r\nimport UNIVERSALS from '../../../../@universals';\r\nimport { appOperator } from '../../../../util/app.operator';\r\nimport { logger } from '../../../../util/logger';\r\nimport { NewRectButtonWithChildren } from '../../../common/buttons/RectButtonCustom';\r\nimport { navigationProp } from \"../index\";\r\nimport Alert from \"../../../common/Alert\"\r\n\r\n\r\n/**\r\n * \r\n * //TODO email validation before signing up\r\n * //TODO retype pass must match before procceding\r\n */\r\ninterface SignUpHeader_t {\r\n    navigation: navigationProp\r\n    setHeaderView?: React.Dispatch<React.SetStateAction<string>>\r\n    log?: logger\r\n}\r\nexport const SignUpHeader = ({ navigation, setHeaderView, log }: SignUpHeader_t) => {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n    return (\r\n        <View style={styles.headerContainer}>\r\n            <View style={{ flex: 1, width: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 20,\r\n                        fontWeight: \"bold\",\r\n                        textAlign: \"center\",\r\n                        color: \"#555\",\r\n                        paddingHorizontal: 20,\r\n                    }}\r\n                >\r\n                    Welcome to HUElite Community\r\n                </Text>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 15,\r\n                        color: \"#555\",\r\n                        textAlign: \"center\",\r\n                        paddingVertical: 20,\r\n                        paddingHorizontal: 30,\r\n                    }}\r\n                >\r\n                    Your HUElite Account will be used to link and setup your devices with Alexa and\r\n                    Google Assistant\r\n        </Text>\r\n                <TextInput\r\n                    style={{\r\n                        minHeight: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n\r\n                    onChangeText={(text) => {\r\n                        setEmail(text);\r\n                    }}\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    autoCompleteType=\"email\"\r\n                />\r\n\r\n                <TextInput\r\n                    style={{\r\n                        minHeight: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n\r\n                    onChangeText={(text) => {\r\n                        setUserName(text);\r\n                    }}\r\n                    placeholder=\"Username\"\r\n                    value={userName}\r\n                //autoCompleteType=\"username\"\r\n                />\r\n\r\n                <TextInput\r\n                    style={{\r\n                        minHeight: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n                    onChangeText={(text) => {\r\n                        setPassword(text);\r\n                    }}\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    secureTextEntry={true}\r\n                />\r\n                <NewRectButtonWithChildren /* Sec3: SignUp button */\r\n                    style={{\r\n                        backgroundColor: \"#5555ff\",\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderRadius: 25,\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        elevation: 5,\r\n                    }}\r\n                    onPress={() => {\r\n                        appOperator.user({\r\n                            cmd: \"SIGNUP\",\r\n                            userName,\r\n                            password,\r\n                            email,\r\n                            onSignupFailed: ({ ERR }) => {\r\n                                Alert.alert(ERR?.errCode ? ERR?.errCode : \"UNKNOWN ERROR\", ERR?.errMsg ? ERR.errMsg : \"This could be due to technical error at backend, you can report the issue our forum. We regret for the inconveniences\")\r\n                            },\r\n                            onSignupSuccess: (user) => {\r\n                                navigation.replace(\"dashboard\")\r\n                            },\r\n                            log: log ? new logger(\"user signup operator\", log) : undefined\r\n                        })\r\n                    }}\r\n                >\r\n                    <Text style={{ color: \"white\", fontSize: 18, fontWeight: \"bold\" }}>\r\n                        Signup\r\n                 </Text>\r\n                </NewRectButtonWithChildren>\r\n            </View>\r\n            <NewRectButtonWithChildren\r\n                style={{ marginTop: \"5%\" }}\r\n                onPress={() => {\r\n                    console.log(\"Signup\");\r\n                    setHeaderView ? setHeaderView(\"LOGIN\") : {}\r\n                }}\r\n            >\r\n                <Text style={{ textAlign: \"center\" }}>\r\n                    Already have an account?\r\n                    <Text style={{ color: \"#5555ff\", fontWeight: \"bold\" }}>{\" \"}Login</Text>\r\n                </Text>\r\n            </NewRectButtonWithChildren>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        marginVertical: \"2%\"\r\n    },\r\n});\r\n\r\n\r\n//TODO adjust headers for smaller screen sizes","import React, { useState } from 'react'\r\nimport { View, Text, StyleSheet, TextInput } from 'react-native'\r\nimport { useSelector } from 'react-redux';\r\nimport UNIVERSALS from '../../../../@universals';\r\nimport { _appState } from '../../../../redux/rootReducer';\r\nimport { appOperator } from '../../../../util/app.operator';\r\nimport { logger } from '../../../../util/logger';\r\nimport { navigationProp } from \"../index\"\r\nimport Alert from \"../../../common/Alert\"\r\nimport { NewRectButtonWithChildren } from '../../../common/buttons/RectButtonCustom';\r\n\r\n\r\n/**\r\n * \r\n * //TODO email validation before signing up\r\n * //TODO retype pass must match before procceding\r\n */\r\ninterface SignUpHeader_t {\r\n    navigation: navigationProp\r\n    setHeaderView?: React.Dispatch<React.SetStateAction<string>>\r\n    user?: UNIVERSALS.GLOBALS.USER_t\r\n    log?: logger\r\n}\r\nexport const UserUpdateForm = ({ navigation, setHeaderView, user, log }: SignUpHeader_t) => {\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n    return (\r\n        <View style={styles.headerContainer}>\r\n            <View style={{ flex: 1, width: \"100%\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 20,\r\n                        fontWeight: \"bold\",\r\n                        textAlign: \"center\",\r\n                        color: \"#555\",\r\n                        paddingHorizontal: 20,\r\n                    }}\r\n                >\r\n                    Welcome to HUElite Community\r\n                </Text>\r\n                <Text\r\n                    style={{\r\n                        fontSize: 15,\r\n                        color: \"#555\",\r\n                        textAlign: \"center\",\r\n                        paddingVertical: 20,\r\n                        paddingHorizontal: 30,\r\n                    }}\r\n                >\r\n                    Your HUElite Account will be used to link and setup your devices with Alexa and\r\n                    Google Assistant\r\n        </Text>\r\n                <TextInput /* Sec3: userName textField */\r\n                    style={{\r\n                        minHeight: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n\r\n                    onChangeText={(text) => {\r\n                        setUserName(text);\r\n                    }}\r\n                    placeholder=\"Username\"\r\n                    value={userName}\r\n                    autoCompleteType=\"username\"\r\n                />\r\n\r\n                <TextInput /* Sec3: oldPassword textField */\r\n                    style={{\r\n                        minHeight: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n\r\n                    onChangeText={(text) => {\r\n                        setOldPassword(text);\r\n                    }}\r\n                    placeholder=\"old-password\"\r\n                    value={oldPassword}\r\n                    autoCompleteType=\"password\"\r\n                />\r\n\r\n                <TextInput /* Sec3: newPassword textField */\r\n                    style={{\r\n                        minHeight: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderColor: \"#5555ff7f\",\r\n                        color: \"#5555ff\",\r\n                        borderWidth: 1,\r\n                        borderRadius: 25,\r\n                        textAlign: \"center\",\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                    }}\r\n                    onChangeText={(text) => {\r\n                        setPassword(text);\r\n                    }}\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    secureTextEntry={true}\r\n                />\r\n                <NewRectButtonWithChildren /* Sec3: SignUp button */\r\n                    style={{\r\n                        backgroundColor: \"#5555ff\",\r\n                        height: 50,\r\n                        width: \"80%\",\r\n                        maxWidth: 400,\r\n                        borderRadius: 25,\r\n                        alignSelf: \"center\",\r\n                        marginTop: \"10%\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        elevation: 5,\r\n                    }}\r\n                    onPress={() => {\r\n                        if (user?.id) {\r\n                            appOperator.user({\r\n                                cmd: \"UPDATE\",\r\n                                id: user?.id ? user.id : \"\",\r\n                                userName,\r\n                                password,\r\n                                onUpdateFailed: ({ ERR }) => {\r\n                                    Alert.alert(ERR?.errCode ? ERR?.errCode : \"UNKNOWN ERROR\", ERR?.errMsg ? ERR.errMsg : \"This could be due to technical error at backend, you can report the issue our forum. We regret for the inconveniences\")\r\n                                },\r\n                                onUpdateSuccess: () => {\r\n\r\n                                },\r\n                                log: log ? new logger(\"user update operator\", log) : undefined\r\n                            })\r\n                        } else {\r\n                            Alert.alert(\"CANNOT UPDATE USER DATA\", \"the associated user with this account might be temprory or it could be due to techniocal error.  you can find more abou related issues on HUElite forum\")\r\n                        }\r\n                    }}\r\n                >\r\n                    <Text style={{ color: \"white\", fontSize: 18, fontWeight: \"bold\" }}>\r\n                        Update\r\n                 </Text>\r\n                </NewRectButtonWithChildren>\r\n            </View>\r\n            <NewRectButtonWithChildren\r\n                style={{ marginTop: \"5%\" }}\r\n                onPress={() => {\r\n                    console.log(\"Signup\");\r\n                    setHeaderView ? setHeaderView(\"USER\") : {}\r\n                }}\r\n            >\r\n                <Text style={{ textAlign: \"center\" }}>\r\n                    Everythings is in place\r\n                    <Text style={{ color: \"#5555ff\", fontWeight: \"bold\" }}>{\" \"}discard changes</Text>\r\n                </Text>\r\n            </NewRectButtonWithChildren>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        marginVertical: \"2%\"\r\n    },\r\n});\r\n\r\n\r\n//TODO adjust headers for smaller screen sizes","import { FontAwesome } from '@expo/vector-icons';\r\nimport React, { useState } from \"react\";\r\nimport { Dimensions, Platform, StyleSheet, Text, View } from \"react-native\";\r\nimport { RectButton } from \"react-native-gesture-handler\";\r\nimport { reduxStore } from '../../../../redux';\r\nimport { appOperator } from '../../../../util/app.operator';\r\nimport { getCurrentTimeStampInSeconds } from '../../../../util/DateTimeUtil';\r\nimport { logger } from \"../../../../util/logger\";\r\nimport { NewRectButtonWithChildren } from '../../../common/buttons/RectButtonCustom';\r\nimport { navigationProp } from \"../index\";\r\nimport { LoginHeader } from \"./loginForm\";\r\nimport { SignUpHeader } from \"./signupForm\";\r\nimport { UserUpdateForm } from \"./userUpdateForm\";\r\n\r\ninterface Props {\r\n  navigation: navigationProp\r\n  userPageView?: string\r\n  setUserPageView?: React.Dispatch<React.SetStateAction<string>>\r\n  log?: logger\r\n}\r\nconst { width, height } = Dimensions.get(\"window\");\r\n/** \r\n * @description userFormsContainer responsible for switching view between login/signup/update\r\n * \r\n * ## [login/Signup](https://app.clickup.com/t/1vf7hj)\r\n *    ##### LoginFunctionality\r\n *      - [x] login and switch view to userProfile upon success\r\n *      - [x] login and show errors as Alert on error\r\n *    ##### signupFunctionality\r\n *      - [x] signup and switch view to userProfile\r\n *      - [x] show Alert for error upon signup failed\r\n *    ##### updateUser Info\r\n *      - [ ] show userUpdateErorrs\r\n *      - [ ] switch view to user profile upon successful update\r\n */\r\nexport default ({ navigation, userPageView, setUserPageView, log }: Props) => {\r\n\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        display: \"flex\",\r\n        flex: 1,\r\n        backgroundColor: \"#5555ff\",\r\n      }}>\r\n      <View\r\n        style={{\r\n          flex: 1,\r\n          borderBottomLeftRadius: width * 0.08,\r\n          borderBottomRightRadius: width * 0.08,\r\n          backgroundColor: \"white\",\r\n        }} /* Sec2: Body Section for login/signup/update form*/ >\r\n        {userPageView == \"SIGNUP\"\r\n          ? <SignUpHeader\r\n            setHeaderView={setUserPageView}\r\n            navigation={navigation}\r\n            log={log ? new logger(\"signup header\", log) : undefined} />\r\n          : userPageView == \"UPDATE\"\r\n            ? <UserUpdateForm\r\n              setHeaderView={setUserPageView}\r\n              navigation={navigation}\r\n              log={log ? new logger(\"login header\", log) : undefined} />\r\n            : userPageView == \"LOGIN\"\r\n              ? <LoginHeader\r\n                setHeaderView={setUserPageView}\r\n                navigation={navigation}\r\n                log={log ? new logger(\"login header\", log) : undefined} />\r\n              : (<View></View>)}\r\n      </View>\r\n      <View style={{\r\n        zIndex: 10,\r\n        backgroundColor: \"#5555ff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }} /* Sec2: Footer */ >\r\n        {false && <View /* Sec3: Login buttons */\r\n          style={{ display: \"flex\", flexDirection: \"row\", width: 120, alignItems: \"center\", justifyContent: \"center\" }}>\r\n          {false && <NewRectButtonWithChildren\r\n            onPress={() => {\r\n              /* - [ ] googleLogin() */\r\n            }}>\r\n            <View style={{ borderColor: \"#fff\", borderWidth: 0.5, height: 50, width: 50, borderRadius: 30, justifyContent: \"center\", alignItems: \"center\" }}>\r\n              <FontAwesome name=\"google\" size={30} color=\"#fff\" />\r\n            </View>\r\n          </NewRectButtonWithChildren>}\r\n          <NewRectButtonWithChildren\r\n            onPress={() => {\r\n              appOperator.user({\r\n                cmd: \"FB_LOGIN\",\r\n                onFbLoginSuccess: (user) => {\r\n                  navigation.replace(\"dashboard\")\r\n                },\r\n                log: log ? new logger(\"fb login\", log) : undefined\r\n              })\r\n            }}>\r\n            <View style={{ borderColor: \"#fff\", borderWidth: 0.5, height: 50, width: 50, borderRadius: 30, justifyContent: \"center\", alignItems: \"center\" }}>\r\n              <FontAwesome name=\"facebook-f\" size={30} color=\"#fff\" />\r\n            </View>\r\n          </NewRectButtonWithChildren>\r\n        </View>}\r\n        <NewRectButtonWithChildren /* Sec3: Skip Login */\r\n          style={{\r\n            //paddingVertical: 10,\r\n            backgroundColor: \"transparent\"\r\n          }}\r\n          onPress={() => {\r\n            appOperator.userStoreUpdateFunction({\r\n              user: {\r\n                email: \"testmail@huelite.in\",\r\n                localTimeStamp: getCurrentTimeStampInSeconds()\r\n              }\r\n            })\r\n            navigation.navigate(\"dashboard\")\r\n          }}\r\n        >\r\n          <Text style={{ textAlign: \"center\", color: \"white\", }} >\r\n            Skip for now!{\" \"}\r\n            <Text style={{ fontSize: 15, fontWeight: \"bold\" }}>\r\n              Will do Later\r\n            </Text>\r\n          </Text>\r\n        </NewRectButtonWithChildren>\r\n      </View>\r\n    </View >\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {},\r\n  contentView: {},\r\n  footer: {},\r\n});\r\n","import { AntDesign, FontAwesome, Ionicons } from '@expo/vector-icons';\r\nimport { RouteProp } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Image, StyleProp, Text, TextInput, View, ViewStyle } from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { appState } from \"../../../redux\";\r\nimport { MainRouterStackParamList } from \"../../../routers/MainRouter\";\r\nimport { appOperator } from \"../../../util/app.operator\";\r\nimport { logger } from \"../../../util/logger\";\r\nimport { NewRectButtonWithChildren } from \"../../common/buttons/RectButtonCustom\";\r\nimport Container from \"../../common/containers/SafeAreaWithAnimatedVerticalScrollView\";\r\nimport styles from \"../../common/styles\";\r\nimport LoginPage from \"./userForms\";\r\n\r\nexport type navigationProp = StackNavigationProp<\r\n  MainRouterStackParamList,\r\n  \"user\"\r\n>\r\ntype routeProp = RouteProp<MainRouterStackParamList, \"user\">;\r\n\r\ninterface props {\r\n  navigation: navigationProp\r\n  route: routeProp;\r\n}\r\nconst UserScreen = ({ navigation }: props) => {\r\n  const log = new logger(\"user profile\")\r\n  const [userPageView, setUserPageView] = useState(\"LOGIN\")\r\n\r\n\r\n\r\n  if (userPageView == \"USER\")\r\n    return (\r\n      <Container style={{ backgroundColor: \"#fff\", paddingHorizontal: 15 }}>\r\n        <View /* Sec2: header button container*/\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            height: 60\r\n          }}>\r\n          <NewRectButtonWithChildren /* Sec3: back button */\r\n            style={{\r\n              //backgroundColor: \"green\"\r\n            }}\r\n            onPress={() => {\r\n              if (navigation.canGoBack())\r\n                navigation.pop()\r\n              else {\r\n                navigation.replace(\"pairing\")\r\n              }\r\n            }}>\r\n            <Ionicons style={{}} name=\"ios-arrow-back\" size={30} color=\"#222\" />\r\n          </NewRectButtonWithChildren>\r\n          <NewRectButtonWithChildren /* Sec3: logoutButton */\r\n            style={{\r\n              //backgroundColor: \"red\"\r\n            }}\r\n            onPress={() => {\r\n              appOperator.user({\r\n                cmd: \"LOGOUT\",\r\n                onLogout: () => {\r\n                  log?.print(\"user logged out\")\r\n                }\r\n              })\r\n            }}>\r\n            <View\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                alignItems: \"center\",\r\n                //backgroundColor: \"red\"\r\n              }}>\r\n              <Text style={[styles.H5]}>Logout</Text>\r\n              <AntDesign style={{}} name=\"logout\" size={28} color=\"#222\" />\r\n            </View>\r\n          </NewRectButtonWithChildren>\r\n        </View>\r\n        <View /* Sec2: page heading text container */\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-between\",\r\n            height: 50,\r\n            //backgroundColor: \"red\"\r\n          }}>\r\n          <Text style={{ color: \"#222\", fontSize: 35, fontWeight: \"bold\" }}>Settings</Text>\r\n          <NewRectButtonWithChildren /* Sec3: back button */\r\n            style={{\r\n              //backgroundColor: \"green\"\r\n            }}\r\n            onPress={() => {\r\n              setUserPageView(\"UPDATE\")\r\n            }}>\r\n            <FontAwesome style={{}} name=\"edit\" size={30} color=\"#222\" />\r\n          </NewRectButtonWithChildren>\r\n        </View>\r\n        <View style={{ alignItems: \"center\", marginTop: 50 }}>\r\n          <FontAwesome name=\"user\" size={100} color=\"#222\" />\r\n          <Text>[testemail]</Text>\r\n          <Text>[testUsername]</Text>\r\n        </View>\r\n        <View style={{}}>\r\n          <CustomTextField style={{ marginTop: 30 }} heading=\"Full Name\" primaryColor=\"#777\" />\r\n          <CustomTextField style={{ marginTop: 25 }} heading=\"email\" primaryColor=\"#777\" />\r\n        </View>\r\n        <View style={{\r\n          marginTop: 50,\r\n          borderWidth: 0.3,\r\n          //borderColor: \"#777\",\r\n          borderRadius: 25,\r\n          overflow: \"hidden\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}>\r\n          <Text style={{ color: \"#777\", fontWeight: \"bold\" }}>Coming Next</Text>\r\n          <Image style={{ width: \"100%\" }} source={require(\"../../../../assets/images/usageMeter.png\")} />\r\n        </View>\r\n        {/*  <View style={{ alignItems: \"center\", paddingVertical: 20 }}>\r\n        <Image style={{ height: 150, width: 150, opacity: 0.3 }} source={require(\"../../../../assets/icons/icon.png\")} />\r\n      </View> */}\r\n      </Container>\r\n    );\r\n  else\r\n    return (\r\n      <LoginPage\r\n        log={new logger(\"LOGIN/SIGNUP/UPDATE\", log)}\r\n        navigation={navigation}\r\n        userPageView={userPageView}\r\n        setUserPageView={setUserPageView} />\r\n    )\r\n};\r\n\r\nexport default UserScreen\r\n\r\n\r\ninterface TextFieldProps {\r\n  heading?: string\r\n  placeholder?: string\r\n  style?: StyleProp<ViewStyle>\r\n  primaryColor?: string\r\n}\r\nconst CustomTextField = ({ heading, placeholder, style, primaryColor = \"#000000\" }: TextFieldProps) => {\r\n  return (\r\n    <View style={[{}, style]}>\r\n      <Text style={{ marginLeft: 15, color: primaryColor, fontWeight: \"bold\" }}>{heading}</Text>\r\n      <View style={{ borderWidth: 0.5, borderRadius: 10, borderColor: primaryColor }}>\r\n        <TextInput style={{ height: 50, marginHorizontal: 10, fontSize: 15, color: primaryColor }} placeholder={placeholder} />\r\n      </View>\r\n    </View>\r\n  )\r\n}","import { createStackNavigator, StackNavigationProp } from \"@react-navigation/stack\";\r\nimport React from \"react\";\r\nimport UNIVERSALS from \"../@universals\";\r\nimport AppConfigScreen from \"../components/screens/appConfig\";\r\nimport { Dashboard } from \"../components/screens/dashboard\";\r\nimport DevicePage from \"../components/screens/devicePage\";\r\nimport { WelcomeScreen } from \"../components/screens/onboarding/WelcomeScreen\";\r\nimport { pairingRouter } from \"../components/screens/pairing\";\r\nimport UserProfileScreen from \"../components/screens/userProfile\";\r\nimport { deviceContainerType } from \"../util/dummyData/DummyData\";\r\n\r\nexport type MainRouterStackParamList = {\r\n  //login_signup: undefined;\r\n  onboarding: undefined;\r\n  pairing: undefined;\r\n  //DashboardRouter: undefined;\r\n  config: undefined;\r\n  user: undefined;\r\n  dashboard: undefined;\r\n  devicePage: { device: UNIVERSALS.GLOBALS.DEVICE_t };\r\n  deviceObjectPage: { group: deviceContainerType };\r\n};\r\n\r\nexport type MainRouterNavigationProp = StackNavigationProp<MainRouterStackParamList>;\r\nconst Stack = createStackNavigator<MainRouterStackParamList>();\r\nconst MainRouter = (props: any) => {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName={props.initialScreen ? props.initialScreen : \"DashboardRouter\"}\r\n      //initialRouteName=\"user\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n        cardStyle: {\r\n          opacity: 1,\r\n          backgroundColor: \"#fff\",\r\n        },\r\n      }}\r\n    >\r\n      {/* <Stack.Screen name=\"login_signup\" component={GetStarted} /> */}\r\n      <Stack.Screen name=\"onboarding\" component={WelcomeScreen} />\r\n      <Stack.Screen name=\"pairing\" component={pairingRouter} />\r\n      <Stack.Screen name=\"dashboard\" component={Dashboard} />\r\n      <Stack.Screen name=\"config\" component={AppConfigScreen} />\r\n      <Stack.Screen name=\"user\" component={UserProfileScreen} />\r\n      <Stack.Screen\r\n        name=\"devicePage\"\r\n        component={DevicePage}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default MainRouter;\r\n","import React from \"react\";\r\nimport { reduxStore } from \"./redux\";\r\nimport MainRouter from \"./routers/MainRouter\";\r\n\r\n\r\n\r\n\r\ninterface App_i { }\r\nconst Application = ({ }: App_i) => {\r\n\r\n  /* const initialScreen = reduxStore.store.getState().appCTXReducer.user?.email\r\n    ? reduxStore.store.getState().deviceReducer.deviceList?.length ? \"dashboard\" : \"pairing\"\r\n    : \"onboarding\"; */\r\n  //const initialScreen = reduxStore.store.getState().deviceReducer.deviceList?.length ? \"dashboard\" : \"pairing\"\r\n  const initialScreen = reduxStore.store.getState().appCTXReducer.user?.email\r\n    ? reduxStore.store.getState().deviceReducer.deviceList.length\r\n      ? \"dashboard\"\r\n      : \"pairing\"\r\n    : \"login_signup\"\r\n\r\n  return <MainRouter initialScreen={initialScreen} />;\r\n};\r\n\r\n\r\nexport default Application","\r\nimport { reduxStore } from \"../../redux\";\r\nimport { logger } from \"../../util/logger\";\r\nimport { bgServiceSagaAction } from \"../../redux/helperSideEffect/saga/bgServiceSaga\"\r\n\r\nexport default class {\r\n    iteration = 0\r\n    interval = 3000\r\n    id = Math.floor(Math.random() * 10001);\r\n    log;\r\n    timerFun: any/* NodeJS.Timeout | undefined */\r\n\r\n    runner = () => {\r\n        //this.log?.print(\"--\")\r\n        this._dispatchBgSagaAction()\r\n    }\r\n\r\n    clearInterval = () => {\r\n        if (this.timerFun != undefined) {\r\n            this.log?.print(\"clearing BGService Interval\")\r\n            clearInterval(this.timerFun)\r\n            this.timerFun = undefined\r\n        }\r\n    }\r\n\r\n    _dispatchBgSagaAction = () => {\r\n        reduxStore.store.dispatch(bgServiceSagaAction({ iteration: this.iteration, log: this.log ? new logger(\"bg service saga\", this.log) : undefined }))\r\n        this.iteration = this.iteration < 2000 ? this.iteration + 1 : 1000\r\n    }\r\n\r\n    startInterval = () => {\r\n        if (this.timerFun === undefined) {\r\n            this._dispatchBgSagaAction()\r\n            this.log?.print(\"starting BGService Interval\")\r\n            this.timerFun = setInterval(this.runner, this.interval)\r\n        }\r\n    }\r\n\r\n    constructor({ interval, log }: constructor_props) {\r\n        this.log = log\r\n        if (interval)\r\n            this.interval = interval\r\n    }\r\n}\r\n\r\ninterface constructor_props {\r\n    interval?: number\r\n    log?: logger\r\n}","//@ts-ignore\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport { ActionSheetProvider } from '@expo/react-native-action-sheet';\nimport { NavigationContainer } from \"@react-navigation/native\";\n//@ts-ignore\nimport AppLoading from \"expo-app-loading\";\nimport * as SplashScreen from \"expo-splash-screen\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { Text } from \"react-native\";\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\nimport { Provider } from \"react-redux\";\n//import \"react-native-gesture-handler\"; // TODO this was recommended to be imported in app.js for proper functioning og gesture handler acroose the application\nimport Application from \"./src/Application\";\nimport { reduxStore } from \"./src/redux\";\nimport BGService from \"./src/services/backGroundServices\";\nimport { getData, storeData } from \"./src/services/db/storage\";\nimport { logger } from \"./src/util/logger\";\n\n//LogBox.ignoreAllLogs(true)\n\n//TODO LogBox.ignoreAllLogs(true);\n\n//EXP: Create the client as outlined in the setup guide\nconst client = new ApolloClient({\n  uri: \"http://192.168.1.6\",\n  cache: new InMemoryCache(),\n});\n\nexport default function App() {\n  const log = new logger(\"MAIN ACTIVITY\")\n  const [appLoading, setAppLoading] = useState(true);\n  const [appCTX, setappCTX] = useState<any>(undefined);\n  const bgService = useMemo(() => new BGService({ interval: 6000, log: new logger(\"bg service\", log) }), [])\n  const linking = {\n    prefixes: ['https://app.example.com', 'hueliteapp://'],\n    config: {\n      screens: {\n        getStarted: \"getstarted\"\n      }\n    }\n  };\n\n  const loadAppData = async () => {\n\n\n    //EXP: store dummy data in storage\n    //log(\"Dummy Data data ::  \" + JSON.stringify(HallRGBGroupDummyData));\n    //await storeData(\"deviceList\", HallRGBGroupDummyData);\n    //EXP: remove data from storage\n    //await storeData(\"deviceList\", null);//REMOVE\n    //await storeData(\"appCTX\", null);//REMOVE\n\n    /* if (window.matchMedia('(display-mode: standalone)').matches) {\n      console.log(\"This is running as standalone.\");\n    } else if (window.matchMedia('(display-mode: browser)').matches) {\n      console.log(\"This is running as browser.\");\n    }\n    else {\n      console.log(\"This is not running as standalone.\");\n    } */\n\n\n    const deletedDeviceList = await getData(\"deletedDeviceList\")\n    if (deletedDeviceList) {\n      log.print(\"deletedDeviceList \" + JSON.stringify(deletedDeviceList, null, 1))\n      reduxStore.store.dispatch(reduxStore.actions.deviceList.deletedDeviceListRedux({ deletedDeviceList, isDbState: true }))\n    }\n\n    const deviceList = await getData(\"deviceList\");\n    log.print(\"deviceList data ::  \" + JSON.stringify(deviceList));\n    if (deviceList)\n      reduxStore.store.dispatch(reduxStore.actions.deviceList.deviceListRedux({ deviceList }));\n\n    const _appCTX = await getData(\"appCTX\");\n    log.print(\"[APPCTX] >>\" + JSON.stringify(_appCTX))\n    if (_appCTX) {\n      log.print(\"appCTX is  \" + JSON.stringify(_appCTX));\n      setappCTX(_appCTX)\n      reduxStore.store.dispatch(reduxStore.actions.appCTX.appCtxSagaAction({ data: _appCTX, saveToDB: false /*, log */ }));\n    }\n    else\n      setappCTX({})\n    setTimeout(async () => {\n      await SplashScreen.hideAsync();\n      bgService.startInterval()\n      setAppLoading(false);\n    }, 100);\n  }\n\n  useEffect(() => {\n    try {\n      SplashScreen.preventAutoHideAsync();\n    } catch (e) { }\n    loadAppData();\n    return () => {\n      bgService.clearInterval()\n    }\n  }, [])\n\n\n\n  if (appLoading) return <AppLoading />;\n  return (\n    <ApolloProvider client={client}>\n      <Provider store={reduxStore.store}>\n        <NavigationContainer /* linking={linking}  */ fallback={<Text>Loading...</Text>}>\n          {/*  <BackgroundService /> */}\n          <SafeAreaProvider>\n            <ActionSheetProvider>\n              <Application />\n            </ActionSheetProvider>\n          </SafeAreaProvider>\n          <StatusBar style=\"light\"/*  hidden={true} */ />\n        </NavigationContainer>\n      </Provider>\n    </ApolloProvider>\n  );\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/splash-icon.642f417a.png\";","module.exports = __webpack_public_path__ + \"static/media/background.76e3813d.jpg\";","import React, { Component } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport { View } from 'react-native';\r\n\r\n// create and get reference to Modal DOM node\r\nconst appRoot = document.getElementById('root');\r\nappRoot?.insertAdjacentHTML('afterend', '<div id=\"modal-root\"></div>');\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\ninterface Props {\r\n    transparent?: any,\r\n    animationType?: string\r\n    visible?: boolean\r\n}\r\nclass InnerModal extends Component<Props, { top: string }> {\r\n    el: any = undefined\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.el = document.createElement('div');\r\n        this.state = {\r\n            top: \"100%\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // https://reactjs.org/docs/portals.html\r\n\r\n        // The portal element is inserted in the DOM tree after\r\n        // the Modal's children are mounted, meaning that children\r\n        // will be mounted on a detached DOM node. If a child\r\n        // component requires to be attached to the DOM tree\r\n        // immediately when mounted, for example to measure a\r\n        // DOM node, or uses 'autoFocus' in a descendant, add\r\n        // state to Modal and only render the children when Modal\r\n        // is inserted in the DOM tree.\r\n        modalRoot?.appendChild(this.el);\r\n        this.setState({ top: \"0%\" })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        modalRoot?.removeChild(this.el);\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div style={{\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                display: 'flex',\r\n                flexDirection: \"column\",\r\n                margin: 0,\r\n                padding: 0,\r\n                zIndex: 100,\r\n                position: 'absolute',\r\n                left: 0,\r\n                top: this.state.top,\r\n                flex: 1,\r\n                height: \"100%\",\r\n                width: \"100%\",\r\n                backgroundColor: this.props.transparent ? 'transparent' : 'white',\r\n                transition: \"top 2s\"\r\n            }}>\r\n                {this.props.children}\r\n            </div>,\r\n            this.el,\r\n        );\r\n    }\r\n}\r\n\r\nexport default class Modal extends Component<Props, any> {\r\n    render() {\r\n        if (this.props.visible) {\r\n            return <InnerModal {...this.props} />;\r\n        }\r\n        return null;\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/1.0b297109.png\";","module.exports = __webpack_public_path__ + \"static/media/colorPicker.116187dc.png\";","module.exports = __webpack_public_path__ + \"static/media/preset.696f2cd2.png\";","module.exports = __webpack_public_path__ + \"static/media/setting.97214bba.png\";","module.exports = __webpack_public_path__ + \"static/media/aurora.d7429eea.png\";","module.exports = __webpack_public_path__ + \"static/media/autumn.c72bcc06.png\";","module.exports = __webpack_public_path__ + \"static/media/deepocean.0aee9a72.png\";","module.exports = __webpack_public_path__ + \"static/media/spring1.f58006c7.png\";","module.exports = __webpack_public_path__ + \"static/media/sunrise.a239aa8e.png\";","module.exports = __webpack_public_path__ + \"static/media/sunset.8780ce1b.png\";","module.exports = __webpack_public_path__ + \"static/media/winter.cdc1f980.png\";","module.exports = __webpack_public_path__ + \"static/media/OB_3.09f592d0.png\";","module.exports = __webpack_public_path__ + \"static/media/OB_4.7d8c9d8f.png\";","module.exports = __webpack_public_path__ + \"static/media/OB_2.7d402914.png\";","module.exports = __webpack_public_path__ + \"static/media/OB_1.f30516fd.png\";","module.exports = __webpack_public_path__ + \"static/media/testIMG.922f6a75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/usageMeter.42872b19.png\";"],"sourceRoot":""}